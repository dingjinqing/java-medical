/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.MemberCardRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberCard extends TableImpl<MemberCardRecord> {

    private static final long serialVersionUID = -882342801;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_member_card</code>
     */
    public static final MemberCard MEMBER_CARD = new MemberCard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemberCardRecord> getRecordType() {
        return MemberCardRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_member_card.id</code>.
     */
    public final TableField<MemberCardRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.card_name</code>.
     */
    public final TableField<MemberCardRecord, String> CARD_NAME = createField("card_name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.card_type</code>. 0:普通会员卡，1:次卡,2:登记卡
     */
    public final TableField<MemberCardRecord, Byte> CARD_TYPE = createField("card_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:普通会员卡，1:次卡,2:登记卡");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.bg_type</code>. 0:背景色，1:背景图
     */
    public final TableField<MemberCardRecord, Byte> BG_TYPE = createField("bg_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:背景色，1:背景图");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.bg_color</code>. 背景色
     */
    public final TableField<MemberCardRecord, String> BG_COLOR = createField("bg_color", org.jooq.impl.SQLDataType.CHAR(10), this, "背景色");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.bg_img</code>. 背景图
     */
    public final TableField<MemberCardRecord, String> BG_IMG = createField("bg_img", org.jooq.impl.SQLDataType.VARCHAR(100), this, "背景图");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.discount</code>. 折扣
     */
    public final TableField<MemberCardRecord, BigDecimal> DISCOUNT = createField("discount", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "折扣");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.sorce</code>. 开卡送积分
     */
    public final TableField<MemberCardRecord, Integer> SORCE = createField("sorce", org.jooq.impl.SQLDataType.INTEGER, this, "开卡送积分");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.buy_score</code>. 购物送积分策略json数据
     */
    public final TableField<MemberCardRecord, String> BUY_SCORE = createField("buy_score", org.jooq.impl.SQLDataType.CLOB, this, "购物送积分策略json数据");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.expire_type</code>. 0:固定日期 1：自领取之日起 2:不过期
     */
    public final TableField<MemberCardRecord, Byte> EXPIRE_TYPE = createField("expire_type", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:固定日期 1：自领取之日起 2:不过期");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.start_time</code>. 开始日期
     */
    public final TableField<MemberCardRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "开始日期");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.end_time</code>. 结束日期
     */
    public final TableField<MemberCardRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "结束日期");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.receive_day</code>. 领取之日起N
     */
    public final TableField<MemberCardRecord, Integer> RECEIVE_DAY = createField("receive_day", org.jooq.impl.SQLDataType.INTEGER, this, "领取之日起N");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.date_type</code>. 0:日，1:周 2: 月
     */
    public final TableField<MemberCardRecord, Byte> DATE_TYPE = createField("date_type", org.jooq.impl.SQLDataType.TINYINT, this, "0:日，1:周 2: 月");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.activation</code>. 0：不用激活，1：需要激活
     */
    public final TableField<MemberCardRecord, Byte> ACTIVATION = createField("activation", org.jooq.impl.SQLDataType.TINYINT, this, "0：不用激活，1：需要激活");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.receive_code</code>. 领取码
     */
    public final TableField<MemberCardRecord, String> RECEIVE_CODE = createField("receive_code", org.jooq.impl.SQLDataType.CHAR(10), this, "领取码");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.desc</code>. 使用须知
     */
    public final TableField<MemberCardRecord, String> DESC = createField("desc", org.jooq.impl.SQLDataType.CLOB, this, "使用须知");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.mobile</code>. 联系电话
     */
    public final TableField<MemberCardRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.CHAR(11), this, "联系电话");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.add_time</code>. 添加时间
     */
    public final TableField<MemberCardRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "添加时间");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.up_time</code>. 更新时间
     */
    public final TableField<MemberCardRecord, Timestamp> UP_TIME = createField("up_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.flag</code>. 1:使用中，2:停止使用
     */
    public final TableField<MemberCardRecord, Byte> FLAG = createField("flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "1:使用中，2:停止使用");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.send_money</code>. 开卡送钱
     */
    public final TableField<MemberCardRecord, Integer> SEND_MONEY = createField("send_money", org.jooq.impl.SQLDataType.INTEGER, this, "开卡送钱");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.charge_money</code>. 充值活动策略
     */
    public final TableField<MemberCardRecord, String> CHARGE_MONEY = createField("charge_money", org.jooq.impl.SQLDataType.CLOB, this, "充值活动策略");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.use_time</code>. 使用时间 1工作日 2双休 0不限制
     */
    public final TableField<MemberCardRecord, Integer> USE_TIME = createField("use_time", org.jooq.impl.SQLDataType.INTEGER, this, "使用时间 1工作日 2双休 0不限制");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.store_list</code>. 可用门店
     */
    public final TableField<MemberCardRecord, String> STORE_LIST = createField("store_list", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("{}", org.jooq.impl.SQLDataType.VARCHAR)), this, "可用门店");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.count</code>. 卡总次数
     */
    public final TableField<MemberCardRecord, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER, this, "卡总次数");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.is_delete</code>. 1为删除状态
     */
    public final TableField<MemberCardRecord, Byte> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1为删除状态");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.grade</code>. 等级卡的等级
     */
    public final TableField<MemberCardRecord, String> GRADE = createField("grade", org.jooq.impl.SQLDataType.CHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "等级卡的等级");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.grade_condition</code>. 等级卡的条件
     */
    public final TableField<MemberCardRecord, String> GRADE_CONDITION = createField("grade_condition", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "等级卡的条件");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.activation_cfg</code>. 激活信息配置
     */
    public final TableField<MemberCardRecord, String> ACTIVATION_CFG = createField("activation_cfg", org.jooq.impl.SQLDataType.VARCHAR(200), this, "激活信息配置");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.examine</code>. 是否审核 0不审核 1审核
     */
    public final TableField<MemberCardRecord, Byte> EXAMINE = createField("examine", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否审核 0不审核 1审核");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.discount_goods_id</code>. 折扣商品ID
     */
    public final TableField<MemberCardRecord, String> DISCOUNT_GOODS_ID = createField("discount_goods_id", org.jooq.impl.SQLDataType.VARCHAR(299), this, "折扣商品ID");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.discount_cat_id</code>. 折扣平台分类ID
     */
    public final TableField<MemberCardRecord, String> DISCOUNT_CAT_ID = createField("discount_cat_id", org.jooq.impl.SQLDataType.VARCHAR(299), this, "折扣平台分类ID");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.discount_sort_id</code>. 折扣商家分类ID
     */
    public final TableField<MemberCardRecord, String> DISCOUNT_SORT_ID = createField("discount_sort_id", org.jooq.impl.SQLDataType.VARCHAR(299), this, "折扣商家分类ID");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.discount_is_all</code>. 折扣商品范围： 0:部分商品，1:全部商品
     */
    public final TableField<MemberCardRecord, Byte> DISCOUNT_IS_ALL = createField("discount_is_all", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "折扣商品范围： 0:部分商品，1:全部商品");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.is_pay</code>. 0:直接购买 1:需要购买 2: 需要领取码
     */
    public final TableField<MemberCardRecord, Byte> IS_PAY = createField("is_pay", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:直接购买 1:需要购买 2: 需要领取码");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.pay_type</code>. 0:不支持现金购买，1:支持现金购买
     */
    public final TableField<MemberCardRecord, Byte> PAY_TYPE = createField("pay_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:不支持现金购买，1:支持现金购买");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.pay_fee</code>. 购买资金
     */
    public final TableField<MemberCardRecord, BigDecimal> PAY_FEE = createField("pay_fee", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "购买资金");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.pay_own_good</code>. 是否专属购买商品 0不是 1是
     */
    public final TableField<MemberCardRecord, Byte> PAY_OWN_GOOD = createField("pay_own_good", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否专属购买商品 0不是 1是");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.receive_action</code>. 领取方式 1:领取码 2：卡号+密码
     */
    public final TableField<MemberCardRecord, Byte> RECEIVE_ACTION = createField("receive_action", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "领取方式 1:领取码 2：卡号+密码");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.is_exchang</code>. 0不可 1部分 2全部
     */
    public final TableField<MemberCardRecord, Byte> IS_EXCHANG = createField("is_exchang", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0不可 1部分 2全部");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.store_use_switch</code>. 可否在门店使用  0可以 1不可以
     */
    public final TableField<MemberCardRecord, Byte> STORE_USE_SWITCH = createField("store_use_switch", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "可否在门店使用  0可以 1不可以");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.exchang_goods</code>. 可兑换商品id
     */
    public final TableField<MemberCardRecord, String> EXCHANG_GOODS = createField("exchang_goods", org.jooq.impl.SQLDataType.VARCHAR(299), this, "可兑换商品id");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.exchang_freight</code>. 运费策略 0免运费 1使用商品运费策略
     */
    public final TableField<MemberCardRecord, Byte> EXCHANG_FREIGHT = createField("exchang_freight", org.jooq.impl.SQLDataType.TINYINT, this, "运费策略 0免运费 1使用商品运费策略");

    /**
     * The column <code>mini_shop_471752.b2c_member_card.exchang_count</code>. 允许兑换次数
     */
    public final TableField<MemberCardRecord, Integer> EXCHANG_COUNT = createField("exchang_count", org.jooq.impl.SQLDataType.INTEGER, this, "允许兑换次数");

    /**
     * Create a <code>mini_shop_471752.b2c_member_card</code> table reference
     */
    public MemberCard() {
        this(DSL.name("b2c_member_card"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_member_card</code> table reference
     */
    public MemberCard(String alias) {
        this(DSL.name(alias), MEMBER_CARD);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_member_card</code> table reference
     */
    public MemberCard(Name alias) {
        this(alias, MEMBER_CARD);
    }

    private MemberCard(Name alias, Table<MemberCardRecord> aliased) {
        this(alias, aliased, null);
    }

    private MemberCard(Name alias, Table<MemberCardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MemberCard(Table<O> child, ForeignKey<O, MemberCardRecord> key) {
        super(child, key, MEMBER_CARD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MEMBER_CARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MemberCardRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MEMBER_CARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MemberCardRecord> getPrimaryKey() {
        return Keys.KEY_B2C_MEMBER_CARD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MemberCardRecord>> getKeys() {
        return Arrays.<UniqueKey<MemberCardRecord>>asList(Keys.KEY_B2C_MEMBER_CARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberCard as(String alias) {
        return new MemberCard(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberCard as(Name alias) {
        return new MemberCard(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberCard rename(String name) {
        return new MemberCard(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberCard rename(Name name) {
        return new MemberCard(name, null);
    }
}
