/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BackProcess implements Serializable {

    private static final long serialVersionUID = -867704404;

    private Integer   recId;
    private Integer   shopId;
    private Integer   processId;
    private String    jobName;
    private String    className;
    private String    parameters;
    private Byte      state;
    private String    failReason;
    private Byte      onlyRunOne;
    private Short     progress;
    private String    progressInfo;
    private Timestamp endTime;
    private Integer   jobCode;
    private String    jobMessage;
    private String    jobResult;
    private String    memo;
    private Timestamp created;

    public BackProcess() {}

    public BackProcess(BackProcess value) {
        this.recId = value.recId;
        this.shopId = value.shopId;
        this.processId = value.processId;
        this.jobName = value.jobName;
        this.className = value.className;
        this.parameters = value.parameters;
        this.state = value.state;
        this.failReason = value.failReason;
        this.onlyRunOne = value.onlyRunOne;
        this.progress = value.progress;
        this.progressInfo = value.progressInfo;
        this.endTime = value.endTime;
        this.jobCode = value.jobCode;
        this.jobMessage = value.jobMessage;
        this.jobResult = value.jobResult;
        this.memo = value.memo;
        this.created = value.created;
    }

    public BackProcess(
        Integer   recId,
        Integer   shopId,
        Integer   processId,
        String    jobName,
        String    className,
        String    parameters,
        Byte      state,
        String    failReason,
        Byte      onlyRunOne,
        Short     progress,
        String    progressInfo,
        Timestamp endTime,
        Integer   jobCode,
        String    jobMessage,
        String    jobResult,
        String    memo,
        Timestamp created
    ) {
        this.recId = recId;
        this.shopId = shopId;
        this.processId = processId;
        this.jobName = jobName;
        this.className = className;
        this.parameters = parameters;
        this.state = state;
        this.failReason = failReason;
        this.onlyRunOne = onlyRunOne;
        this.progress = progress;
        this.progressInfo = progressInfo;
        this.endTime = endTime;
        this.jobCode = jobCode;
        this.jobMessage = jobMessage;
        this.jobResult = jobResult;
        this.memo = memo;
        this.created = created;
    }

    public Integer getRecId() {
        return this.recId;
    }

    public void setRecId(Integer recId) {
        this.recId = recId;
    }

    public Integer getShopId() {
        return this.shopId;
    }

    public void setShopId(Integer shopId) {
        this.shopId = shopId;
    }

    public Integer getProcessId() {
        return this.processId;
    }

    public void setProcessId(Integer processId) {
        this.processId = processId;
    }

    public String getJobName() {
        return this.jobName;
    }

    public void setJobName(String jobName) {
        this.jobName = jobName;
    }

    public String getClassName() {
        return this.className;
    }

    public void setClassName(String className) {
        this.className = className;
    }

    public String getParameters() {
        return this.parameters;
    }

    public void setParameters(String parameters) {
        this.parameters = parameters;
    }

    public Byte getState() {
        return this.state;
    }

    public void setState(Byte state) {
        this.state = state;
    }

    public String getFailReason() {
        return this.failReason;
    }

    public void setFailReason(String failReason) {
        this.failReason = failReason;
    }

    public Byte getOnlyRunOne() {
        return this.onlyRunOne;
    }

    public void setOnlyRunOne(Byte onlyRunOne) {
        this.onlyRunOne = onlyRunOne;
    }

    public Short getProgress() {
        return this.progress;
    }

    public void setProgress(Short progress) {
        this.progress = progress;
    }

    public String getProgressInfo() {
        return this.progressInfo;
    }

    public void setProgressInfo(String progressInfo) {
        this.progressInfo = progressInfo;
    }

    public Timestamp getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Timestamp endTime) {
        this.endTime = endTime;
    }

    public Integer getJobCode() {
        return this.jobCode;
    }

    public void setJobCode(Integer jobCode) {
        this.jobCode = jobCode;
    }

    public String getJobMessage() {
        return this.jobMessage;
    }

    public void setJobMessage(String jobMessage) {
        this.jobMessage = jobMessage;
    }

    public String getJobResult() {
        return this.jobResult;
    }

    public void setJobResult(String jobResult) {
        this.jobResult = jobResult;
    }

    public String getMemo() {
        return this.memo;
    }

    public void setMemo(String memo) {
        this.memo = memo;
    }

    public Timestamp getCreated() {
        return this.created;
    }

    public void setCreated(Timestamp created) {
        this.created = created;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BackProcess (");

        sb.append(recId);
        sb.append(", ").append(shopId);
        sb.append(", ").append(processId);
        sb.append(", ").append(jobName);
        sb.append(", ").append(className);
        sb.append(", ").append(parameters);
        sb.append(", ").append(state);
        sb.append(", ").append(failReason);
        sb.append(", ").append(onlyRunOne);
        sb.append(", ").append(progress);
        sb.append(", ").append(progressInfo);
        sb.append(", ").append(endTime);
        sb.append(", ").append(jobCode);
        sb.append(", ").append(jobMessage);
        sb.append(", ").append(jobResult);
        sb.append(", ").append(memo);
        sb.append(", ").append(created);

        sb.append(")");
        return sb.toString();
    }
}
