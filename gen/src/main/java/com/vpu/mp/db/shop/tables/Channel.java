/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.ChannelRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Channel extends TableImpl<ChannelRecord> {

    private static final long serialVersionUID = -451899875;

    /**
     * The reference instance of <code>mini_shop_1.b2c_channel</code>
     */
    public static final Channel CHANNEL = new Channel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChannelRecord> getRecordType() {
        return ChannelRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_channel.id</code>. 渠道页ID
     */
    public final TableField<ChannelRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "渠道页ID");

    /**
     * The column <code>mini_shop_1.b2c_channel.page_id</code>. page_id
     */
    public final TableField<ChannelRecord, UInteger> PAGE_ID = createField("page_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "page_id");

    /**
     * The column <code>mini_shop_1.b2c_channel.goods_id</code>. goods_id
     */
    public final TableField<ChannelRecord, UInteger> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "goods_id");

    /**
     * The column <code>mini_shop_1.b2c_channel.channel_name</code>. 渠道页名称
     */
    public final TableField<ChannelRecord, String> CHANNEL_NAME = createField("channel_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "渠道页名称");

    /**
     * The column <code>mini_shop_1.b2c_channel.source_type</code>. 来源类型 0自定义 1商品
     */
    public final TableField<ChannelRecord, Byte> SOURCE_TYPE = createField("source_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "来源类型 0自定义 1商品");

    /**
     * The column <code>mini_shop_1.b2c_channel.share</code>. 分享码
     */
    public final TableField<ChannelRecord, String> SHARE = createField("share", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "分享码");

    /**
     * The column <code>mini_shop_1.b2c_channel.del_flag</code>. 0正常，1废除
     */
    public final TableField<ChannelRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0正常，1废除");

    /**
     * The column <code>mini_shop_1.b2c_channel.add_time</code>.
     */
    public final TableField<ChannelRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>mini_shop_1.b2c_channel</code> table reference
     */
    public Channel() {
        this(DSL.name("b2c_channel"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_channel</code> table reference
     */
    public Channel(String alias) {
        this(DSL.name(alias), CHANNEL);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_channel</code> table reference
     */
    public Channel(Name alias) {
        this(alias, CHANNEL);
    }

    private Channel(Name alias, Table<ChannelRecord> aliased) {
        this(alias, aliased, null);
    }

    private Channel(Name alias, Table<ChannelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Channel(Table<O> child, ForeignKey<O, ChannelRecord> key) {
        super(child, key, CHANNEL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CHANNEL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ChannelRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_CHANNEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ChannelRecord> getPrimaryKey() {
        return Keys.KEY_B2C_CHANNEL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ChannelRecord>> getKeys() {
        return Arrays.<UniqueKey<ChannelRecord>>asList(Keys.KEY_B2C_CHANNEL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Channel as(String alias) {
        return new Channel(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Channel as(Name alias) {
        return new Channel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Channel rename(String name) {
        return new Channel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Channel rename(Name name) {
        return new Channel(name, null);
    }
}
