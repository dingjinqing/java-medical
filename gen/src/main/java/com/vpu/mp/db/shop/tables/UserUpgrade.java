/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.UserUpgradeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserUpgrade extends TableImpl<UserUpgradeRecord> {

    private static final long serialVersionUID = 1118139381;

    /**
     * The reference instance of <code>mini_shop_1.b2c_user_upgrade</code>
     */
    public static final UserUpgrade USER_UPGRADE = new UserUpgrade();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserUpgradeRecord> getRecordType() {
        return UserUpgradeRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_user_upgrade.id</code>.
     */
    public final TableField<UserUpgradeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_1.b2c_user_upgrade.user_id</code>.
     */
    public final TableField<UserUpgradeRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_1.b2c_user_upgrade.shop_id</code>. 店铺ID
     */
    public final TableField<UserUpgradeRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_shop_1.b2c_user_upgrade.grade_id</code>.
     */
    public final TableField<UserUpgradeRecord, Integer> GRADE_ID = createField("grade_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_1.b2c_user_upgrade.grade</code>.
     */
    public final TableField<UserUpgradeRecord, String> GRADE = createField("grade", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>mini_shop_1.b2c_user_upgrade.grade_name</code>.
     */
    public final TableField<UserUpgradeRecord, String> GRADE_NAME = createField("grade_name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>mini_shop_1.b2c_user_upgrade.in_time</code>.
     */
    public final TableField<UserUpgradeRecord, Timestamp> IN_TIME = createField("in_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>mini_shop_1.b2c_user_upgrade</code> table reference
     */
    public UserUpgrade() {
        this(DSL.name("b2c_user_upgrade"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_user_upgrade</code> table reference
     */
    public UserUpgrade(String alias) {
        this(DSL.name(alias), USER_UPGRADE);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_user_upgrade</code> table reference
     */
    public UserUpgrade(Name alias) {
        this(alias, USER_UPGRADE);
    }

    private UserUpgrade(Name alias, Table<UserUpgradeRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserUpgrade(Name alias, Table<UserUpgradeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserUpgrade(Table<O> child, ForeignKey<O, UserUpgradeRecord> key) {
        super(child, key, USER_UPGRADE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_UPGRADE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserUpgradeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_UPGRADE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserUpgradeRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_UPGRADE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserUpgradeRecord>> getKeys() {
        return Arrays.<UniqueKey<UserUpgradeRecord>>asList(Keys.KEY_B2C_USER_UPGRADE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserUpgrade as(String alias) {
        return new UserUpgrade(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserUpgrade as(Name alias) {
        return new UserUpgrade(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserUpgrade rename(String name) {
        return new UserUpgrade(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserUpgrade rename(Name name) {
        return new UserUpgrade(name, null);
    }
}
