/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables.records;


import com.vpu.mp.db.shop.tables.DistributorGroup;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DistributorGroupRecord extends UpdatableRecordImpl<DistributorGroupRecord> implements Record6<UInteger, String, Byte, Timestamp, Timestamp, Byte> {

    private static final long serialVersionUID = -427460677;

    /**
     * Setter for <code>mini_shop_1.b2c_distributor_group.id</code>. 分组ID
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_distributor_group.id</code>. 分组ID
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_distributor_group.group_name</code>. 分组名字
     */
    public void setGroupName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_distributor_group.group_name</code>. 分组名字
     */
    public String getGroupName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_distributor_group.is_default</code>. 是否为默认
     */
    public void setIsDefault(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_distributor_group.is_default</code>. 是否为默认
     */
    public Byte getIsDefault() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_distributor_group.add_time</code>. 添加时间
     */
    public void setAddTime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_distributor_group.add_time</code>. 添加时间
     */
    public Timestamp getAddTime() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_distributor_group.update_time</code>. 更新时间
     */
    public void setUpdateTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_distributor_group.update_time</code>. 更新时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_distributor_group.del_flag</code>. 是否删除
     */
    public void setDelFlag(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_distributor_group.del_flag</code>. 是否删除
     */
    public Byte getDelFlag() {
        return (Byte) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<UInteger, String, Byte, Timestamp, Timestamp, Byte> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<UInteger, String, Byte, Timestamp, Timestamp, Byte> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return DistributorGroup.DISTRIBUTOR_GROUP.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DistributorGroup.DISTRIBUTOR_GROUP.GROUP_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return DistributorGroup.DISTRIBUTOR_GROUP.IS_DEFAULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return DistributorGroup.DISTRIBUTOR_GROUP.ADD_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return DistributorGroup.DISTRIBUTOR_GROUP.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return DistributorGroup.DISTRIBUTOR_GROUP.DEL_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getGroupName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component3() {
        return getIsDefault();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getAddTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component6() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getGroupName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getIsDefault();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getAddTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorGroupRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorGroupRecord value2(String value) {
        setGroupName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorGroupRecord value3(Byte value) {
        setIsDefault(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorGroupRecord value4(Timestamp value) {
        setAddTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorGroupRecord value5(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorGroupRecord value6(Byte value) {
        setDelFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributorGroupRecord values(UInteger value1, String value2, Byte value3, Timestamp value4, Timestamp value5, Byte value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DistributorGroupRecord
     */
    public DistributorGroupRecord() {
        super(DistributorGroup.DISTRIBUTOR_GROUP);
    }

    /**
     * Create a detached, initialised DistributorGroupRecord
     */
    public DistributorGroupRecord(UInteger id, String groupName, Byte isDefault, Timestamp addTime, Timestamp updateTime, Byte delFlag) {
        super(DistributorGroup.DISTRIBUTOR_GROUP);

        set(0, id);
        set(1, groupName);
        set(2, isDefault);
        set(3, addTime);
        set(4, updateTime);
        set(5, delFlag);
    }
}
