/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.SecKillListRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecKillList extends TableImpl<SecKillListRecord> {

    private static final long serialVersionUID = 1444287555;

    /**
     * The reference instance of <code>mini_shop_1.b2c_sec_kill_list</code>
     */
    public static final SecKillList SEC_KILL_LIST = new SecKillList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SecKillListRecord> getRecordType() {
        return SecKillListRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_sec_kill_list.sklog_id</code>. 秒杀活动商品购买记录ID
     */
    public final TableField<SecKillListRecord, Integer> SKLOG_ID = createField("sklog_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "秒杀活动商品购买记录ID");

    /**
     * The column <code>mini_shop_1.b2c_sec_kill_list.sk_id</code>. 秒杀活动定义ID
     */
    public final TableField<SecKillListRecord, Integer> SK_ID = createField("sk_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "秒杀活动定义ID");

    /**
     * The column <code>mini_shop_1.b2c_sec_kill_list.goods_id</code>.
     */
    public final TableField<SecKillListRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_sec_kill_list.user_id</code>. 参与秒杀活动用户ID
     */
    public final TableField<SecKillListRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "参与秒杀活动用户ID");

    /**
     * The column <code>mini_shop_1.b2c_sec_kill_list.order_sn</code>. 订单编号
     */
    public final TableField<SecKillListRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "订单编号");

    /**
     * The column <code>mini_shop_1.b2c_sec_kill_list.del_flag</code>.
     */
    public final TableField<SecKillListRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_sec_kill_list.add_time</code>. 参与时间
     */
    public final TableField<SecKillListRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "参与时间");

    /**
     * Create a <code>mini_shop_1.b2c_sec_kill_list</code> table reference
     */
    public SecKillList() {
        this(DSL.name("b2c_sec_kill_list"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_sec_kill_list</code> table reference
     */
    public SecKillList(String alias) {
        this(DSL.name(alias), SEC_KILL_LIST);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_sec_kill_list</code> table reference
     */
    public SecKillList(Name alias) {
        this(alias, SEC_KILL_LIST);
    }

    private SecKillList(Name alias, Table<SecKillListRecord> aliased) {
        this(alias, aliased, null);
    }

    private SecKillList(Name alias, Table<SecKillListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SecKillList(Table<O> child, ForeignKey<O, SecKillListRecord> key) {
        super(child, key, SEC_KILL_LIST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SEC_KILL_LIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SecKillListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SEC_KILL_LIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SecKillListRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SEC_KILL_LIST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SecKillListRecord>> getKeys() {
        return Arrays.<UniqueKey<SecKillListRecord>>asList(Keys.KEY_B2C_SEC_KILL_LIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecKillList as(String alias) {
        return new SecKillList(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecKillList as(Name alias) {
        return new SecKillList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SecKillList rename(String name) {
        return new SecKillList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SecKillList rename(Name name) {
        return new SecKillList(name, null);
    }
}
