/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.ShopRoleRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShopRole extends TableImpl<ShopRoleRecord> {

    private static final long serialVersionUID = 1587969110;

    /**
     * The reference instance of <code>mini_shop_1.b2c_shop_role</code>
     */
    public static final ShopRole SHOP_ROLE = new ShopRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShopRoleRecord> getRecordType() {
        return ShopRoleRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_shop_role.role_id</code>.
     */
    public final TableField<ShopRoleRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_1.b2c_shop_role.shop_id</code>. 店铺ID
     */
    public final TableField<ShopRoleRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_shop_1.b2c_shop_role.role_name</code>. 角色名称
     */
    public final TableField<ShopRoleRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "角色名称");

    /**
     * The column <code>mini_shop_1.b2c_shop_role.privilege_list</code>. 权限列表，json数组存储
     */
    public final TableField<ShopRoleRecord, String> PRIVILEGE_LIST = createField("privilege_list", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "权限列表，json数组存储");

    /**
     * The column <code>mini_shop_1.b2c_shop_role.official_proxy_role</code>. 是否为官方代理子帐号角色，是则不可删除
     */
    public final TableField<ShopRoleRecord, Byte> OFFICIAL_PROXY_ROLE = createField("official_proxy_role", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "是否为官方代理子帐号角色，是则不可删除");

    /**
     * The column <code>mini_shop_1.b2c_shop_role.create_time</code>.
     */
    public final TableField<ShopRoleRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>mini_shop_1.b2c_shop_role</code> table reference
     */
    public ShopRole() {
        this(DSL.name("b2c_shop_role"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_shop_role</code> table reference
     */
    public ShopRole(String alias) {
        this(DSL.name(alias), SHOP_ROLE);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_shop_role</code> table reference
     */
    public ShopRole(Name alias) {
        this(alias, SHOP_ROLE);
    }

    private ShopRole(Name alias, Table<ShopRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShopRole(Name alias, Table<ShopRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ShopRole(Table<O> child, ForeignKey<O, ShopRoleRecord> key) {
        super(child, key, SHOP_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SHOP_ROLE_PRIMARY, Indexes.SHOP_ROLE_SHOP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShopRoleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHOP_ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShopRoleRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SHOP_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShopRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<ShopRoleRecord>>asList(Keys.KEY_B2C_SHOP_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopRole as(String alias) {
        return new ShopRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopRole as(Name alias) {
        return new ShopRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopRole rename(String name) {
        return new ShopRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopRole rename(Name name) {
        return new ShopRole(name, null);
    }
}
