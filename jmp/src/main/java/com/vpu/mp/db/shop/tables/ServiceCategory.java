/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.ServiceCategoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceCategory extends TableImpl<ServiceCategoryRecord> {

    private static final long serialVersionUID = 589379515;

    /**
     * The reference instance of <code>mini_shop_1.b2c_service_category</code>
     */
    public static final ServiceCategory SERVICE_CATEGORY = new ServiceCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceCategoryRecord> getRecordType() {
        return ServiceCategoryRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_service_category.cat_id</code>.
     */
    public final TableField<ServiceCategoryRecord, UShort> CAT_ID = createField("cat_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_1.b2c_service_category.cat_name</code>.
     */
    public final TableField<ServiceCategoryRecord, String> CAT_NAME = createField("cat_name", org.jooq.impl.SQLDataType.VARCHAR(90).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_service_category.store_id</code>.
     */
    public final TableField<ServiceCategoryRecord, Integer> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_1.b2c_service_category.create_time</code>.
     */
    public final TableField<ServiceCategoryRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>mini_shop_1.b2c_service_category</code> table reference
     */
    public ServiceCategory() {
        this(DSL.name("b2c_service_category"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_service_category</code> table reference
     */
    public ServiceCategory(String alias) {
        this(DSL.name(alias), SERVICE_CATEGORY);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_service_category</code> table reference
     */
    public ServiceCategory(Name alias) {
        this(alias, SERVICE_CATEGORY);
    }

    private ServiceCategory(Name alias, Table<ServiceCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceCategory(Name alias, Table<ServiceCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ServiceCategory(Table<O> child, ForeignKey<O, ServiceCategoryRecord> key) {
        super(child, key, SERVICE_CATEGORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SERVICE_CATEGORY_CAT_NAME, Indexes.SERVICE_CATEGORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ServiceCategoryRecord, UShort> getIdentity() {
        return Keys.IDENTITY_SERVICE_CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceCategoryRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SERVICE_CATEGORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceCategoryRecord>>asList(Keys.KEY_B2C_SERVICE_CATEGORY_PRIMARY, Keys.KEY_B2C_SERVICE_CATEGORY_CAT_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceCategory as(String alias) {
        return new ServiceCategory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceCategory as(Name alias) {
        return new ServiceCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceCategory rename(String name) {
        return new ServiceCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceCategory rename(Name name) {
        return new ServiceCategory(name, null);
    }
}
