/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.ShopScoreCfgRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShopScoreCfg extends TableImpl<ShopScoreCfgRecord> {

    private static final long serialVersionUID = -2089559690;

    /**
     * The reference instance of <code>mini_shop_1.b2c_shop_score_cfg</code>
     */
    public static final ShopScoreCfg SHOP_SCORE_CFG = new ShopScoreCfg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShopScoreCfgRecord> getRecordType() {
        return ShopScoreCfgRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_shop_score_cfg.id</code>.
     */
    public final TableField<ShopScoreCfgRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_1.b2c_shop_score_cfg.growth</code>. 0:关闭，1:开启
     */
    public final TableField<ShopScoreCfgRecord, Integer> GROWTH = createField("growth", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "0:关闭，1:开启");

    /**
     * The column <code>mini_shop_1.b2c_shop_score_cfg.score</code>. 0:关闭，1:开启
     */
    public final TableField<ShopScoreCfgRecord, Integer> SCORE = createField("score", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "0:关闭，1:开启");

    /**
     * The column <code>mini_shop_1.b2c_shop_score_cfg.comment</code>. comment:0:关闭评论，1：不用审批，2：先发后审，3：先审后发
     */
    public final TableField<ShopScoreCfgRecord, Integer> COMMENT = createField("comment", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "comment:0:关闭评论，1：不用审批，2：先发后审，3：先审后发");

    /**
     * The column <code>mini_shop_1.b2c_shop_score_cfg.in_time</code>.
     */
    public final TableField<ShopScoreCfgRecord, Timestamp> IN_TIME = createField("in_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>mini_shop_1.b2c_shop_score_cfg.up_time</code>.
     */
    public final TableField<ShopScoreCfgRecord, Timestamp> UP_TIME = createField("up_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>mini_shop_1.b2c_shop_score_cfg.sign</code>. 0:关闭，1:开启
     */
    public final TableField<ShopScoreCfgRecord, Integer> SIGN = createField("sign", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "0:关闭，1:开启");

    /**
     * The column <code>mini_shop_1.b2c_shop_score_cfg.sys_id</code>. 商家ID
     */
    public final TableField<ShopScoreCfgRecord, Integer> SYS_ID = createField("sys_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商家ID");

    /**
     * Create a <code>mini_shop_1.b2c_shop_score_cfg</code> table reference
     */
    public ShopScoreCfg() {
        this(DSL.name("b2c_shop_score_cfg"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_shop_score_cfg</code> table reference
     */
    public ShopScoreCfg(String alias) {
        this(DSL.name(alias), SHOP_SCORE_CFG);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_shop_score_cfg</code> table reference
     */
    public ShopScoreCfg(Name alias) {
        this(alias, SHOP_SCORE_CFG);
    }

    private ShopScoreCfg(Name alias, Table<ShopScoreCfgRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShopScoreCfg(Name alias, Table<ShopScoreCfgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ShopScoreCfg(Table<O> child, ForeignKey<O, ShopScoreCfgRecord> key) {
        super(child, key, SHOP_SCORE_CFG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SHOP_SCORE_CFG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShopScoreCfgRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHOP_SCORE_CFG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShopScoreCfgRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SHOP_SCORE_CFG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShopScoreCfgRecord>> getKeys() {
        return Arrays.<UniqueKey<ShopScoreCfgRecord>>asList(Keys.KEY_B2C_SHOP_SCORE_CFG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopScoreCfg as(String alias) {
        return new ShopScoreCfg(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopScoreCfg as(Name alias) {
        return new ShopScoreCfg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopScoreCfg rename(String name) {
        return new ShopScoreCfg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopScoreCfg rename(Name name) {
        return new ShopScoreCfg(name, null);
    }
}
