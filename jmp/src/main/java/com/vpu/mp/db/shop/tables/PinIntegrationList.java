/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.PinIntegrationListRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PinIntegrationList extends TableImpl<PinIntegrationListRecord> {

    private static final long serialVersionUID = 1298541787;

    /**
     * The reference instance of <code>mini_shop_1.b2c_pin_integration_list</code>
     */
    public static final PinIntegrationList PIN_INTEGRATION_LIST = new PinIntegrationList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PinIntegrationListRecord> getRecordType() {
        return PinIntegrationListRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.id</code>.
     */
    public final TableField<PinIntegrationListRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.inte_activity_id</code>. 瓜分积分活动定义ID
     */
    public final TableField<PinIntegrationListRecord, Integer> INTE_ACTIVITY_ID = createField("inte_activity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "瓜分积分活动定义ID");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.group_id</code>. 拼团ID
     */
    public final TableField<PinIntegrationListRecord, String> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "拼团ID");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.user_id</code>.
     */
    public final TableField<PinIntegrationListRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.is_grouper</code>. 是否为团长 1：是 0：否
     */
    public final TableField<PinIntegrationListRecord, Byte> IS_GROUPER = createField("is_grouper", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否为团长 1：是 0：否");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.status</code>. 0: 拼团中 1:拼团成功 2:拼团失败
     */
    public final TableField<PinIntegrationListRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0: 拼团中 1:拼团成功 2:拼团失败");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.start_time</code>. 参团时间
     */
    public final TableField<PinIntegrationListRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "参团时间");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.end_time</code>. 成团时间
     */
    public final TableField<PinIntegrationListRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "成团时间");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.integration</code>. 瓜分到的积分
     */
    public final TableField<PinIntegrationListRecord, Integer> INTEGRATION = createField("integration", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "瓜分到的积分");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.invite_num</code>. 邀请人的数量
     */
    public final TableField<PinIntegrationListRecord, Short> INVITE_NUM = createField("invite_num", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "邀请人的数量");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.invite_user</code>. 邀请人（被谁邀请）
     */
    public final TableField<PinIntegrationListRecord, Integer> INVITE_USER = createField("invite_user", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "邀请人（被谁邀请）");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.is_new</code>. 是否是新用户：0：不是，1：是
     */
    public final TableField<PinIntegrationListRecord, Byte> IS_NEW = createField("is_new", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否是新用户：0：不是，1：是");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.is_look</code>. 是否看过开奖结果
     */
    public final TableField<PinIntegrationListRecord, Byte> IS_LOOK = createField("is_look", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否看过开奖结果");

    /**
     * The column <code>mini_shop_1.b2c_pin_integration_list.can_integration</code>. 该团可瓜分积分池
     */
    public final TableField<PinIntegrationListRecord, Integer> CAN_INTEGRATION = createField("can_integration", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "该团可瓜分积分池");

    /**
     * Create a <code>mini_shop_1.b2c_pin_integration_list</code> table reference
     */
    public PinIntegrationList() {
        this(DSL.name("b2c_pin_integration_list"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_pin_integration_list</code> table reference
     */
    public PinIntegrationList(String alias) {
        this(DSL.name(alias), PIN_INTEGRATION_LIST);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_pin_integration_list</code> table reference
     */
    public PinIntegrationList(Name alias) {
        this(alias, PIN_INTEGRATION_LIST);
    }

    private PinIntegrationList(Name alias, Table<PinIntegrationListRecord> aliased) {
        this(alias, aliased, null);
    }

    private PinIntegrationList(Name alias, Table<PinIntegrationListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PinIntegrationList(Table<O> child, ForeignKey<O, PinIntegrationListRecord> key) {
        super(child, key, PIN_INTEGRATION_LIST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PIN_INTEGRATION_LIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PinIntegrationListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PIN_INTEGRATION_LIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PinIntegrationListRecord> getPrimaryKey() {
        return Keys.KEY_B2C_PIN_INTEGRATION_LIST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PinIntegrationListRecord>> getKeys() {
        return Arrays.<UniqueKey<PinIntegrationListRecord>>asList(Keys.KEY_B2C_PIN_INTEGRATION_LIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PinIntegrationList as(String alias) {
        return new PinIntegrationList(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PinIntegrationList as(Name alias) {
        return new PinIntegrationList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PinIntegrationList rename(String name) {
        return new PinIntegrationList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PinIntegrationList rename(Name name) {
        return new PinIntegrationList(name, null);
    }
}
