/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.MpSceneRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MpSceneRecord extends TableImpl<MpSceneRecordRecord> {

    private static final long serialVersionUID = 1850532289;

    /**
     * The reference instance of <code>mini_shop_1.b2c_mp_scene_record</code>
     */
    public static final MpSceneRecord MP_SCENE_RECORD = new MpSceneRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MpSceneRecordRecord> getRecordType() {
        return MpSceneRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_mp_scene_record.user_id</code>. 用户ID
     */
    public final TableField<MpSceneRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "用户ID");

    /**
     * The column <code>mini_shop_1.b2c_mp_scene_record.path</code>. 打开小程序的路径
     */
    public final TableField<MpSceneRecordRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.VARCHAR(50), this, "打开小程序的路径");

    /**
     * The column <code>mini_shop_1.b2c_mp_scene_record.path_query</code>. 打开小程序的query
     */
    public final TableField<MpSceneRecordRecord, String> PATH_QUERY = createField("path_query", org.jooq.impl.SQLDataType.VARCHAR(500), this, "打开小程序的query");

    /**
     * The column <code>mini_shop_1.b2c_mp_scene_record.scene</code>. 场景值
     */
    public final TableField<MpSceneRecordRecord, Short> SCENE = createField("scene", org.jooq.impl.SQLDataType.SMALLINT, this, "场景值");

    /**
     * The column <code>mini_shop_1.b2c_mp_scene_record.share_ticket</code>. 转发的ticket
     */
    public final TableField<MpSceneRecordRecord, String> SHARE_TICKET = createField("share_ticket", org.jooq.impl.SQLDataType.VARCHAR(500), this, "转发的ticket");

    /**
     * The column <code>mini_shop_1.b2c_mp_scene_record.referrer_info</code>. referrer信息
     */
    public final TableField<MpSceneRecordRecord, String> REFERRER_INFO = createField("referrer_info", org.jooq.impl.SQLDataType.CLOB, this, "referrer信息");

    /**
     * The column <code>mini_shop_1.b2c_mp_scene_record.count</code>. 记录次数
     */
    public final TableField<MpSceneRecordRecord, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER, this, "记录次数");

    /**
     * The column <code>mini_shop_1.b2c_mp_scene_record.add_time</code>.
     */
    public final TableField<MpSceneRecordRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>mini_shop_1.b2c_mp_scene_record.update_time</code>.
     */
    public final TableField<MpSceneRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>mini_shop_1.b2c_mp_scene_record</code> table reference
     */
    public MpSceneRecord() {
        this(DSL.name("b2c_mp_scene_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_mp_scene_record</code> table reference
     */
    public MpSceneRecord(String alias) {
        this(DSL.name(alias), MP_SCENE_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_mp_scene_record</code> table reference
     */
    public MpSceneRecord(Name alias) {
        this(alias, MP_SCENE_RECORD);
    }

    private MpSceneRecord(Name alias, Table<MpSceneRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private MpSceneRecord(Name alias, Table<MpSceneRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MpSceneRecord(Table<O> child, ForeignKey<O, MpSceneRecordRecord> key) {
        super(child, key, MP_SCENE_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MP_SCENE_RECORD_PATH_ADD_TIME, Indexes.MP_SCENE_RECORD_SCENE_ADD_TIME, Indexes.MP_SCENE_RECORD_USER_PATH);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpSceneRecord as(String alias) {
        return new MpSceneRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpSceneRecord as(Name alias) {
        return new MpSceneRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MpSceneRecord rename(String name) {
        return new MpSceneRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MpSceneRecord rename(Name name) {
        return new MpSceneRecord(name, null);
    }
}
