/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.BargainRecordRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BargainRecord extends TableImpl<BargainRecordRecord> {

    private static final long serialVersionUID = -1956241980;

    /**
     * The reference instance of <code>mini_shop_1.b2c_bargain_record</code>
     */
    public static final BargainRecord BARGAIN_RECORD = new BargainRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BargainRecordRecord> getRecordType() {
        return BargainRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.id</code>.
     */
    public final TableField<BargainRecordRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.user_id</code>. 用户ID
     */
    public final TableField<BargainRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户ID");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.bargain_id</code>. 活动ID
     */
    public final TableField<BargainRecordRecord, Integer> BARGAIN_ID = createField("bargain_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "活动ID");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.goods_id</code>. 商品ID
     */
    public final TableField<BargainRecordRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商品ID");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.prd_id</code>. 产品ID
     */
    public final TableField<BargainRecordRecord, Integer> PRD_ID = createField("prd_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "产品ID");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.goods_price</code>. 商品价格
     */
    public final TableField<BargainRecordRecord, BigDecimal> GOODS_PRICE = createField("goods_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "商品价格");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.bargain_money</code>. 已砍价格
     */
    public final TableField<BargainRecordRecord, BigDecimal> BARGAIN_MONEY = createField("bargain_money", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "已砍价格");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.user_number</code>. 砍价人数
     */
    public final TableField<BargainRecordRecord, Integer> USER_NUMBER = createField("user_number", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "砍价人数");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.status</code>. 0砍价中1成功2失败（成功即扣库存）
     */
    public final TableField<BargainRecordRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0砍价中1成功2失败（成功即扣库存）");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.is_ordered</code>. 是否下单
     */
    public final TableField<BargainRecordRecord, Integer> IS_ORDERED = createField("is_ordered", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "是否下单");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.order_sn</code>. 订单号
     */
    public final TableField<BargainRecordRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "订单号");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.add_time</code>.
     */
    public final TableField<BargainRecordRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.update_time</code>.
     */
    public final TableField<BargainRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.del_flag</code>.
     */
    public final TableField<BargainRecordRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_bargain_record.del_time</code>.
     */
    public final TableField<BargainRecordRecord, Timestamp> DEL_TIME = createField("del_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>mini_shop_1.b2c_bargain_record</code> table reference
     */
    public BargainRecord() {
        this(DSL.name("b2c_bargain_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_bargain_record</code> table reference
     */
    public BargainRecord(String alias) {
        this(DSL.name(alias), BARGAIN_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_bargain_record</code> table reference
     */
    public BargainRecord(Name alias) {
        this(alias, BARGAIN_RECORD);
    }

    private BargainRecord(Name alias, Table<BargainRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private BargainRecord(Name alias, Table<BargainRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BargainRecord(Table<O> child, ForeignKey<O, BargainRecordRecord> key) {
        super(child, key, BARGAIN_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BARGAIN_RECORD_BARGAIN_ID, Indexes.BARGAIN_RECORD_PRIMARY, Indexes.BARGAIN_RECORD_USER_BARGAIN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BargainRecordRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_BARGAIN_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BargainRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_BARGAIN_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BargainRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<BargainRecordRecord>>asList(Keys.KEY_B2C_BARGAIN_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BargainRecord as(String alias) {
        return new BargainRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BargainRecord as(Name alias) {
        return new BargainRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BargainRecord rename(String name) {
        return new BargainRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BargainRecord rename(Name name) {
        return new BargainRecord(name, null);
    }
}
