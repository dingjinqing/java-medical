/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.PayRewardRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayReward extends TableImpl<PayRewardRecord> {

    private static final long serialVersionUID = -777858825;

    /**
     * The reference instance of <code>mini_shop_4748160.b2c_pay_reward</code>
     */
    public static final PayReward PAY_REWARD = new PayReward();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PayRewardRecord> getRecordType() {
        return PayRewardRecord.class;
    }

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.id</code>.
     */
    public final TableField<PayRewardRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.act_name</code>. 活动名称
     */
    public final TableField<PayRewardRecord, String> ACT_NAME = createField("act_name", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "活动名称");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.start_time</code>.
     */
    public final TableField<PayRewardRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.end_time</code>.
     */
    public final TableField<PayRewardRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.type</code>. 类型，1为分裂 2抽奖 3送券 4跳转自定义链接
     */
    public final TableField<PayRewardRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "类型，1为分裂 2抽奖 3送券 4跳转自定义链接");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.everytime_amount</code>. 每一单可以发放优惠券数量
     */
    public final TableField<PayRewardRecord, Short> EVERYTIME_AMOUNT = createField("everytime_amount", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "每一单可以发放优惠券数量");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.denomination</code>. 触发条件：支付金额满
     */
    public final TableField<PayRewardRecord, BigDecimal> DENOMINATION = createField("denomination", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "触发条件：支付金额满");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.coupon_ids</code>. 支付送券的优惠券id
     */
    public final TableField<PayRewardRecord, String> COUPON_IDS = createField("coupon_ids", org.jooq.impl.SQLDataType.VARCHAR(50), this, "支付送券的优惠券id");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.lottery_id</code>. 幸运大抽奖
     */
    public final TableField<PayRewardRecord, Integer> LOTTERY_ID = createField("lottery_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "幸运大抽奖");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.recommend_type</code>. 支付有礼跳转链接 1:全部商品可用 2：指定商品可用
     */
    public final TableField<PayRewardRecord, Byte> RECOMMEND_TYPE = createField("recommend_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "支付有礼跳转链接 1:全部商品可用 2：指定商品可用");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.recommend_goods_id</code>. 指定商品可用
     */
    public final TableField<PayRewardRecord, String> RECOMMEND_GOODS_ID = createField("recommend_goods_id", org.jooq.impl.SQLDataType.CLOB, this, "指定商品可用");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.recommend_cat_id</code>. 指定平台可用
     */
    public final TableField<PayRewardRecord, String> RECOMMEND_CAT_ID = createField("recommend_cat_id", org.jooq.impl.SQLDataType.CLOB, this, "指定平台可用");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.recommend_sort_id</code>. 指定商家分类可用
     */
    public final TableField<PayRewardRecord, String> RECOMMEND_SORT_ID = createField("recommend_sort_id", org.jooq.impl.SQLDataType.CLOB, this, "指定商家分类可用");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.img_url</code>. 支付有礼跳转活动图片路径
     */
    public final TableField<PayRewardRecord, String> IMG_URL = createField("img_url", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "支付有礼跳转活动图片路径");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.link_path</code>. 支付有礼跳转活动链接
     */
    public final TableField<PayRewardRecord, String> LINK_PATH = createField("link_path", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "支付有礼跳转活动链接");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.status</code>. 状态：1停用
     */
    public final TableField<PayRewardRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "状态：1停用");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.is_delete</code>. 1为删除状态
     */
    public final TableField<PayRewardRecord, Byte> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1为删除状态");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.create_time</code>.
     */
    public final TableField<PayRewardRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward.update_time</code>. 最后修改时间
     */
    public final TableField<PayRewardRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_4748160.b2c_pay_reward</code> table reference
     */
    public PayReward() {
        this(DSL.name("b2c_pay_reward"), null);
    }

    /**
     * Create an aliased <code>mini_shop_4748160.b2c_pay_reward</code> table reference
     */
    public PayReward(String alias) {
        this(DSL.name(alias), PAY_REWARD);
    }

    /**
     * Create an aliased <code>mini_shop_4748160.b2c_pay_reward</code> table reference
     */
    public PayReward(Name alias) {
        this(alias, PAY_REWARD);
    }

    private PayReward(Name alias, Table<PayRewardRecord> aliased) {
        this(alias, aliased, null);
    }

    private PayReward(Name alias, Table<PayRewardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PayReward(Table<O> child, ForeignKey<O, PayRewardRecord> key) {
        super(child, key, PAY_REWARD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PAY_REWARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PayRewardRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PAY_REWARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PayRewardRecord> getPrimaryKey() {
        return Keys.KEY_B2C_PAY_REWARD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PayRewardRecord>> getKeys() {
        return Arrays.<UniqueKey<PayRewardRecord>>asList(Keys.KEY_B2C_PAY_REWARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PayReward as(String alias) {
        return new PayReward(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PayReward as(Name alias) {
        return new PayReward(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PayReward rename(String name) {
        return new PayReward(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PayReward rename(Name name) {
        return new PayReward(name, null);
    }
}
