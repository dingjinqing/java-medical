/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables.records;



import java.sql.Timestamp;

import javax.annotation.Generated;

import com.vpu.mp.db.main.tables.TaskJobMain;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskJobMainRecord extends UpdatableRecordImpl<TaskJobMainRecord> implements Record14<Integer, Integer, Integer, Byte, Byte, Integer, Integer, Byte, Timestamp, Timestamp, Timestamp, Timestamp, Timestamp, Byte> {

    private static final long serialVersionUID = -1897861904;

    /**
     * Setter for <code>mini_main.b2c_task_job_main.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.SHOP_ID</code>. 店铺ID
     */
    public void setShopId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.SHOP_ID</code>. 店铺ID
     */
    public Integer getShopId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.CONTENT_ID</code>. MQ消息内容ID
     */
    public void setContentId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.CONTENT_ID</code>. MQ消息内容ID
     */
    public Integer getContentId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.STATUS</code>. 任务状态：0待执行,1执行中,2已完成
     */
    public void setStatus(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.STATUS</code>. 任务状态：0待执行,1执行中,2已完成
     */
    public Byte getStatus() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.SCHEDULE</code>. 任务进度：0-100
     */
    public void setSchedule(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.SCHEDULE</code>. 任务进度：0-100
     */
    public Byte getSchedule() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.EXECUTION_TYPE</code>. 执行类型:任务类型标识
     */
    public void setExecutionType(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.EXECUTION_TYPE</code>. 执行类型:任务类型标识
     */
    public Integer getExecutionType() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.CYCLE</code>. 轮循间隔(单位:秒)
     */
    public void setCycle(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.CYCLE</code>. 轮循间隔(单位:秒)
     */
    public Integer getCycle() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.TYPE</code>. task任务类型(立刻执行；定时执行；循环执行)
     */
    public void setType(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.TYPE</code>. task任务类型(立刻执行；定时执行；循环执行)
     */
    public Byte getType() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.NEXT_EXECUTE_TIME</code>. 下次执行开始日期
     */
    public void setNextExecuteTime(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.NEXT_EXECUTE_TIME</code>. 下次执行开始日期
     */
    public Timestamp getNextExecuteTime() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.START_TIME</code>. 周期开始时间
     */
    public void setStartTime(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.START_TIME</code>. 周期开始时间
     */
    public Timestamp getStartTime() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.END_TIME</code>. 周期结束时间
     */
    public void setEndTime(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.END_TIME</code>. 周期结束时间
     */
    public Timestamp getEndTime() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.CREATE_TIME</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.CREATE_TIME</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.UPDATE_TIME</code>. 最后修改时间
     */
    public void setUpdateTime(Timestamp value) {
        set(12, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.UPDATE_TIME</code>. 最后修改时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(12);
    }

    /**
     * Setter for <code>mini_main.b2c_task_job_main.DEL_FLAG</code>. 删除标识：0未删除，1已删除
     */
    public void setDelFlag(Byte value) {
        set(13, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_job_main.DEL_FLAG</code>. 删除标识：0未删除，1已删除
     */
    public Byte getDelFlag() {
        return (Byte) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Integer, Integer, Integer, Byte, Byte, Integer, Integer, Byte, Timestamp, Timestamp, Timestamp, Timestamp, Timestamp, Byte> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Integer, Integer, Integer, Byte, Byte, Integer, Integer, Byte, Timestamp, Timestamp, Timestamp, Timestamp, Timestamp, Byte> valuesRow() {
        return (Row14) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return TaskJobMain.TASK_JOB_MAIN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return TaskJobMain.TASK_JOB_MAIN.SHOP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return TaskJobMain.TASK_JOB_MAIN.CONTENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return TaskJobMain.TASK_JOB_MAIN.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return TaskJobMain.TASK_JOB_MAIN.SCHEDULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return TaskJobMain.TASK_JOB_MAIN.EXECUTION_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return TaskJobMain.TASK_JOB_MAIN.CYCLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field8() {
        return TaskJobMain.TASK_JOB_MAIN.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return TaskJobMain.TASK_JOB_MAIN.NEXT_EXECUTE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return TaskJobMain.TASK_JOB_MAIN.START_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return TaskJobMain.TASK_JOB_MAIN.END_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field12() {
        return TaskJobMain.TASK_JOB_MAIN.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field13() {
        return TaskJobMain.TASK_JOB_MAIN.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field14() {
        return TaskJobMain.TASK_JOB_MAIN.DEL_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getContentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getSchedule();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getExecutionType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getCycle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component8() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getNextExecuteTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component10() {
        return getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component11() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component12() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component13() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component14() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getContentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getSchedule();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getExecutionType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getCycle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value8() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getNextExecuteTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value12() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value13() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value14() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value2(Integer value) {
        setShopId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value3(Integer value) {
        setContentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value4(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value5(Byte value) {
        setSchedule(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value6(Integer value) {
        setExecutionType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value7(Integer value) {
        setCycle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value8(Byte value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value9(Timestamp value) {
        setNextExecuteTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value10(Timestamp value) {
        setStartTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value11(Timestamp value) {
        setEndTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value12(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value13(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord value14(Byte value) {
        setDelFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobMainRecord values(Integer value1, Integer value2, Integer value3, Byte value4, Byte value5, Integer value6, Integer value7, Byte value8, Timestamp value9, Timestamp value10, Timestamp value11, Timestamp value12, Timestamp value13, Byte value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskJobMainRecord
     */
    public TaskJobMainRecord() {
        super(TaskJobMain.TASK_JOB_MAIN);
    }

    /**
     * Create a detached, initialised TaskJobMainRecord
     */
    public TaskJobMainRecord(Integer id, Integer shopId, Integer contentId, Byte status, Byte schedule, Integer executionType, Integer cycle, Byte type, Timestamp nextExecuteTime, Timestamp startTime, Timestamp endTime, Timestamp createTime, Timestamp updateTime, Byte delFlag) {
        super(TaskJobMain.TASK_JOB_MAIN);

        set(0, id);
        set(1, shopId);
        set(2, contentId);
        set(3, status);
        set(4, schedule);
        set(5, executionType);
        set(6, cycle);
        set(7, type);
        set(8, nextExecuteTime);
        set(9, startTime);
        set(10, endTime);
        set(11, createTime);
        set(12, updateTime);
        set(13, delFlag);
    }
}
