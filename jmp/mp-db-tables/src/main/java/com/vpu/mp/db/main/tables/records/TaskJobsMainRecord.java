/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables.records;


import com.vpu.mp.db.main.tables.TaskJobsMain;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskJobsMainRecord extends UpdatableRecordImpl<TaskJobsMainRecord> implements Record11<Integer, Integer, Integer, Byte, Byte, Byte, Integer, Byte, Timestamp, Timestamp, Byte> {

    private static final long serialVersionUID = 1495224059;

    /**
     * Setter for <code>mini_main.b2c_task_jobs_main.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_jobs_main.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mini_main.b2c_task_jobs_main.SHOP_ID</code>. 店铺ID
     */
    public void setShopId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_jobs_main.SHOP_ID</code>. 店铺ID
     */
    public Integer getShopId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mini_main.b2c_task_jobs_main.CONTENT_ID</code>. MQ消息内容ID
     */
    public void setContentId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_jobs_main.CONTENT_ID</code>. MQ消息内容ID
     */
    public Integer getContentId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>mini_main.b2c_task_jobs_main.STATUS</code>. 任务状态：0待执行,1执行中,2已完成
     */
    public void setStatus(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_jobs_main.STATUS</code>. 任务状态：0待执行,1执行中,2已完成
     */
    public Byte getStatus() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>mini_main.b2c_task_jobs_main.SCHEDULE</code>. 任务进度：0-100
     */
    public void setSchedule(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_jobs_main.SCHEDULE</code>. 任务进度：0-100
     */
    public Byte getSchedule() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>mini_main.b2c_task_jobs_main.EXECUTION_TYPE</code>. 执行类型：0单次(不保证全部执行成功)1周期内循环执行2定时执行
     */
    public void setExecutionType(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_jobs_main.EXECUTION_TYPE</code>. 执行类型：0单次(不保证全部执行成功)1周期内循环执行2定时执行
     */
    public Byte getExecutionType() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>mini_main.b2c_task_jobs_main.CYCLE</code>. 轮循间隔(单位:秒)
     */
    public void setCycle(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_jobs_main.CYCLE</code>. 轮循间隔(单位:秒)
     */
    public Integer getCycle() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>mini_main.b2c_task_jobs_main.TYPE</code>. task任务类型(任务标识)
     */
    public void setType(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_jobs_main.TYPE</code>. task任务类型(任务标识)
     */
    public Byte getType() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>mini_main.b2c_task_jobs_main.CREATE_TIME</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_jobs_main.CREATE_TIME</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>mini_main.b2c_task_jobs_main.UPDATE_TIME</code>. 最后修改时间
     */
    public void setUpdateTime(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_jobs_main.UPDATE_TIME</code>. 最后修改时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>mini_main.b2c_task_jobs_main.DEL_FLAG</code>. 删除标识：0未删除，1已删除
     */
    public void setDelFlag(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>mini_main.b2c_task_jobs_main.DEL_FLAG</code>. 删除标识：0未删除，1已删除
     */
    public Byte getDelFlag() {
        return (Byte) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Integer, Integer, Integer, Byte, Byte, Byte, Integer, Byte, Timestamp, Timestamp, Byte> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Integer, Integer, Integer, Byte, Byte, Byte, Integer, Byte, Timestamp, Timestamp, Byte> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return TaskJobsMain.TASK_JOBS_MAIN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return TaskJobsMain.TASK_JOBS_MAIN.SHOP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return TaskJobsMain.TASK_JOBS_MAIN.CONTENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return TaskJobsMain.TASK_JOBS_MAIN.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return TaskJobsMain.TASK_JOBS_MAIN.SCHEDULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return TaskJobsMain.TASK_JOBS_MAIN.EXECUTION_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return TaskJobsMain.TASK_JOBS_MAIN.CYCLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field8() {
        return TaskJobsMain.TASK_JOBS_MAIN.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return TaskJobsMain.TASK_JOBS_MAIN.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return TaskJobsMain.TASK_JOBS_MAIN.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field11() {
        return TaskJobsMain.TASK_JOBS_MAIN.DEL_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getContentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getSchedule();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component6() {
        return getExecutionType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getCycle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component8() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component10() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component11() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getShopId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getContentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getSchedule();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getExecutionType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getCycle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value8() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value11() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord value2(Integer value) {
        setShopId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord value3(Integer value) {
        setContentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord value4(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord value5(Byte value) {
        setSchedule(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord value6(Byte value) {
        setExecutionType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord value7(Integer value) {
        setCycle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord value8(Byte value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord value9(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord value10(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord value11(Byte value) {
        setDelFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskJobsMainRecord values(Integer value1, Integer value2, Integer value3, Byte value4, Byte value5, Byte value6, Integer value7, Byte value8, Timestamp value9, Timestamp value10, Byte value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskJobsMainRecord
     */
    public TaskJobsMainRecord() {
        super(TaskJobsMain.TASK_JOBS_MAIN);
    }

    /**
     * Create a detached, initialised TaskJobsMainRecord
     */
    public TaskJobsMainRecord(Integer id, Integer shopId, Integer contentId, Byte status, Byte schedule, Byte executionType, Integer cycle, Byte type, Timestamp createTime, Timestamp updateTime, Byte delFlag) {
        super(TaskJobsMain.TASK_JOBS_MAIN);

        set(0, id);
        set(1, shopId);
        set(2, contentId);
        set(3, status);
        set(4, schedule);
        set(5, executionType);
        set(6, cycle);
        set(7, type);
        set(8, createTime);
        set(9, updateTime);
        set(10, delFlag);
    }
}
