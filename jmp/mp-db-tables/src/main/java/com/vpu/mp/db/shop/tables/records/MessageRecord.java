/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables.records;



import java.sql.Timestamp;

import javax.annotation.Generated;

import com.vpu.mp.db.shop.tables.Message;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户消息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageRecord extends UpdatableRecordImpl<MessageRecord> implements Record15<Integer, String, String, String, Byte, Integer, String, Integer, String, Byte, Timestamp, Integer, Byte, Timestamp, Timestamp> {

    private static final long serialVersionUID = 2130178605;

    /**
     * Setter for <code>mini_shop_471752.b2c_message.message_id</code>.
     */
    public void setMessageId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.message_id</code>.
     */
    public Integer getMessageId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.message_name</code>. 消息名称，系统消息名称为日期
     */
    public void setMessageName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.message_name</code>. 消息名称，系统消息名称为日期
     */
    public String getMessageName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.message_essentials</code>. 消息摘要
     */
    public void setMessageEssentials(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.message_essentials</code>. 消息摘要
     */
    public String getMessageEssentials() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.message_content</code>. 消息内容
     */
    public void setMessageContent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.message_content</code>. 消息内容
     */
    public String getMessageContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.message_type</code>. 消息类型 0：系统消息、1：订单消息、2：会话消息 默认0
     */
    public void setMessageType(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.message_type</code>. 消息类型 0：系统消息、1：订单消息、2：会话消息 默认0
     */
    public Byte getMessageType() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.receiver_id</code>. 接收者id
     */
    public void setReceiverId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.receiver_id</code>. 接收者id
     */
    public Integer getReceiverId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.receiver_name</code>.
     */
    public void setReceiverName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.receiver_name</code>.
     */
    public String getReceiverName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.sender_id</code>. 发送者id
     */
    public void setSenderId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.sender_id</code>. 发送者id
     */
    public Integer getSenderId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.sender_name</code>. 发送者姓名
     */
    public void setSenderName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.sender_name</code>. 发送者姓名
     */
    public String getSenderName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.message_status</code>. 消息状态 0：未读、1：已读、3：置顶消息 默认0
     */
    public void setMessageStatus(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.message_status</code>. 消息状态 0：未读、1：已读、3：置顶消息 默认0
     */
    public Byte getMessageStatus() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.message_time</code>. 消息创建时间
     */
    public void setMessageTime(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.message_time</code>. 消息创建时间
     */
    public Timestamp getMessageTime() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.message_relevance_id</code>. 消息关联id 关联会话和订单id，关联系统消息、会话问诊、问诊订单主键
     */
    public void setMessageRelevanceId(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.message_relevance_id</code>. 消息关联id 关联会话和订单id，关联系统消息、会话问诊、问诊订单主键
     */
    public Integer getMessageRelevanceId() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.is_delete</code>. 删除
     */
    public void setIsDelete(Byte value) {
        set(12, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.is_delete</code>. 删除
     */
    public Byte getIsDelete() {
        return (Byte) get(12);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(13, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(13);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_message.update_time</code>. 最后修改时间
     */
    public void setUpdateTime(Timestamp value) {
        set(14, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_message.update_time</code>. 最后修改时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<Integer, String, String, String, Byte, Integer, String, Integer, String, Byte, Timestamp, Integer, Byte, Timestamp, Timestamp> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<Integer, String, String, String, Byte, Integer, String, Integer, String, Byte, Timestamp, Integer, Byte, Timestamp, Timestamp> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Message.MESSAGE.MESSAGE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Message.MESSAGE.MESSAGE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Message.MESSAGE.MESSAGE_ESSENTIALS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Message.MESSAGE.MESSAGE_CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return Message.MESSAGE.MESSAGE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Message.MESSAGE.RECEIVER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Message.MESSAGE.RECEIVER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Message.MESSAGE.SENDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Message.MESSAGE.SENDER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field10() {
        return Message.MESSAGE.MESSAGE_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return Message.MESSAGE.MESSAGE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return Message.MESSAGE.MESSAGE_RELEVANCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field13() {
        return Message.MESSAGE.IS_DELETE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field14() {
        return Message.MESSAGE.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field15() {
        return Message.MESSAGE.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getMessageId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getMessageName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getMessageEssentials();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getMessageContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getMessageType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getReceiverId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getReceiverName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getSenderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getSenderName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component10() {
        return getMessageStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component11() {
        return getMessageTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component12() {
        return getMessageRelevanceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component13() {
        return getIsDelete();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component14() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component15() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getMessageId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getMessageName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getMessageEssentials();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getMessageContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getMessageType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getReceiverId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getReceiverName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getSenderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getSenderName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value10() {
        return getMessageStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getMessageTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getMessageRelevanceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value13() {
        return getIsDelete();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value14() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value15() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value1(Integer value) {
        setMessageId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value2(String value) {
        setMessageName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value3(String value) {
        setMessageEssentials(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value4(String value) {
        setMessageContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value5(Byte value) {
        setMessageType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value6(Integer value) {
        setReceiverId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value7(String value) {
        setReceiverName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value8(Integer value) {
        setSenderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value9(String value) {
        setSenderName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value10(Byte value) {
        setMessageStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value11(Timestamp value) {
        setMessageTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value12(Integer value) {
        setMessageRelevanceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value13(Byte value) {
        setIsDelete(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value14(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord value15(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageRecord values(Integer value1, String value2, String value3, String value4, Byte value5, Integer value6, String value7, Integer value8, String value9, Byte value10, Timestamp value11, Integer value12, Byte value13, Timestamp value14, Timestamp value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageRecord
     */
    public MessageRecord() {
        super(Message.MESSAGE);
    }

    /**
     * Create a detached, initialised MessageRecord
     */
    public MessageRecord(Integer messageId, String messageName, String messageEssentials, String messageContent, Byte messageType, Integer receiverId, String receiverName, Integer senderId, String senderName, Byte messageStatus, Timestamp messageTime, Integer messageRelevanceId, Byte isDelete, Timestamp createTime, Timestamp updateTime) {
        super(Message.MESSAGE);

        set(0, messageId);
        set(1, messageName);
        set(2, messageEssentials);
        set(3, messageContent);
        set(4, messageType);
        set(5, receiverId);
        set(6, receiverName);
        set(7, senderId);
        set(8, senderName);
        set(9, messageStatus);
        set(10, messageTime);
        set(11, messageRelevanceId);
        set(12, isDelete);
        set(13, createTime);
        set(14, updateTime);
    }
}
