/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.PayRewardRecordRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayRewardRecord extends TableImpl<PayRewardRecordRecord> {

    private static final long serialVersionUID = 1366232841;

    /**
     * The reference instance of <code>mini_shop_4748160.b2c_pay_reward_record</code>
     */
    public static final PayRewardRecord PAY_REWARD_RECORD = new PayRewardRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PayRewardRecordRecord> getRecordType() {
        return PayRewardRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward_record.id</code>.
     */
    public final TableField<PayRewardRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward_record.pay_reward_id</code>. 支付有礼活动id
     */
    public final TableField<PayRewardRecordRecord, Integer> PAY_REWARD_ID = createField("pay_reward_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "支付有礼活动id");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward_record.order_sn</code>. 订单编号
     */
    public final TableField<PayRewardRecordRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "订单编号");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward_record.user_id</code>. 下单用户id
     */
    public final TableField<PayRewardRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "下单用户id");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward_record.type</code>. 类型，1为分裂  2抽奖 3送券 4跳转自定义链接
     */
    public final TableField<PayRewardRecordRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "类型，1为分裂  2抽奖 3送券 4跳转自定义链接");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward_record.mrking_voucher_id</code>. 发送的活动优惠券，逗号分隔
     */
    public final TableField<PayRewardRecordRecord, String> MRKING_VOUCHER_ID = createField("mrking_voucher_id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "发送的活动优惠券，逗号分隔");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward_record.create_time</code>.
     */
    public final TableField<PayRewardRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_4748160.b2c_pay_reward_record.update_time</code>. 最后修改时间
     */
    public final TableField<PayRewardRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * Create a <code>mini_shop_4748160.b2c_pay_reward_record</code> table reference
     */
    public PayRewardRecord() {
        this(DSL.name("b2c_pay_reward_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_4748160.b2c_pay_reward_record</code> table reference
     */
    public PayRewardRecord(String alias) {
        this(DSL.name(alias), PAY_REWARD_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_4748160.b2c_pay_reward_record</code> table reference
     */
    public PayRewardRecord(Name alias) {
        this(alias, PAY_REWARD_RECORD);
    }

    private PayRewardRecord(Name alias, Table<PayRewardRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private PayRewardRecord(Name alias, Table<PayRewardRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PayRewardRecord(Table<O> child, ForeignKey<O, PayRewardRecordRecord> key) {
        super(child, key, PAY_REWARD_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PAY_REWARD_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PayRewardRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PAY_REWARD_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PayRewardRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_PAY_REWARD_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PayRewardRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<PayRewardRecordRecord>>asList(Keys.KEY_B2C_PAY_REWARD_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PayRewardRecord as(String alias) {
        return new PayRewardRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PayRewardRecord as(Name alias) {
        return new PayRewardRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PayRewardRecord rename(String name) {
        return new PayRewardRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PayRewardRecord rename(Name name) {
        return new PayRewardRecord(name, null);
    }
}
