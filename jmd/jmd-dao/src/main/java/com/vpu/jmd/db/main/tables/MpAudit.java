/*
 * This file is generated by jOOQ.
 */
package com.vpu.jmd.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.MpAuditRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MpAudit extends TableImpl<MpAuditRecord> {

    private static final long serialVersionUID = -1369788349;

    /**
     * The reference instance of <code>mini_main.b2c_mp_audit</code>
     */
    public static final MpAudit MP_AUDIT = new MpAudit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MpAuditRecord> getRecordType() {
        return MpAuditRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_mp_audit.id</code>.
     */
    public final TableField<MpAuditRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_mp_audit.app_id</code>. 小程序 appid
     */
    public final TableField<MpAuditRecord, String> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "小程序 appid");

    /**
     * The column <code>mini_main.b2c_mp_audit.shop_id</code>. 店铺ID
     */
    public final TableField<MpAuditRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "店铺ID");

    /**
     * The column <code>mini_main.b2c_mp_audit.template_id</code>. 小程序模板ID
     */
    public final TableField<MpAuditRecord, Integer> TEMPLATE_ID = createField("template_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "小程序模板ID");

    /**
     * The column <code>mini_main.b2c_mp_audit.account_id</code>. 审核人
     */
    public final TableField<MpAuditRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "审核人");

    /**
     * The column <code>mini_main.b2c_mp_audit.source</code>. 提交来源：1 小程序授权 2 直播 3 小程序跳转 4 开店向导 5 system后台
     */
    public final TableField<MpAuditRecord, Byte> SOURCE = createField("source", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "提交来源：1 小程序授权 2 直播 3 小程序跳转 4 开店向导 5 system后台");

    /**
     * The column <code>mini_main.b2c_mp_audit.create_time</code>. 创建审核单时间
     */
    public final TableField<MpAuditRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建审核单时间");

    /**
     * The column <code>mini_main.b2c_mp_audit.audit_time</code>. 审核时间（拒绝、忽略、运营审核通过、提交微信）
     */
    public final TableField<MpAuditRecord, Timestamp> AUDIT_TIME = createField("audit_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "审核时间（拒绝、忽略、运营审核通过、提交微信）");

    /**
     * The column <code>mini_main.b2c_mp_audit.wx_audit_time</code>. 微信审核时间（通过、失败）
     */
    public final TableField<MpAuditRecord, Timestamp> WX_AUDIT_TIME = createField("wx_audit_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "微信审核时间（通过、失败）");

    /**
     * The column <code>mini_main.b2c_mp_audit.close_time</code>. 审核人关闭审核单时间
     */
    public final TableField<MpAuditRecord, Timestamp> CLOSE_TIME = createField("close_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "审核人关闭审核单时间");

    /**
     * The column <code>mini_main.b2c_mp_audit.audit_status</code>. 0: 待处理 1：关闭 2：拒绝 3：忽略 4：运营审核通过 5：微信审核中 6：微信审核成功 7：微信审核失败
     */
    public final TableField<MpAuditRecord, Byte> AUDIT_STATUS = createField("audit_status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0: 待处理 1：关闭 2：拒绝 3：忽略 4：运营审核通过 5：微信审核中 6：微信审核成功 7：微信审核失败");

    /**
     * The column <code>mini_main.b2c_mp_audit.wx_audit_fail_reason</code>. 微信审核失败原因
     */
    public final TableField<MpAuditRecord, String> WX_AUDIT_FAIL_REASON = createField("wx_audit_fail_reason", org.jooq.impl.SQLDataType.VARCHAR(255), this, "微信审核失败原因");

    /**
     * The column <code>mini_main.b2c_mp_audit.category</code>. 小程序类目
     */
    public final TableField<MpAuditRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.CLOB, this, "小程序类目");

    /**
     * Create a <code>mini_main.b2c_mp_audit</code> table reference
     */
    public MpAudit() {
        this(DSL.name("b2c_mp_audit"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_mp_audit</code> table reference
     */
    public MpAudit(String alias) {
        this(DSL.name(alias), MP_AUDIT);
    }

    /**
     * Create an aliased <code>mini_main.b2c_mp_audit</code> table reference
     */
    public MpAudit(Name alias) {
        this(alias, MP_AUDIT);
    }

    private MpAudit(Name alias, Table<MpAuditRecord> aliased) {
        this(alias, aliased, null);
    }

    private MpAudit(Name alias, Table<MpAuditRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MpAudit(Table<O> child, ForeignKey<O, MpAuditRecord> key) {
        super(child, key, MP_AUDIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MP_AUDIT_ACCOUNT_ID, Indexes.MP_AUDIT_APP_ID, Indexes.MP_AUDIT_AUDIT_STATUS, Indexes.MP_AUDIT_PRIMARY, Indexes.MP_AUDIT_SHOP_ID, Indexes.MP_AUDIT_TEMPLATE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MpAuditRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MP_AUDIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MpAuditRecord> getPrimaryKey() {
        return Keys.KEY_B2C_MP_AUDIT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MpAuditRecord>> getKeys() {
        return Arrays.<UniqueKey<MpAuditRecord>>asList(Keys.KEY_B2C_MP_AUDIT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpAudit as(String alias) {
        return new MpAudit(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpAudit as(Name alias) {
        return new MpAudit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MpAudit rename(String name) {
        return new MpAudit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MpAudit rename(Name name) {
        return new MpAudit(name, null);
    }
}
