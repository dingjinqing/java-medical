/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables.records;


import com.vpu.mp.db.shop.tables.CardConsumer;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardConsumerRecord extends UpdatableRecordImpl<CardConsumerRecord> implements Record13<Integer, Integer, Integer, BigDecimal, Short, Byte, String, String, String, Short, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 294320648;

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.user_id</code>. 用户id
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.user_id</code>. 用户id
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.card_id</code>. 会员卡id
     */
    public void setCardId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.card_id</code>. 会员卡id
     */
    public Integer getCardId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.money</code>. 消费的卡余额
     */
    public void setMoney(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.money</code>. 消费的卡余额
     */
    public BigDecimal getMoney() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.count</code>. 消费次数
     */
    public void setCount(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.count</code>. 消费次数
     */
    public Short getCount() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.type</code>. 消费类型 0是普通卡 1限次卡
     */
    public void setType(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.type</code>. 消费类型 0是普通卡 1限次卡
     */
    public Byte getType() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.reason</code>. 消费原因
     */
    public void setReason(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.reason</code>. 消费原因
     */
    public String getReason() {
        return (String) get(6);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.message</code>. 备注
     */
    public void setMessage(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.message</code>. 备注
     */
    public String getMessage() {
        return (String) get(7);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.card_no</code>. 会员卡号
     */
    public void setCardNo(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.card_no</code>. 会员卡号
     */
    public String getCardNo() {
        return (String) get(8);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.exchang_count</code>. 兑换次数
     */
    public void setExchangCount(Short value) {
        set(9, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.exchang_count</code>. 兑换次数
     */
    public Short getExchangCount() {
        return (Short) get(9);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.order_sn</code>. 订单号
     */
    public void setOrderSn(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.order_sn</code>. 订单号
     */
    public String getOrderSn() {
        return (String) get(10);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>mini_shop_471752.b2c_card_consumer.update_time</code>. 最后修改时间
     */
    public void setUpdateTime(Timestamp value) {
        set(12, value);
    }

    /**
     * Getter for <code>mini_shop_471752.b2c_card_consumer.update_time</code>. 最后修改时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, Integer, Integer, BigDecimal, Short, Byte, String, String, String, Short, String, Timestamp, Timestamp> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, Integer, Integer, BigDecimal, Short, Byte, String, String, String, Short, String, Timestamp, Timestamp> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CardConsumer.CARD_CONSUMER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return CardConsumer.CARD_CONSUMER.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return CardConsumer.CARD_CONSUMER.CARD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return CardConsumer.CARD_CONSUMER.MONEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return CardConsumer.CARD_CONSUMER.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return CardConsumer.CARD_CONSUMER.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return CardConsumer.CARD_CONSUMER.REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return CardConsumer.CARD_CONSUMER.MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return CardConsumer.CARD_CONSUMER.CARD_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field10() {
        return CardConsumer.CARD_CONSUMER.EXCHANG_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return CardConsumer.CARD_CONSUMER.ORDER_SN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field12() {
        return CardConsumer.CARD_CONSUMER.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field13() {
        return CardConsumer.CARD_CONSUMER.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getCardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getMoney();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component5() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component6() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getCardNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component10() {
        return getExchangCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getOrderSn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component12() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component13() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getMoney();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getCardNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value10() {
        return getExchangCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getOrderSn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value12() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value13() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value3(Integer value) {
        setCardId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value4(BigDecimal value) {
        setMoney(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value5(Short value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value6(Byte value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value7(String value) {
        setReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value8(String value) {
        setMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value9(String value) {
        setCardNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value10(Short value) {
        setExchangCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value11(String value) {
        setOrderSn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value12(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord value13(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardConsumerRecord values(Integer value1, Integer value2, Integer value3, BigDecimal value4, Short value5, Byte value6, String value7, String value8, String value9, Short value10, String value11, Timestamp value12, Timestamp value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardConsumerRecord
     */
    public CardConsumerRecord() {
        super(CardConsumer.CARD_CONSUMER);
    }

    /**
     * Create a detached, initialised CardConsumerRecord
     */
    public CardConsumerRecord(Integer id, Integer userId, Integer cardId, BigDecimal money, Short count, Byte type, String reason, String message, String cardNo, Short exchangCount, String orderSn, Timestamp createTime, Timestamp updateTime) {
        super(CardConsumer.CARD_CONSUMER);

        set(0, id);
        set(1, userId);
        set(2, cardId);
        set(3, money);
        set(4, count);
        set(5, type);
        set(6, reason);
        set(7, message);
        set(8, cardNo);
        set(9, exchangCount);
        set(10, orderSn);
        set(11, createTime);
        set(12, updateTime);
    }
}
