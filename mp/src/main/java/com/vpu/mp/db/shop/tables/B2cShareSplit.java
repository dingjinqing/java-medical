/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cShareSplitRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cShareSplit extends TableImpl<B2cShareSplitRecord> {

    private static final long serialVersionUID = 1361443793;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_share_split</code>
     */
    public static final B2cShareSplit B2C_SHARE_SPLIT = new B2cShareSplit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cShareSplitRecord> getRecordType() {
        return B2cShareSplitRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_share_split.id</code>.
     */
    public final TableField<B2cShareSplitRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_share_split.user</code>. 分享的user_id
     */
    public final TableField<B2cShareSplitRecord, UInteger> USER = createField("user", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "分享的user_id");

    /**
     * The column <code>mini_shop_471752.b2c_share_split.user_id</code>. 分享领取的user_id
     */
    public final TableField<B2cShareSplitRecord, UInteger> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "分享领取的user_id");

    /**
     * The column <code>mini_shop_471752.b2c_share_split.act_id</code>. 分裂优惠券id
     */
    public final TableField<B2cShareSplitRecord, UInteger> ACT_ID = createField("act_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "分裂优惠券id");

    /**
     * The column <code>mini_shop_471752.b2c_share_split.create_time</code>. 领取时间
     */
    public final TableField<B2cShareSplitRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "领取时间");

    /**
     * The column <code>mini_shop_471752.b2c_share_split.order_sn</code>.
     */
    public final TableField<B2cShareSplitRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_share_split.share_limit</code>. 可分享个数
     */
    public final TableField<B2cShareSplitRecord, Integer> SHARE_LIMIT = createField("share_limit", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "可分享个数");

    /**
     * Create a <code>mini_shop_471752.b2c_share_split</code> table reference
     */
    public B2cShareSplit() {
        this(DSL.name("b2c_share_split"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_share_split</code> table reference
     */
    public B2cShareSplit(String alias) {
        this(DSL.name(alias), B2C_SHARE_SPLIT);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_share_split</code> table reference
     */
    public B2cShareSplit(Name alias) {
        this(alias, B2C_SHARE_SPLIT);
    }

    private B2cShareSplit(Name alias, Table<B2cShareSplitRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cShareSplit(Name alias, Table<B2cShareSplitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cShareSplit(Table<O> child, ForeignKey<O, B2cShareSplitRecord> key) {
        super(child, key, B2C_SHARE_SPLIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SHARE_SPLIT_PRIMARY, Indexes.B2C_SHARE_SPLIT_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cShareSplitRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_SHARE_SPLIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cShareSplitRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SHARE_SPLIT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cShareSplitRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cShareSplitRecord>>asList(Keys.KEY_B2C_SHARE_SPLIT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cShareSplit as(String alias) {
        return new B2cShareSplit(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cShareSplit as(Name alias) {
        return new B2cShareSplit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cShareSplit rename(String name) {
        return new B2cShareSplit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cShareSplit rename(Name name) {
        return new B2cShareSplit(name, null);
    }
}
