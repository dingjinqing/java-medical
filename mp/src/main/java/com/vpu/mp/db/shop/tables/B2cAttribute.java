/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cAttributeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cAttribute extends TableImpl<B2cAttributeRecord> {

    private static final long serialVersionUID = -1078595814;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_attribute</code>
     */
    public static final B2cAttribute B2C_ATTRIBUTE = new B2cAttribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cAttributeRecord> getRecordType() {
        return B2cAttributeRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_attribute.attr_id</code>.
     */
    public final TableField<B2cAttributeRecord, Integer> ATTR_ID = createField("attr_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_attribute.name</code>.
     */
    public final TableField<B2cAttributeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_attribute.attribute_info</code>. json存储
     */
    public final TableField<B2cAttributeRecord, String> ATTRIBUTE_INFO = createField("attribute_info", org.jooq.impl.SQLDataType.CLOB, this, "json存储");

    /**
     * The column <code>mini_shop_471752.b2c_attribute.create_time</code>.
     */
    public final TableField<B2cAttributeRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_attribute.is_del</code>.
     */
    public final TableField<B2cAttributeRecord, Byte> IS_DEL = createField("is_del", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>mini_shop_471752.b2c_attribute</code> table reference
     */
    public B2cAttribute() {
        this(DSL.name("b2c_attribute"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_attribute</code> table reference
     */
    public B2cAttribute(String alias) {
        this(DSL.name(alias), B2C_ATTRIBUTE);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_attribute</code> table reference
     */
    public B2cAttribute(Name alias) {
        this(alias, B2C_ATTRIBUTE);
    }

    private B2cAttribute(Name alias, Table<B2cAttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cAttribute(Name alias, Table<B2cAttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cAttribute(Table<O> child, ForeignKey<O, B2cAttributeRecord> key) {
        super(child, key, B2C_ATTRIBUTE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_ATTRIBUTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cAttributeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_ATTRIBUTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cAttributeRecord> getPrimaryKey() {
        return Keys.KEY_B2C_ATTRIBUTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cAttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cAttributeRecord>>asList(Keys.KEY_B2C_ATTRIBUTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cAttribute as(String alias) {
        return new B2cAttribute(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cAttribute as(Name alias) {
        return new B2cAttribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cAttribute rename(String name) {
        return new B2cAttribute(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cAttribute rename(Name name) {
        return new B2cAttribute(name, null);
    }
}
