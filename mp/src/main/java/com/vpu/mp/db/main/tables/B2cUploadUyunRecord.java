/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.B2cUploadUyunRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cUploadUyunRecord extends TableImpl<B2cUploadUyunRecordRecord> {

    private static final long serialVersionUID = -135572714;

    /**
     * The reference instance of <code>mini_main.b2c_upload_uyun_record</code>
     */
    public static final B2cUploadUyunRecord B2C_UPLOAD_UYUN_RECORD = new B2cUploadUyunRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cUploadUyunRecordRecord> getRecordType() {
        return B2cUploadUyunRecordRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.record_id</code>.
     */
    public final TableField<B2cUploadUyunRecordRecord, Long> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.file_url</code>. 文件url
     */
    public final TableField<B2cUploadUyunRecordRecord, String> FILE_URL = createField("file_url", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "文件url");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.update_timestamp</code>. 文件更新时间戳
     */
    public final TableField<B2cUploadUyunRecordRecord, String> UPDATE_TIMESTAMP = createField("update_timestamp", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "文件更新时间戳");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.update_date</code>. 文件更新日期
     */
    public final TableField<B2cUploadUyunRecordRecord, Timestamp> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "文件更新日期");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.upload_status</code>. 文件上传状态 0：上传成功；1：上传失败（或开关关闭后未上传的文件）
     */
    public final TableField<B2cUploadUyunRecordRecord, Byte> UPLOAD_STATUS = createField("upload_status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "文件上传状态 0：上传成功；1：上传失败（或开关关闭后未上传的文件）");

    /**
     * The column <code>mini_main.b2c_upload_uyun_record.upload_time</code>. 文件上传时间
     */
    public final TableField<B2cUploadUyunRecordRecord, Timestamp> UPLOAD_TIME = createField("upload_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "文件上传时间");

    /**
     * Create a <code>mini_main.b2c_upload_uyun_record</code> table reference
     */
    public B2cUploadUyunRecord() {
        this(DSL.name("b2c_upload_uyun_record"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_upload_uyun_record</code> table reference
     */
    public B2cUploadUyunRecord(String alias) {
        this(DSL.name(alias), B2C_UPLOAD_UYUN_RECORD);
    }

    /**
     * Create an aliased <code>mini_main.b2c_upload_uyun_record</code> table reference
     */
    public B2cUploadUyunRecord(Name alias) {
        this(alias, B2C_UPLOAD_UYUN_RECORD);
    }

    private B2cUploadUyunRecord(Name alias, Table<B2cUploadUyunRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cUploadUyunRecord(Name alias, Table<B2cUploadUyunRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cUploadUyunRecord(Table<O> child, ForeignKey<O, B2cUploadUyunRecordRecord> key) {
        super(child, key, B2C_UPLOAD_UYUN_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_UPLOAD_UYUN_RECORD_FILE_URL, Indexes.B2C_UPLOAD_UYUN_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cUploadUyunRecordRecord, Long> getIdentity() {
        return Keys.IDENTITY_B2C_UPLOAD_UYUN_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cUploadUyunRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_UPLOAD_UYUN_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cUploadUyunRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cUploadUyunRecordRecord>>asList(Keys.KEY_B2C_UPLOAD_UYUN_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUploadUyunRecord as(String alias) {
        return new B2cUploadUyunRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUploadUyunRecord as(Name alias) {
        return new B2cUploadUyunRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUploadUyunRecord rename(String name) {
        return new B2cUploadUyunRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUploadUyunRecord rename(Name name) {
        return new B2cUploadUyunRecord(name, null);
    }
}
