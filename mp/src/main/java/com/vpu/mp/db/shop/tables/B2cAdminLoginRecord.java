/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cAdminLoginRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cAdminLoginRecord extends TableImpl<B2cAdminLoginRecordRecord> {

    private static final long serialVersionUID = -745854387;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_admin_login_record</code>
     */
    public static final B2cAdminLoginRecord B2C_ADMIN_LOGIN_RECORD = new B2cAdminLoginRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cAdminLoginRecordRecord> getRecordType() {
        return B2cAdminLoginRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_admin_login_record.id</code>.
     */
    public final TableField<B2cAdminLoginRecordRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_admin_login_record.shop_id</code>. 店铺ID
     */
    public final TableField<B2cAdminLoginRecordRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_shop_471752.b2c_admin_login_record.user_name</code>. 登录用户名
     */
    public final TableField<B2cAdminLoginRecordRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "登录用户名");

    /**
     * The column <code>mini_shop_471752.b2c_admin_login_record.login_type</code>. 登录类型：0普通登录，1改密码
     */
    public final TableField<B2cAdminLoginRecordRecord, Short> LOGIN_TYPE = createField("login_type", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "登录类型：0普通登录，1改密码");

    /**
     * The column <code>mini_shop_471752.b2c_admin_login_record.login_time</code>. 操作时间
     */
    public final TableField<B2cAdminLoginRecordRecord, Timestamp> LOGIN_TIME = createField("login_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "操作时间");

    /**
     * The column <code>mini_shop_471752.b2c_admin_login_record.unlock_time</code>. 解锁时间
     */
    public final TableField<B2cAdminLoginRecordRecord, Timestamp> UNLOCK_TIME = createField("unlock_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "解锁时间");

    /**
     * The column <code>mini_shop_471752.b2c_admin_login_record.user_ip</code>. ip地址
     */
    public final TableField<B2cAdminLoginRecordRecord, String> USER_IP = createField("user_ip", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "ip地址");

    /**
     * The column <code>mini_shop_471752.b2c_admin_login_record.user_agent</code>. 浏览器ua
     */
    public final TableField<B2cAdminLoginRecordRecord, String> USER_AGENT = createField("user_agent", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "浏览器ua");

    /**
     * The column <code>mini_shop_471752.b2c_admin_login_record.retry_count</code>. 重试次数
     */
    public final TableField<B2cAdminLoginRecordRecord, Short> RETRY_COUNT = createField("retry_count", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "重试次数");

    /**
     * The column <code>mini_shop_471752.b2c_admin_login_record.is_tmp_lock</code>. 是否暂时锁定
     */
    public final TableField<B2cAdminLoginRecordRecord, UByte> IS_TMP_LOCK = createField("is_tmp_lock", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "是否暂时锁定");

    /**
     * Create a <code>mini_shop_471752.b2c_admin_login_record</code> table reference
     */
    public B2cAdminLoginRecord() {
        this(DSL.name("b2c_admin_login_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_admin_login_record</code> table reference
     */
    public B2cAdminLoginRecord(String alias) {
        this(DSL.name(alias), B2C_ADMIN_LOGIN_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_admin_login_record</code> table reference
     */
    public B2cAdminLoginRecord(Name alias) {
        this(alias, B2C_ADMIN_LOGIN_RECORD);
    }

    private B2cAdminLoginRecord(Name alias, Table<B2cAdminLoginRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cAdminLoginRecord(Name alias, Table<B2cAdminLoginRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cAdminLoginRecord(Table<O> child, ForeignKey<O, B2cAdminLoginRecordRecord> key) {
        super(child, key, B2C_ADMIN_LOGIN_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_ADMIN_LOGIN_RECORD_PRIMARY, Indexes.B2C_ADMIN_LOGIN_RECORD_SHOP_ID, Indexes.B2C_ADMIN_LOGIN_RECORD_USER_IP, Indexes.B2C_ADMIN_LOGIN_RECORD_USER_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cAdminLoginRecordRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_ADMIN_LOGIN_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cAdminLoginRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_ADMIN_LOGIN_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cAdminLoginRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cAdminLoginRecordRecord>>asList(Keys.KEY_B2C_ADMIN_LOGIN_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cAdminLoginRecord as(String alias) {
        return new B2cAdminLoginRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cAdminLoginRecord as(Name alias) {
        return new B2cAdminLoginRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cAdminLoginRecord rename(String name) {
        return new B2cAdminLoginRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cAdminLoginRecord rename(Name name) {
        return new B2cAdminLoginRecord(name, null);
    }
}
