/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.B2cShopRoleRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cShopRole extends TableImpl<B2cShopRoleRecord> {

    private static final long serialVersionUID = -1861084143;

    /**
     * The reference instance of <code>mini_main.b2c_shop_role</code>
     */
    public static final B2cShopRole B2C_SHOP_ROLE = new B2cShopRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cShopRoleRecord> getRecordType() {
        return B2cShopRoleRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_shop_role.role_id</code>.
     */
    public final TableField<B2cShopRoleRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_shop_role.sys_id</code>. 主账户ID
     */
    public final TableField<B2cShopRoleRecord, Integer> SYS_ID = createField("sys_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "主账户ID");

    /**
     * The column <code>mini_main.b2c_shop_role.shop_id</code>. 店铺ID
     */
    public final TableField<B2cShopRoleRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_main.b2c_shop_role.role_name</code>. 角色名称
     */
    public final TableField<B2cShopRoleRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "角色名称");

    /**
     * The column <code>mini_main.b2c_shop_role.privilege_list</code>. 权限列表，json数组存储
     */
    public final TableField<B2cShopRoleRecord, String> PRIVILEGE_LIST = createField("privilege_list", org.jooq.impl.SQLDataType.CLOB, this, "权限列表，json数组存储");

    /**
     * The column <code>mini_main.b2c_shop_role.create_time</code>.
     */
    public final TableField<B2cShopRoleRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_main.b2c_shop_role.privilege_pass</code>. 权限密码，json数组存储
     */
    public final TableField<B2cShopRoleRecord, String> PRIVILEGE_PASS = createField("privilege_pass", org.jooq.impl.SQLDataType.CLOB, this, "权限密码，json数组存储");

    /**
     * The column <code>mini_main.b2c_shop_role.role_pass</code>. 权限密码
     */
    public final TableField<B2cShopRoleRecord, String> ROLE_PASS = createField("role_pass", org.jooq.impl.SQLDataType.VARCHAR(50), this, "权限密码");

    /**
     * Create a <code>mini_main.b2c_shop_role</code> table reference
     */
    public B2cShopRole() {
        this(DSL.name("b2c_shop_role"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_shop_role</code> table reference
     */
    public B2cShopRole(String alias) {
        this(DSL.name(alias), B2C_SHOP_ROLE);
    }

    /**
     * Create an aliased <code>mini_main.b2c_shop_role</code> table reference
     */
    public B2cShopRole(Name alias) {
        this(alias, B2C_SHOP_ROLE);
    }

    private B2cShopRole(Name alias, Table<B2cShopRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cShopRole(Name alias, Table<B2cShopRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cShopRole(Table<O> child, ForeignKey<O, B2cShopRoleRecord> key) {
        super(child, key, B2C_SHOP_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SHOP_ROLE_PRIMARY, Indexes.B2C_SHOP_ROLE_SHOP_ID, Indexes.B2C_SHOP_ROLE_SYS_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cShopRoleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_SHOP_ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cShopRoleRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SHOP_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cShopRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cShopRoleRecord>>asList(Keys.KEY_B2C_SHOP_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cShopRole as(String alias) {
        return new B2cShopRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cShopRole as(Name alias) {
        return new B2cShopRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cShopRole rename(String name) {
        return new B2cShopRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cShopRole rename(Name name) {
        return new B2cShopRole(name, null);
    }
}
