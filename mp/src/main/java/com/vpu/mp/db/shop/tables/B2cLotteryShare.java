/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cLotteryShareRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cLotteryShare extends TableImpl<B2cLotteryShareRecord> {

    private static final long serialVersionUID = -1596665508;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_lottery_share</code>
     */
    public static final B2cLotteryShare B2C_LOTTERY_SHARE = new B2cLotteryShare();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cLotteryShareRecord> getRecordType() {
        return B2cLotteryShareRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_lottery_share.id</code>.
     */
    public final TableField<B2cLotteryShareRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_lottery_share.user_id</code>. 用户编号
     */
    public final TableField<B2cLotteryShareRecord, UInteger> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "用户编号");

    /**
     * The column <code>mini_shop_471752.b2c_lottery_share.lottery_id</code>. 抽奖编号
     */
    public final TableField<B2cLotteryShareRecord, UInteger> LOTTERY_ID = createField("lottery_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "抽奖编号");

    /**
     * The column <code>mini_shop_471752.b2c_lottery_share.share_times</code>. 分享次数
     */
    public final TableField<B2cLotteryShareRecord, Integer> SHARE_TIMES = createField("share_times", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "分享次数");

    /**
     * The column <code>mini_shop_471752.b2c_lottery_share.use_share_times</code>. 抽奖次数
     */
    public final TableField<B2cLotteryShareRecord, Integer> USE_SHARE_TIMES = createField("use_share_times", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "抽奖次数");

    /**
     * The column <code>mini_shop_471752.b2c_lottery_share.use_score_times</code>.
     */
    public final TableField<B2cLotteryShareRecord, Integer> USE_SCORE_TIMES = createField("use_score_times", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_lottery_share.add_time</code>. 添加时间
     */
    public final TableField<B2cLotteryShareRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "添加时间");

    /**
     * The column <code>mini_shop_471752.b2c_lottery_share.update_time</code>. 更新时间
     */
    public final TableField<B2cLotteryShareRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * Create a <code>mini_shop_471752.b2c_lottery_share</code> table reference
     */
    public B2cLotteryShare() {
        this(DSL.name("b2c_lottery_share"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_lottery_share</code> table reference
     */
    public B2cLotteryShare(String alias) {
        this(DSL.name(alias), B2C_LOTTERY_SHARE);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_lottery_share</code> table reference
     */
    public B2cLotteryShare(Name alias) {
        this(alias, B2C_LOTTERY_SHARE);
    }

    private B2cLotteryShare(Name alias, Table<B2cLotteryShareRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cLotteryShare(Name alias, Table<B2cLotteryShareRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cLotteryShare(Table<O> child, ForeignKey<O, B2cLotteryShareRecord> key) {
        super(child, key, B2C_LOTTERY_SHARE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_LOTTERY_SHARE_PRIMARY, Indexes.B2C_LOTTERY_SHARE_USER_LOTTERY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cLotteryShareRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_LOTTERY_SHARE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cLotteryShareRecord> getPrimaryKey() {
        return Keys.KEY_B2C_LOTTERY_SHARE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cLotteryShareRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cLotteryShareRecord>>asList(Keys.KEY_B2C_LOTTERY_SHARE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cLotteryShare as(String alias) {
        return new B2cLotteryShare(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cLotteryShare as(Name alias) {
        return new B2cLotteryShare(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cLotteryShare rename(String name) {
        return new B2cLotteryShare(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cLotteryShare rename(Name name) {
        return new B2cLotteryShare(name, null);
    }
}
