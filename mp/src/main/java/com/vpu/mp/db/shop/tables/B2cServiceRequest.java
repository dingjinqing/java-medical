/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cServiceRequestRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cServiceRequest extends TableImpl<B2cServiceRequestRecord> {

    private static final long serialVersionUID = -1152949802;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_service_request</code>
     */
    public static final B2cServiceRequest B2C_SERVICE_REQUEST = new B2cServiceRequest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cServiceRequestRecord> getRecordType() {
        return B2cServiceRequestRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_service_request.id</code>.
     */
    public final TableField<B2cServiceRequestRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_service_request.request_id</code>. 请求requestId
     */
    public final TableField<B2cServiceRequestRecord, String> REQUEST_ID = createField("request_id", org.jooq.impl.SQLDataType.VARCHAR(50), this, "请求requestId");

    /**
     * The column <code>mini_shop_471752.b2c_service_request.service_name</code>. 服务名
     */
    public final TableField<B2cServiceRequestRecord, String> SERVICE_NAME = createField("service_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "服务名");

    /**
     * The column <code>mini_shop_471752.b2c_service_request.request_content</code>. 请求内容
     */
    public final TableField<B2cServiceRequestRecord, String> REQUEST_CONTENT = createField("request_content", org.jooq.impl.SQLDataType.CLOB, this, "请求内容");

    /**
     * The column <code>mini_shop_471752.b2c_service_request.request_time</code>. 请求时间
     */
    public final TableField<B2cServiceRequestRecord, Timestamp> REQUEST_TIME = createField("request_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "请求时间");

    /**
     * The column <code>mini_shop_471752.b2c_service_request.response_time</code>. 响应时间
     */
    public final TableField<B2cServiceRequestRecord, Timestamp> RESPONSE_TIME = createField("response_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "响应时间");

    /**
     * The column <code>mini_shop_471752.b2c_service_request.response_content</code>. 响应内容
     */
    public final TableField<B2cServiceRequestRecord, String> RESPONSE_CONTENT = createField("response_content", org.jooq.impl.SQLDataType.CLOB, this, "响应内容");

    /**
     * The column <code>mini_shop_471752.b2c_service_request.ip</code>. 请求ip
     */
    public final TableField<B2cServiceRequestRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR(100), this, "请求ip");

    /**
     * Create a <code>mini_shop_471752.b2c_service_request</code> table reference
     */
    public B2cServiceRequest() {
        this(DSL.name("b2c_service_request"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_service_request</code> table reference
     */
    public B2cServiceRequest(String alias) {
        this(DSL.name(alias), B2C_SERVICE_REQUEST);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_service_request</code> table reference
     */
    public B2cServiceRequest(Name alias) {
        this(alias, B2C_SERVICE_REQUEST);
    }

    private B2cServiceRequest(Name alias, Table<B2cServiceRequestRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cServiceRequest(Name alias, Table<B2cServiceRequestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cServiceRequest(Table<O> child, ForeignKey<O, B2cServiceRequestRecord> key) {
        super(child, key, B2C_SERVICE_REQUEST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SERVICE_REQUEST_PRIMARY, Indexes.B2C_SERVICE_REQUEST_REQUEST_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cServiceRequestRecord, ULong> getIdentity() {
        return Keys.IDENTITY_B2C_SERVICE_REQUEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cServiceRequestRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SERVICE_REQUEST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cServiceRequestRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cServiceRequestRecord>>asList(Keys.KEY_B2C_SERVICE_REQUEST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cServiceRequest as(String alias) {
        return new B2cServiceRequest(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cServiceRequest as(Name alias) {
        return new B2cServiceRequest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cServiceRequest rename(String name) {
        return new B2cServiceRequest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cServiceRequest rename(Name name) {
        return new B2cServiceRequest(name, null);
    }
}
