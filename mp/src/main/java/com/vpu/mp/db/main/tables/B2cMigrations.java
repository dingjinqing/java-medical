/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.B2cMigrationsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cMigrations extends TableImpl<B2cMigrationsRecord> {

    private static final long serialVersionUID = -894352070;

    /**
     * The reference instance of <code>mini_main.b2c_migrations</code>
     */
    public static final B2cMigrations B2C_MIGRATIONS = new B2cMigrations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cMigrationsRecord> getRecordType() {
        return B2cMigrationsRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_migrations.id</code>.
     */
    public final TableField<B2cMigrationsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_migrations.migration</code>.
     */
    public final TableField<B2cMigrationsRecord, String> MIGRATION = createField("migration", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>mini_main.b2c_migrations.batch</code>.
     */
    public final TableField<B2cMigrationsRecord, Integer> BATCH = createField("batch", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>mini_main.b2c_migrations</code> table reference
     */
    public B2cMigrations() {
        this(DSL.name("b2c_migrations"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_migrations</code> table reference
     */
    public B2cMigrations(String alias) {
        this(DSL.name(alias), B2C_MIGRATIONS);
    }

    /**
     * Create an aliased <code>mini_main.b2c_migrations</code> table reference
     */
    public B2cMigrations(Name alias) {
        this(alias, B2C_MIGRATIONS);
    }

    private B2cMigrations(Name alias, Table<B2cMigrationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cMigrations(Name alias, Table<B2cMigrationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cMigrations(Table<O> child, ForeignKey<O, B2cMigrationsRecord> key) {
        super(child, key, B2C_MIGRATIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_MIGRATIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cMigrationsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_MIGRATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cMigrationsRecord> getPrimaryKey() {
        return Keys.KEY_B2C_MIGRATIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cMigrationsRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cMigrationsRecord>>asList(Keys.KEY_B2C_MIGRATIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cMigrations as(String alias) {
        return new B2cMigrations(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cMigrations as(Name alias) {
        return new B2cMigrations(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cMigrations rename(String name) {
        return new B2cMigrations(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cMigrations rename(Name name) {
        return new B2cMigrations(name, null);
    }
}
