/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cServiceTechnicianGroupRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cServiceTechnicianGroup extends TableImpl<B2cServiceTechnicianGroupRecord> {

    private static final long serialVersionUID = 1854804546;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_service_technician_group</code>
     */
    public static final B2cServiceTechnicianGroup B2C_SERVICE_TECHNICIAN_GROUP = new B2cServiceTechnicianGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cServiceTechnicianGroupRecord> getRecordType() {
        return B2cServiceTechnicianGroupRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_service_technician_group.group_id</code>. 分组id
     */
    public final TableField<B2cServiceTechnicianGroupRecord, UShort> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false).identity(true), this, "分组id");

    /**
     * The column <code>mini_shop_471752.b2c_service_technician_group.group_name</code>. 分组名称
     */
    public final TableField<B2cServiceTechnicianGroupRecord, String> GROUP_NAME = createField("group_name", org.jooq.impl.SQLDataType.VARCHAR(90).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "分组名称");

    /**
     * The column <code>mini_shop_471752.b2c_service_technician_group.store_id</code>. 门店id
     */
    public final TableField<B2cServiceTechnicianGroupRecord, Integer> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "门店id");

    /**
     * The column <code>mini_shop_471752.b2c_service_technician_group.add_time</code>. 添加时间
     */
    public final TableField<B2cServiceTechnicianGroupRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "添加时间");

    /**
     * The column <code>mini_shop_471752.b2c_service_technician_group.del_flag</code>. 0使用，1删除
     */
    public final TableField<B2cServiceTechnicianGroupRecord, Short> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "0使用，1删除");

    /**
     * Create a <code>mini_shop_471752.b2c_service_technician_group</code> table reference
     */
    public B2cServiceTechnicianGroup() {
        this(DSL.name("b2c_service_technician_group"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_service_technician_group</code> table reference
     */
    public B2cServiceTechnicianGroup(String alias) {
        this(DSL.name(alias), B2C_SERVICE_TECHNICIAN_GROUP);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_service_technician_group</code> table reference
     */
    public B2cServiceTechnicianGroup(Name alias) {
        this(alias, B2C_SERVICE_TECHNICIAN_GROUP);
    }

    private B2cServiceTechnicianGroup(Name alias, Table<B2cServiceTechnicianGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cServiceTechnicianGroup(Name alias, Table<B2cServiceTechnicianGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cServiceTechnicianGroup(Table<O> child, ForeignKey<O, B2cServiceTechnicianGroupRecord> key) {
        super(child, key, B2C_SERVICE_TECHNICIAN_GROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SERVICE_TECHNICIAN_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cServiceTechnicianGroupRecord, UShort> getIdentity() {
        return Keys.IDENTITY_B2C_SERVICE_TECHNICIAN_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cServiceTechnicianGroupRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SERVICE_TECHNICIAN_GROUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cServiceTechnicianGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cServiceTechnicianGroupRecord>>asList(Keys.KEY_B2C_SERVICE_TECHNICIAN_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cServiceTechnicianGroup as(String alias) {
        return new B2cServiceTechnicianGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cServiceTechnicianGroup as(Name alias) {
        return new B2cServiceTechnicianGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cServiceTechnicianGroup rename(String name) {
        return new B2cServiceTechnicianGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cServiceTechnicianGroup rename(Name name) {
        return new B2cServiceTechnicianGroup(name, null);
    }
}
