/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cUserRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cUser extends TableImpl<B2cUserRecord> {

    private static final long serialVersionUID = 1304088488;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_user</code>
     */
    public static final B2cUser B2C_USER = new B2cUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cUserRecord> getRecordType() {
        return B2cUserRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_user.user_id</code>.
     */
    public final TableField<B2cUserRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user.shop_id</code>.
     */
    public final TableField<B2cUserRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user.username</code>. 用户名
     */
    public final TableField<B2cUserRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "用户名");

    /**
     * The column <code>mini_shop_471752.b2c_user.user_pwd</code>. 密码
     */
    public final TableField<B2cUserRecord, String> USER_PWD = createField("user_pwd", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false), this, "密码");

    /**
     * The column <code>mini_shop_471752.b2c_user.user_cid</code>.
     */
    public final TableField<B2cUserRecord, String> USER_CID = createField("user_cid", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user.mobile</code>. 电话
     */
    public final TableField<B2cUserRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(100), this, "电话");

    /**
     * The column <code>mini_shop_471752.b2c_user.user_code</code>. 会员卡号
     */
    public final TableField<B2cUserRecord, String> USER_CODE = createField("user_code", org.jooq.impl.SQLDataType.VARCHAR(100), this, "会员卡号");

    /**
     * The column <code>mini_shop_471752.b2c_user.wx_openid</code>.
     */
    public final TableField<B2cUserRecord, String> WX_OPENID = createField("wx_openid", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user.email</code>. 邮箱
     */
    public final TableField<B2cUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(100), this, "邮箱");

    /**
     * The column <code>mini_shop_471752.b2c_user.create_time</code>. 创建时间
     */
    public final TableField<B2cUserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>mini_shop_471752.b2c_user.wechat</code>. 微信
     */
    public final TableField<B2cUserRecord, String> WECHAT = createField("wechat", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "微信");

    /**
     * The column <code>mini_shop_471752.b2c_user.fanli_grade</code>. 返利会员级别
     */
    public final TableField<B2cUserRecord, Integer> FANLI_GRADE = createField("fanli_grade", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "返利会员级别");

    /**
     * The column <code>mini_shop_471752.b2c_user.user_grade</code>. 会员级别
     */
    public final TableField<B2cUserRecord, Integer> USER_GRADE = createField("user_grade", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "会员级别");

    /**
     * The column <code>mini_shop_471752.b2c_user.invite</code>.
     */
    public final TableField<B2cUserRecord, Integer> INVITE = createField("invite", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user.invite_source</code>. 邀请来源:groupbuy.拼团,bargain.砍价,integral.积分,seckill.秒杀,lottery.抽奖
     */
    public final TableField<B2cUserRecord, String> INVITE_SOURCE = createField("invite_source", org.jooq.impl.SQLDataType.VARCHAR(32), this, "邀请来源:groupbuy.拼团,bargain.砍价,integral.积分,seckill.秒杀,lottery.抽奖");

    /**
     * The column <code>mini_shop_471752.b2c_user.invitation_code</code>. 邀请码
     */
    public final TableField<B2cUserRecord, Integer> INVITATION_CODE = createField("invitation_code", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "邀请码");

    /**
     * The column <code>mini_shop_471752.b2c_user.account</code>. 用户余额
     */
    public final TableField<B2cUserRecord, BigDecimal> ACCOUNT = createField("account", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "用户余额");

    /**
     * The column <code>mini_shop_471752.b2c_user.discount</code>. 折扣
     */
    public final TableField<B2cUserRecord, Integer> DISCOUNT = createField("discount", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "折扣");

    /**
     * The column <code>mini_shop_471752.b2c_user.discount_grade</code>. 会员折扣等级
     */
    public final TableField<B2cUserRecord, Integer> DISCOUNT_GRADE = createField("discount_grade", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "会员折扣等级");

    /**
     * The column <code>mini_shop_471752.b2c_user.is_delete</code>.
     */
    public final TableField<B2cUserRecord, UByte> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user.delete_time</code>. 删除时间
     */
    public final TableField<B2cUserRecord, Timestamp> DELETE_TIME = createField("delete_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "删除时间");

    /**
     * The column <code>mini_shop_471752.b2c_user.growth</code>. 成长值
     */
    public final TableField<B2cUserRecord, Integer> GROWTH = createField("growth", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "成长值");

    /**
     * The column <code>mini_shop_471752.b2c_user.score</code>. 积分
     */
    public final TableField<B2cUserRecord, Integer> SCORE = createField("score", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "积分");

    /**
     * The column <code>mini_shop_471752.b2c_user.source</code>. 门店来源-1未录入0后台&gt;0为门店
     */
    public final TableField<B2cUserRecord, Integer> SOURCE = createField("source", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "门店来源-1未录入0后台>0为门店");

    /**
     * The column <code>mini_shop_471752.b2c_user.invite_id</code>. 邀请人ID
     */
    public final TableField<B2cUserRecord, Integer> INVITE_ID = createField("invite_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "邀请人ID");

    /**
     * The column <code>mini_shop_471752.b2c_user.invite_expiry_date</code>. 邀请失效时间
     */
    public final TableField<B2cUserRecord, Date> INVITE_EXPIRY_DATE = createField("invite_expiry_date", org.jooq.impl.SQLDataType.DATE, this, "邀请失效时间");

    /**
     * The column <code>mini_shop_471752.b2c_user.wx_union_id</code>. 小程序unionid
     */
    public final TableField<B2cUserRecord, String> WX_UNION_ID = createField("wx_union_id", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "小程序unionid");

    /**
     * The column <code>mini_shop_471752.b2c_user.update_time</code>. 最后修改时间
     */
    public final TableField<B2cUserRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后修改时间");

    /**
     * The column <code>mini_shop_471752.b2c_user.is_distributor</code>. 是否是分销员
     */
    public final TableField<B2cUserRecord, Byte> IS_DISTRIBUTOR = createField("is_distributor", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否是分销员");

    /**
     * The column <code>mini_shop_471752.b2c_user.invite_act_id</code>. 邀请来源活动ID
     */
    public final TableField<B2cUserRecord, Integer> INVITE_ACT_ID = createField("invite_act_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "邀请来源活动ID");

    /**
     * The column <code>mini_shop_471752.b2c_user.distributor_level</code>. 用户等级
     */
    public final TableField<B2cUserRecord, Byte> DISTRIBUTOR_LEVEL = createField("distributor_level", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "用户等级");

    /**
     * The column <code>mini_shop_471752.b2c_user.ali_user_id</code>. 支付宝用户ID
     */
    public final TableField<B2cUserRecord, String> ALI_USER_ID = createField("ali_user_id", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "支付宝用户ID");

    /**
     * The column <code>mini_shop_471752.b2c_user.device</code>. 登录设备
     */
    public final TableField<B2cUserRecord, String> DEVICE = createField("device", org.jooq.impl.SQLDataType.VARCHAR(50), this, "登录设备");

    /**
     * The column <code>mini_shop_471752.b2c_user.invite_protect_date</code>. 邀请保护时间
     */
    public final TableField<B2cUserRecord, Date> INVITE_PROTECT_DATE = createField("invite_protect_date", org.jooq.impl.SQLDataType.DATE, this, "邀请保护时间");

    /**
     * The column <code>mini_shop_471752.b2c_user.look_collect_time</code>. 最近看见收藏有礼图标时间
     */
    public final TableField<B2cUserRecord, Timestamp> LOOK_COLLECT_TIME = createField("look_collect_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最近看见收藏有礼图标时间");

    /**
     * The column <code>mini_shop_471752.b2c_user.get_collect_gift</code>. 是否获得收藏好礼：0未获得，1已获得
     */
    public final TableField<B2cUserRecord, UByte> GET_COLLECT_GIFT = createField("get_collect_gift", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "是否获得收藏好礼：0未获得，1已获得");

    /**
     * The column <code>mini_shop_471752.b2c_user.invite_group</code>. 分销员分组
     */
    public final TableField<B2cUserRecord, Integer> INVITE_GROUP = createField("invite_group", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "分销员分组");

    /**
     * The column <code>mini_shop_471752.b2c_user.unit_price</code>. 客单价
     */
    public final TableField<B2cUserRecord, BigDecimal> UNIT_PRICE = createField("unit_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "客单价");

    /**
     * Create a <code>mini_shop_471752.b2c_user</code> table reference
     */
    public B2cUser() {
        this(DSL.name("b2c_user"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user</code> table reference
     */
    public B2cUser(String alias) {
        this(DSL.name(alias), B2C_USER);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user</code> table reference
     */
    public B2cUser(Name alias) {
        this(alias, B2C_USER);
    }

    private B2cUser(Name alias, Table<B2cUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cUser(Name alias, Table<B2cUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cUser(Table<O> child, ForeignKey<O, B2cUserRecord> key) {
        super(child, key, B2C_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_USER_MOBILE, Indexes.B2C_USER_PRIMARY, Indexes.B2C_USER_USER_CODE, Indexes.B2C_USER_WX_UNION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cUserRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cUserRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cUserRecord>>asList(Keys.KEY_B2C_USER_PRIMARY, Keys.KEY_B2C_USER_MOBILE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUser as(String alias) {
        return new B2cUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUser as(Name alias) {
        return new B2cUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUser rename(String name) {
        return new B2cUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUser rename(Name name) {
        return new B2cUser(name, null);
    }
}
