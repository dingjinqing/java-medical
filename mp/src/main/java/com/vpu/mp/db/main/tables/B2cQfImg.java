/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.B2cQfImgRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cQfImg extends TableImpl<B2cQfImgRecord> {

    private static final long serialVersionUID = -1369289823;

    /**
     * The reference instance of <code>mini_main.b2c_qf_img</code>
     */
    public static final B2cQfImg B2C_QF_IMG = new B2cQfImg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cQfImgRecord> getRecordType() {
        return B2cQfImgRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_qf_img.img_id</code>.
     */
    public final TableField<B2cQfImgRecord, UInteger> IMG_ID = createField("img_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_qf_img.question_feedback_id</code>.
     */
    public final TableField<B2cQfImgRecord, UInteger> QUESTION_FEEDBACK_ID = createField("question_feedback_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>mini_main.b2c_qf_img.img_url</code>.
     */
    public final TableField<B2cQfImgRecord, String> IMG_URL = createField("img_url", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_main.b2c_qf_img.img_desc</code>.
     */
    public final TableField<B2cQfImgRecord, String> IMG_DESC = createField("img_desc", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>mini_main.b2c_qf_img</code> table reference
     */
    public B2cQfImg() {
        this(DSL.name("b2c_qf_img"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_qf_img</code> table reference
     */
    public B2cQfImg(String alias) {
        this(DSL.name(alias), B2C_QF_IMG);
    }

    /**
     * Create an aliased <code>mini_main.b2c_qf_img</code> table reference
     */
    public B2cQfImg(Name alias) {
        this(alias, B2C_QF_IMG);
    }

    private B2cQfImg(Name alias, Table<B2cQfImgRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cQfImg(Name alias, Table<B2cQfImgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cQfImg(Table<O> child, ForeignKey<O, B2cQfImgRecord> key) {
        super(child, key, B2C_QF_IMG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_QF_IMG_PRIMARY, Indexes.B2C_QF_IMG_QUESTION_FEEDBACK_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cQfImgRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_QF_IMG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cQfImgRecord> getPrimaryKey() {
        return Keys.KEY_B2C_QF_IMG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cQfImgRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cQfImgRecord>>asList(Keys.KEY_B2C_QF_IMG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cQfImg as(String alias) {
        return new B2cQfImg(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cQfImg as(Name alias) {
        return new B2cQfImg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cQfImg rename(String name) {
        return new B2cQfImg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cQfImg rename(Name name) {
        return new B2cQfImg(name, null);
    }
}
