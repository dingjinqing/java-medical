/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cGoodsBakRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cGoodsBak extends TableImpl<B2cGoodsBakRecord> {

    private static final long serialVersionUID = 1679148093;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_goods_bak</code>
     */
    public static final B2cGoodsBak B2C_GOODS_BAK = new B2cGoodsBak();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cGoodsBakRecord> getRecordType() {
        return B2cGoodsBakRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_goods_bak.id</code>.
     */
    public final TableField<B2cGoodsBakRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_goods_bak.bak_date</code>. 备份日期：例2018-09-05
     */
    public final TableField<B2cGoodsBakRecord, Date> BAK_DATE = createField("bak_date", org.jooq.impl.SQLDataType.DATE, this, "备份日期：例2018-09-05");

    /**
     * The column <code>mini_shop_471752.b2c_goods_bak.goods_id</code>.
     */
    public final TableField<B2cGoodsBakRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_goods_bak.shop_id</code>. 店铺ID
     */
    public final TableField<B2cGoodsBakRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_shop_471752.b2c_goods_bak.cat_id</code>.
     */
    public final TableField<B2cGoodsBakRecord, UInteger> CAT_ID = createField("cat_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_goods_bak.sort_id</code>.
     */
    public final TableField<B2cGoodsBakRecord, Integer> SORT_ID = createField("sort_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_goods_bak.market_price</code>.
     */
    public final TableField<B2cGoodsBakRecord, BigDecimal> MARKET_PRICE = createField("market_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_goods_bak.shop_price</code>.
     */
    public final TableField<B2cGoodsBakRecord, BigDecimal> SHOP_PRICE = createField("shop_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_goods_bak.goods_number</code>. 库存
     */
    public final TableField<B2cGoodsBakRecord, Integer> GOODS_NUMBER = createField("goods_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "库存");

    /**
     * The column <code>mini_shop_471752.b2c_goods_bak.is_on_sale</code>. 是否在售，1在售，0下架
     */
    public final TableField<B2cGoodsBakRecord, UByte> IS_ON_SALE = createField("is_on_sale", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "是否在售，1在售，0下架");

    /**
     * The column <code>mini_shop_471752.b2c_goods_bak.goods_type</code>. 商品类型，0普通商品，1拼团商品，2分销，3砍价商品 4积分商品 5秒杀商品
     */
    public final TableField<B2cGoodsBakRecord, UByte> GOODS_TYPE = createField("goods_type", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "商品类型，0普通商品，1拼团商品，2分销，3砍价商品 4积分商品 5秒杀商品");

    /**
     * Create a <code>mini_shop_471752.b2c_goods_bak</code> table reference
     */
    public B2cGoodsBak() {
        this(DSL.name("b2c_goods_bak"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_goods_bak</code> table reference
     */
    public B2cGoodsBak(String alias) {
        this(DSL.name(alias), B2C_GOODS_BAK);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_goods_bak</code> table reference
     */
    public B2cGoodsBak(Name alias) {
        this(alias, B2C_GOODS_BAK);
    }

    private B2cGoodsBak(Name alias, Table<B2cGoodsBakRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cGoodsBak(Name alias, Table<B2cGoodsBakRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cGoodsBak(Table<O> child, ForeignKey<O, B2cGoodsBakRecord> key) {
        super(child, key, B2C_GOODS_BAK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_GOODS_BAK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cGoodsBakRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_GOODS_BAK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cGoodsBakRecord> getPrimaryKey() {
        return Keys.KEY_B2C_GOODS_BAK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cGoodsBakRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cGoodsBakRecord>>asList(Keys.KEY_B2C_GOODS_BAK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cGoodsBak as(String alias) {
        return new B2cGoodsBak(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cGoodsBak as(Name alias) {
        return new B2cGoodsBak(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cGoodsBak rename(String name) {
        return new B2cGoodsBak(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cGoodsBak rename(Name name) {
        return new B2cGoodsBak(name, null);
    }
}
