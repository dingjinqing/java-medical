/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cFormPageRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cFormPage extends TableImpl<B2cFormPageRecord> {

    private static final long serialVersionUID = -2086678593;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_form_page</code>
     */
    public static final B2cFormPage B2C_FORM_PAGE = new B2cFormPage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cFormPageRecord> getRecordType() {
        return B2cFormPageRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_form_page.page_id</code>. 表单页ID
     */
    public final TableField<B2cFormPageRecord, UInteger> PAGE_ID = createField("page_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "表单页ID");

    /**
     * The column <code>mini_shop_471752.b2c_form_page.shop_id</code>. 店铺ID
     */
    public final TableField<B2cFormPageRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_shop_471752.b2c_form_page.page_name</code>.
     */
    public final TableField<B2cFormPageRecord, String> PAGE_NAME = createField("page_name", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_form_page.state</code>. 状态：0未发布，1已发布 2已关闭 3 已删除
     */
    public final TableField<B2cFormPageRecord, Byte> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "状态：0未发布，1已发布 2已关闭 3 已删除");

    /**
     * The column <code>mini_shop_471752.b2c_form_page.page_content</code>. 页面内容，json格式存储
     */
    public final TableField<B2cFormPageRecord, String> PAGE_CONTENT = createField("page_content", org.jooq.impl.SQLDataType.CLOB, this, "页面内容，json格式存储");

    /**
     * The column <code>mini_shop_471752.b2c_form_page.form_cfg</code>. 表单配置，json格式存储
     */
    public final TableField<B2cFormPageRecord, String> FORM_CFG = createField("form_cfg", org.jooq.impl.SQLDataType.CLOB, this, "表单配置，json格式存储");

    /**
     * The column <code>mini_shop_471752.b2c_form_page.create_time</code>.
     */
    public final TableField<B2cFormPageRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_form_page.start_time</code>. 开始时间
     */
    public final TableField<B2cFormPageRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "开始时间");

    /**
     * The column <code>mini_shop_471752.b2c_form_page.end_time</code>. 结束时间
     */
    public final TableField<B2cFormPageRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "结束时间");

    /**
     * The column <code>mini_shop_471752.b2c_form_page.is_forever_valid</code>. 1永久有效，0期限内有效
     */
    public final TableField<B2cFormPageRecord, Byte> IS_FOREVER_VALID = createField("is_forever_valid", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "1永久有效，0期限内有效");

    /**
     * The column <code>mini_shop_471752.b2c_form_page.submit_num</code>. 反馈数量
     */
    public final TableField<B2cFormPageRecord, Integer> SUBMIT_NUM = createField("submit_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "反馈数量");

    /**
     * Create a <code>mini_shop_471752.b2c_form_page</code> table reference
     */
    public B2cFormPage() {
        this(DSL.name("b2c_form_page"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_form_page</code> table reference
     */
    public B2cFormPage(String alias) {
        this(DSL.name(alias), B2C_FORM_PAGE);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_form_page</code> table reference
     */
    public B2cFormPage(Name alias) {
        this(alias, B2C_FORM_PAGE);
    }

    private B2cFormPage(Name alias, Table<B2cFormPageRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cFormPage(Name alias, Table<B2cFormPageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cFormPage(Table<O> child, ForeignKey<O, B2cFormPageRecord> key) {
        super(child, key, B2C_FORM_PAGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_FORM_PAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cFormPageRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_FORM_PAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cFormPageRecord> getPrimaryKey() {
        return Keys.KEY_B2C_FORM_PAGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cFormPageRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cFormPageRecord>>asList(Keys.KEY_B2C_FORM_PAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cFormPage as(String alias) {
        return new B2cFormPage(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cFormPage as(Name alias) {
        return new B2cFormPage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cFormPage rename(String name) {
        return new B2cFormPage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cFormPage rename(Name name) {
        return new B2cFormPage(name, null);
    }
}
