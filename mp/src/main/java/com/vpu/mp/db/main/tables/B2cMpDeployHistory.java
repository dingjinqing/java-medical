/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.B2cMpDeployHistoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cMpDeployHistory extends TableImpl<B2cMpDeployHistoryRecord> {

    private static final long serialVersionUID = -332922078;

    /**
     * The reference instance of <code>mini_main.b2c_mp_deploy_history</code>
     */
    public static final B2cMpDeployHistory B2C_MP_DEPLOY_HISTORY = new B2cMpDeployHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cMpDeployHistoryRecord> getRecordType() {
        return B2cMpDeployHistoryRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.deploy_id</code>. 自增ID
     */
    public final TableField<B2cMpDeployHistoryRecord, Integer> DEPLOY_ID = createField("deploy_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "自增ID");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.bind_template_id</code>. 小程序模板Id
     */
    public final TableField<B2cMpDeployHistoryRecord, Integer> BIND_TEMPLATE_ID = createField("bind_template_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "小程序模板Id");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.app_id</code>. 小程序app_id
     */
    public final TableField<B2cMpDeployHistoryRecord, String> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "小程序app_id");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.deploy_log</code>. 小程序模板部署日志
     */
    public final TableField<B2cMpDeployHistoryRecord, String> DEPLOY_LOG = createField("deploy_log", org.jooq.impl.SQLDataType.CLOB, this, "小程序模板部署日志");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.deploy_time</code>. 小程序模板添加时间
     */
    public final TableField<B2cMpDeployHistoryRecord, Timestamp> DEPLOY_TIME = createField("deploy_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "小程序模板添加时间");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.is_modify_domain</code>. 是否修改开发和业务域名，0未修改，1已修改
     */
    public final TableField<B2cMpDeployHistoryRecord, Byte> IS_MODIFY_DOMAIN = createField("is_modify_domain", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否修改开发和业务域名，0未修改，1已修改");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.upload_state</code>. 上传状态，0未上传，1已上传
     */
    public final TableField<B2cMpDeployHistoryRecord, Byte> UPLOAD_STATE = createField("upload_state", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "上传状态，0未上传，1已上传");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.last_upload_time</code>. 上传代码时间
     */
    public final TableField<B2cMpDeployHistoryRecord, Timestamp> LAST_UPLOAD_TIME = createField("last_upload_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "上传代码时间");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.audit_id</code>. 最新的审核ID
     */
    public final TableField<B2cMpDeployHistoryRecord, Integer> AUDIT_ID = createField("audit_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "最新的审核ID");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.audit_state</code>. 审核状态，0未提交，1审核中，2审核成功 3审核失败
     */
    public final TableField<B2cMpDeployHistoryRecord, Byte> AUDIT_STATE = createField("audit_state", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "审核状态，0未提交，1审核中，2审核成功 3审核失败");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.submit_audit_time</code>. 提交代码审核时间
     */
    public final TableField<B2cMpDeployHistoryRecord, Timestamp> SUBMIT_AUDIT_TIME = createField("submit_audit_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "提交代码审核时间");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.audit_ok_time</code>. 审核通过时间
     */
    public final TableField<B2cMpDeployHistoryRecord, Timestamp> AUDIT_OK_TIME = createField("audit_ok_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "审核通过时间");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.audit_fail_reason</code>. 未通过审核原因
     */
    public final TableField<B2cMpDeployHistoryRecord, String> AUDIT_FAIL_REASON = createField("audit_fail_reason", org.jooq.impl.SQLDataType.VARCHAR(191), this, "未通过审核原因");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.publish_state</code>. 通过审核的小程序发布状态，0未发布，1已发布
     */
    public final TableField<B2cMpDeployHistoryRecord, Byte> PUBLISH_STATE = createField("publish_state", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "通过审核的小程序发布状态，0未发布，1已发布");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.publish_time</code>. 程序发布时间
     */
    public final TableField<B2cMpDeployHistoryRecord, Timestamp> PUBLISH_TIME = createField("publish_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "程序发布时间");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.tester</code>. 小程序体验者列表,json存储
     */
    public final TableField<B2cMpDeployHistoryRecord, String> TESTER = createField("tester", org.jooq.impl.SQLDataType.CLOB, this, "小程序体验者列表,json存储");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.test_qr_path</code>. 小程序体验二维码图片路径
     */
    public final TableField<B2cMpDeployHistoryRecord, String> TEST_QR_PATH = createField("test_qr_path", org.jooq.impl.SQLDataType.VARCHAR(191), this, "小程序体验二维码图片路径");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.category</code>. 小程序可选类目,json存储
     */
    public final TableField<B2cMpDeployHistoryRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.CLOB, this, "小程序可选类目,json存储");

    /**
     * The column <code>mini_main.b2c_mp_deploy_history.page_cfg</code>. 小程序页面配置,json存储
     */
    public final TableField<B2cMpDeployHistoryRecord, String> PAGE_CFG = createField("page_cfg", org.jooq.impl.SQLDataType.CLOB, this, "小程序页面配置,json存储");

    /**
     * Create a <code>mini_main.b2c_mp_deploy_history</code> table reference
     */
    public B2cMpDeployHistory() {
        this(DSL.name("b2c_mp_deploy_history"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_mp_deploy_history</code> table reference
     */
    public B2cMpDeployHistory(String alias) {
        this(DSL.name(alias), B2C_MP_DEPLOY_HISTORY);
    }

    /**
     * Create an aliased <code>mini_main.b2c_mp_deploy_history</code> table reference
     */
    public B2cMpDeployHistory(Name alias) {
        this(alias, B2C_MP_DEPLOY_HISTORY);
    }

    private B2cMpDeployHistory(Name alias, Table<B2cMpDeployHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cMpDeployHistory(Name alias, Table<B2cMpDeployHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cMpDeployHistory(Table<O> child, ForeignKey<O, B2cMpDeployHistoryRecord> key) {
        super(child, key, B2C_MP_DEPLOY_HISTORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_MP_DEPLOY_HISTORY_BIND_TEMPLATE_ID, Indexes.B2C_MP_DEPLOY_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cMpDeployHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_MP_DEPLOY_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cMpDeployHistoryRecord> getPrimaryKey() {
        return Keys.KEY_B2C_MP_DEPLOY_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cMpDeployHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cMpDeployHistoryRecord>>asList(Keys.KEY_B2C_MP_DEPLOY_HISTORY_PRIMARY, Keys.KEY_B2C_MP_DEPLOY_HISTORY_BIND_TEMPLATE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cMpDeployHistory as(String alias) {
        return new B2cMpDeployHistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cMpDeployHistory as(Name alias) {
        return new B2cMpDeployHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cMpDeployHistory rename(String name) {
        return new B2cMpDeployHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cMpDeployHistory rename(Name name) {
        return new B2cMpDeployHistory(name, null);
    }
}
