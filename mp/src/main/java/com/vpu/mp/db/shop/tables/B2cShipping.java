/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cShippingRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cShipping extends TableImpl<B2cShippingRecord> {

    private static final long serialVersionUID = 1061877826;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_shipping</code>
     */
    public static final B2cShipping B2C_SHIPPING = new B2cShipping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cShippingRecord> getRecordType() {
        return B2cShippingRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_shipping.shipping_id</code>.
     */
    public final TableField<B2cShippingRecord, UByte> SHIPPING_ID = createField("shipping_id", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_shipping.shipping_code</code>.
     */
    public final TableField<B2cShippingRecord, String> SHIPPING_CODE = createField("shipping_code", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_shipping.shipping_name</code>.
     */
    public final TableField<B2cShippingRecord, String> SHIPPING_NAME = createField("shipping_name", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_shipping.shipping_desc</code>.
     */
    public final TableField<B2cShippingRecord, String> SHIPPING_DESC = createField("shipping_desc", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_shipping.insure</code>.
     */
    public final TableField<B2cShippingRecord, String> INSURE = createField("insure", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_shipping.support_cod</code>.
     */
    public final TableField<B2cShippingRecord, UByte> SUPPORT_COD = createField("support_cod", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_shipping.enabled</code>.
     */
    public final TableField<B2cShippingRecord, UByte> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_shipping.shipping_print</code>.
     */
    public final TableField<B2cShippingRecord, String> SHIPPING_PRINT = createField("shipping_print", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_shipping.print_model</code>.
     */
    public final TableField<B2cShippingRecord, Byte> PRINT_MODEL = createField("print_model", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_shipping.shipping_order</code>.
     */
    public final TableField<B2cShippingRecord, UByte> SHIPPING_ORDER = createField("shipping_order", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * Create a <code>mini_shop_471752.b2c_shipping</code> table reference
     */
    public B2cShipping() {
        this(DSL.name("b2c_shipping"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_shipping</code> table reference
     */
    public B2cShipping(String alias) {
        this(DSL.name(alias), B2C_SHIPPING);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_shipping</code> table reference
     */
    public B2cShipping(Name alias) {
        this(alias, B2C_SHIPPING);
    }

    private B2cShipping(Name alias, Table<B2cShippingRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cShipping(Name alias, Table<B2cShippingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cShipping(Table<O> child, ForeignKey<O, B2cShippingRecord> key) {
        super(child, key, B2C_SHIPPING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SHIPPING_PRIMARY, Indexes.B2C_SHIPPING_SHIPPING_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cShippingRecord, UByte> getIdentity() {
        return Keys.IDENTITY_B2C_SHIPPING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cShippingRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SHIPPING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cShippingRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cShippingRecord>>asList(Keys.KEY_B2C_SHIPPING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cShipping as(String alias) {
        return new B2cShipping(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cShipping as(Name alias) {
        return new B2cShipping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cShipping rename(String name) {
        return new B2cShipping(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cShipping rename(Name name) {
        return new B2cShipping(name, null);
    }
}
