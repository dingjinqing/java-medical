/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cPaymentRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cPaymentRecord extends TableImpl<B2cPaymentRecordRecord> {

    private static final long serialVersionUID = -900390980;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_payment_record</code>
     */
    public static final B2cPaymentRecord B2C_PAYMENT_RECORD = new B2cPaymentRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cPaymentRecordRecord> getRecordType() {
        return B2cPaymentRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.id</code>.
     */
    public final TableField<B2cPaymentRecordRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.shop_id</code>. 店铺ID
     */
    public final TableField<B2cPaymentRecordRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.pay_sn</code>. 支付流水号
     */
    public final TableField<B2cPaymentRecordRecord, String> PAY_SN = createField("pay_sn", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "支付流水号");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.pay_code</code>. 支付宝:alipay,微信：？，...
     */
    public final TableField<B2cPaymentRecordRecord, String> PAY_CODE = createField("pay_code", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "支付宝:alipay,微信：？，...");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.pay_code_alias</code>. 支付宝:alipay,微信：？，...
     */
    public final TableField<B2cPaymentRecordRecord, String> PAY_CODE_ALIAS = createField("pay_code_alias", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "支付宝:alipay,微信：？，...");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.trade_no</code>. 各平台交易号
     */
    public final TableField<B2cPaymentRecordRecord, String> TRADE_NO = createField("trade_no", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "各平台交易号");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.trdae_status</code>. 交易状态0:成功，其它失败
     */
    public final TableField<B2cPaymentRecordRecord, Byte> TRDAE_STATUS = createField("trdae_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.TINYINT)), this, "交易状态0:成功，其它失败");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.trdae_origin_status</code>. 原始交易状态
     */
    public final TableField<B2cPaymentRecordRecord, String> TRDAE_ORIGIN_STATUS = createField("trdae_origin_status", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "原始交易状态");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.subject</code>. 商品名称
     */
    public final TableField<B2cPaymentRecordRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "商品名称");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.quantity</code>. 购买数量
     */
    public final TableField<B2cPaymentRecordRecord, Integer> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "购买数量");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.order_sn</code>. 网站订单号
     */
    public final TableField<B2cPaymentRecordRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "网站订单号");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.main_order_sn</code>. 网站主订单号
     */
    public final TableField<B2cPaymentRecordRecord, String> MAIN_ORDER_SN = createField("main_order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "网站主订单号");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.total_fee</code>. 交易金额
     */
    public final TableField<B2cPaymentRecordRecord, String> TOTAL_FEE = createField("total_fee", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "交易金额");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.buyer_id</code>. 买家支付用户号
     */
    public final TableField<B2cPaymentRecordRecord, String> BUYER_ID = createField("buyer_id", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "买家支付用户号");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.buyer_account</code>. 各平台买家支付账号
     */
    public final TableField<B2cPaymentRecordRecord, String> BUYER_ACCOUNT = createField("buyer_account", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "各平台买家支付账号");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.seller_id</code>. 收款方用户号
     */
    public final TableField<B2cPaymentRecordRecord, String> SELLER_ID = createField("seller_id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "收款方用户号");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.seller_account</code>. 各平台收款方支付账号
     */
    public final TableField<B2cPaymentRecordRecord, String> SELLER_ACCOUNT = createField("seller_account", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "各平台收款方支付账号");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.gmt_create</code>. 支付交易创建时间
     */
    public final TableField<B2cPaymentRecordRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP, this, "支付交易创建时间");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.notify_time</code>. 通知时间
     */
    public final TableField<B2cPaymentRecordRecord, Timestamp> NOTIFY_TIME = createField("notify_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "通知时间");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.gmt_pay_time</code>. 交易付款时间
     */
    public final TableField<B2cPaymentRecordRecord, Timestamp> GMT_PAY_TIME = createField("gmt_pay_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "交易付款时间");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.gmt_close_time</code>. 交易关闭时间
     */
    public final TableField<B2cPaymentRecordRecord, Timestamp> GMT_CLOSE_TIME = createField("gmt_close_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "交易关闭时间");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.created</code>. 插入时间
     */
    public final TableField<B2cPaymentRecordRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "插入时间");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.remark1</code>. 自定义备注  建议用于存储原始数据
     */
    public final TableField<B2cPaymentRecordRecord, String> REMARK1 = createField("remark1", org.jooq.impl.SQLDataType.CLOB, this, "自定义备注  建议用于存储原始数据");

    /**
     * The column <code>mini_shop_471752.b2c_payment_record.remark2</code>. 自定义备注
     */
    public final TableField<B2cPaymentRecordRecord, String> REMARK2 = createField("remark2", org.jooq.impl.SQLDataType.CLOB, this, "自定义备注");

    /**
     * Create a <code>mini_shop_471752.b2c_payment_record</code> table reference
     */
    public B2cPaymentRecord() {
        this(DSL.name("b2c_payment_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_payment_record</code> table reference
     */
    public B2cPaymentRecord(String alias) {
        this(DSL.name(alias), B2C_PAYMENT_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_payment_record</code> table reference
     */
    public B2cPaymentRecord(Name alias) {
        this(alias, B2C_PAYMENT_RECORD);
    }

    private B2cPaymentRecord(Name alias, Table<B2cPaymentRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cPaymentRecord(Name alias, Table<B2cPaymentRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cPaymentRecord(Table<O> child, ForeignKey<O, B2cPaymentRecordRecord> key) {
        super(child, key, B2C_PAYMENT_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_PAYMENT_RECORD_ORDER_SN, Indexes.B2C_PAYMENT_RECORD_PAY_CODE, Indexes.B2C_PAYMENT_RECORD_PAY_SN, Indexes.B2C_PAYMENT_RECORD_PRIMARY, Indexes.B2C_PAYMENT_RECORD_SELLER_ACCOUNT, Indexes.B2C_PAYMENT_RECORD_TRADE_NO, Indexes.B2C_PAYMENT_RECORD_TRDAE_STATUS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cPaymentRecordRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_PAYMENT_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cPaymentRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_PAYMENT_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cPaymentRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cPaymentRecordRecord>>asList(Keys.KEY_B2C_PAYMENT_RECORD_PRIMARY, Keys.KEY_B2C_PAYMENT_RECORD_PAY_SN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cPaymentRecord as(String alias) {
        return new B2cPaymentRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cPaymentRecord as(Name alias) {
        return new B2cPaymentRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cPaymentRecord rename(String name) {
        return new B2cPaymentRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cPaymentRecord rename(Name name) {
        return new B2cPaymentRecord(name, null);
    }
}
