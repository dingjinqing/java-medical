/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cSmsSendRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cSmsSendRecord extends TableImpl<B2cSmsSendRecordRecord> {

    private static final long serialVersionUID = 1972416154;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_sms_send_record</code>
     */
    public static final B2cSmsSendRecord B2C_SMS_SEND_RECORD = new B2cSmsSendRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cSmsSendRecordRecord> getRecordType() {
        return B2cSmsSendRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.id</code>.
     */
    public final TableField<B2cSmsSendRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.account_name</code>. 账号
     */
    public final TableField<B2cSmsSendRecordRecord, String> ACCOUNT_NAME = createField("account_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "账号");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.user_id</code>.
     */
    public final TableField<B2cSmsSendRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.mobile</code>.
     */
    public final TableField<B2cSmsSendRecordRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.request_msg</code>. 请求内容
     */
    public final TableField<B2cSmsSendRecordRecord, String> REQUEST_MSG = createField("request_msg", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "请求内容");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.response_code</code>. 响应码
     */
    public final TableField<B2cSmsSendRecordRecord, String> RESPONSE_CODE = createField("response_code", org.jooq.impl.SQLDataType.VARCHAR(50), this, "响应码");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.response_msg</code>. 响应内容
     */
    public final TableField<B2cSmsSendRecordRecord, String> RESPONSE_MSG = createField("response_msg", org.jooq.impl.SQLDataType.CLOB, this, "响应内容");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.ext</code>. 行业账号 默认:行业 market:营销,checkcode:验证码
     */
    public final TableField<B2cSmsSendRecordRecord, String> EXT = createField("ext", org.jooq.impl.SQLDataType.VARCHAR(20), this, "行业账号 默认:行业 market:营销,checkcode:验证码");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.sms</code>. 短信通道 默认短信策略:mxt
     */
    public final TableField<B2cSmsSendRecordRecord, String> SMS = createField("sms", org.jooq.impl.SQLDataType.VARCHAR(20), this, "短信通道 默认短信策略:mxt");

    /**
     * The column <code>mini_shop_471752.b2c_sms_send_record.add_time</code>.
     */
    public final TableField<B2cSmsSendRecordRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>mini_shop_471752.b2c_sms_send_record</code> table reference
     */
    public B2cSmsSendRecord() {
        this(DSL.name("b2c_sms_send_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_sms_send_record</code> table reference
     */
    public B2cSmsSendRecord(String alias) {
        this(DSL.name(alias), B2C_SMS_SEND_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_sms_send_record</code> table reference
     */
    public B2cSmsSendRecord(Name alias) {
        this(alias, B2C_SMS_SEND_RECORD);
    }

    private B2cSmsSendRecord(Name alias, Table<B2cSmsSendRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cSmsSendRecord(Name alias, Table<B2cSmsSendRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cSmsSendRecord(Table<O> child, ForeignKey<O, B2cSmsSendRecordRecord> key) {
        super(child, key, B2C_SMS_SEND_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SMS_SEND_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cSmsSendRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_SMS_SEND_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cSmsSendRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SMS_SEND_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cSmsSendRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cSmsSendRecordRecord>>asList(Keys.KEY_B2C_SMS_SEND_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cSmsSendRecord as(String alias) {
        return new B2cSmsSendRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cSmsSendRecord as(Name alias) {
        return new B2cSmsSendRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cSmsSendRecord rename(String name) {
        return new B2cSmsSendRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cSmsSendRecord rename(Name name) {
        return new B2cSmsSendRecord(name, null);
    }
}
