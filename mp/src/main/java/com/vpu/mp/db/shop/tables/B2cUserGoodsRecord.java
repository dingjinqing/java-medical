/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cUserGoodsRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cUserGoodsRecord extends TableImpl<B2cUserGoodsRecordRecord> {

    private static final long serialVersionUID = -80161480;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_user_goods_record</code>
     */
    public static final B2cUserGoodsRecord B2C_USER_GOODS_RECORD = new B2cUserGoodsRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cUserGoodsRecordRecord> getRecordType() {
        return B2cUserGoodsRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.id</code>.
     */
    public final TableField<B2cUserGoodsRecordRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.user_id</code>. 用户id
     */
    public final TableField<B2cUserGoodsRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户id");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.goods_id</code>. 商品id
     */
    public final TableField<B2cUserGoodsRecordRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商品id");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.active_id</code>. 活动id
     */
    public final TableField<B2cUserGoodsRecordRecord, Integer> ACTIVE_ID = createField("active_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "活动id");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.active_type</code>. 活动类型
     */
    public final TableField<B2cUserGoodsRecordRecord, Short> ACTIVE_TYPE = createField("active_type", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "活动类型");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.add_time</code>. 时间
     */
    public final TableField<B2cUserGoodsRecordRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "时间");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.user_ip</code>. 用户ip
     */
    public final TableField<B2cUserGoodsRecordRecord, String> USER_IP = createField("user_ip", org.jooq.impl.SQLDataType.VARCHAR(64), this, "用户ip");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.province_code</code>. 省
     */
    public final TableField<B2cUserGoodsRecordRecord, String> PROVINCE_CODE = createField("province_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "省");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.province</code>. 省
     */
    public final TableField<B2cUserGoodsRecordRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR(20), this, "省");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.city_code</code>. 市
     */
    public final TableField<B2cUserGoodsRecordRecord, String> CITY_CODE = createField("city_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "市");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.city</code>. 市
     */
    public final TableField<B2cUserGoodsRecordRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(20), this, "市");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.district_code</code>. 区
     */
    public final TableField<B2cUserGoodsRecordRecord, String> DISTRICT_CODE = createField("district_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "区");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.district</code>. 区
     */
    public final TableField<B2cUserGoodsRecordRecord, String> DISTRICT = createField("district", org.jooq.impl.SQLDataType.VARCHAR(20), this, "区");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.lat</code>. 经度
     */
    public final TableField<B2cUserGoodsRecordRecord, String> LAT = createField("lat", org.jooq.impl.SQLDataType.VARCHAR(64), this, "经度");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.lng</code>. 纬度
     */
    public final TableField<B2cUserGoodsRecordRecord, String> LNG = createField("lng", org.jooq.impl.SQLDataType.VARCHAR(64), this, "纬度");

    /**
     * The column <code>mini_shop_471752.b2c_user_goods_record.count</code>. 次数
     */
    public final TableField<B2cUserGoodsRecordRecord, Short> COUNT = createField("count", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "次数");

    /**
     * Create a <code>mini_shop_471752.b2c_user_goods_record</code> table reference
     */
    public B2cUserGoodsRecord() {
        this(DSL.name("b2c_user_goods_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_goods_record</code> table reference
     */
    public B2cUserGoodsRecord(String alias) {
        this(DSL.name(alias), B2C_USER_GOODS_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_goods_record</code> table reference
     */
    public B2cUserGoodsRecord(Name alias) {
        this(alias, B2C_USER_GOODS_RECORD);
    }

    private B2cUserGoodsRecord(Name alias, Table<B2cUserGoodsRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cUserGoodsRecord(Name alias, Table<B2cUserGoodsRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cUserGoodsRecord(Table<O> child, ForeignKey<O, B2cUserGoodsRecordRecord> key) {
        super(child, key, B2C_USER_GOODS_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_USER_GOODS_RECORD_ADD_TIME, Indexes.B2C_USER_GOODS_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cUserGoodsRecordRecord, ULong> getIdentity() {
        return Keys.IDENTITY_B2C_USER_GOODS_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cUserGoodsRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_GOODS_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cUserGoodsRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cUserGoodsRecordRecord>>asList(Keys.KEY_B2C_USER_GOODS_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUserGoodsRecord as(String alias) {
        return new B2cUserGoodsRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUserGoodsRecord as(Name alias) {
        return new B2cUserGoodsRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUserGoodsRecord rename(String name) {
        return new B2cUserGoodsRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUserGoodsRecord rename(Name name) {
        return new B2cUserGoodsRecord(name, null);
    }
}
