/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cUserGrowthRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cUserGrowth extends TableImpl<B2cUserGrowthRecord> {

    private static final long serialVersionUID = -1914418223;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_user_growth</code>
     */
    public static final B2cUserGrowth B2C_USER_GROWTH = new B2cUserGrowth();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cUserGrowthRecord> getRecordType() {
        return B2cUserGrowthRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.id</code>.
     */
    public final TableField<B2cUserGrowthRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.user_id</code>.
     */
    public final TableField<B2cUserGrowthRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.shop_id</code>. 店铺ID
     */
    public final TableField<B2cUserGrowthRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.score</code>.
     */
    public final TableField<B2cUserGrowthRecord, Integer> SCORE = createField("score", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.status</code>. 0:未过期，1:已过期
     */
    public final TableField<B2cUserGrowthRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:未过期，1:已过期");

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.goods_id</code>.
     */
    public final TableField<B2cUserGrowthRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.order_sn</code>.
     */
    public final TableField<B2cUserGrowthRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.desc</code>. 登录，购物，评价，晒单
     */
    public final TableField<B2cUserGrowthRecord, String> DESC = createField("desc", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false), this, "登录，购物，评价，晒单");

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.in_time</code>.
     */
    public final TableField<B2cUserGrowthRecord, Timestamp> IN_TIME = createField("in_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.expire_time</code>.
     */
    public final TableField<B2cUserGrowthRecord, Timestamp> EXPIRE_TIME = createField("expire_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.growth_flag</code>. 0:评价商品送给成长值,1:分享商品赠送成长值
     */
    public final TableField<B2cUserGrowthRecord, Byte> GROWTH_FLAG = createField("growth_flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:评价商品送给成长值,1:分享商品赠送成长值");

    /**
     * The column <code>mini_shop_471752.b2c_user_growth.deal_remark</code>. 备注
     */
    public final TableField<B2cUserGrowthRecord, String> DEAL_REMARK = createField("deal_remark", org.jooq.impl.SQLDataType.VARCHAR(100), this, "备注");

    /**
     * Create a <code>mini_shop_471752.b2c_user_growth</code> table reference
     */
    public B2cUserGrowth() {
        this(DSL.name("b2c_user_growth"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_growth</code> table reference
     */
    public B2cUserGrowth(String alias) {
        this(DSL.name(alias), B2C_USER_GROWTH);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_growth</code> table reference
     */
    public B2cUserGrowth(Name alias) {
        this(alias, B2C_USER_GROWTH);
    }

    private B2cUserGrowth(Name alias, Table<B2cUserGrowthRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cUserGrowth(Name alias, Table<B2cUserGrowthRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cUserGrowth(Table<O> child, ForeignKey<O, B2cUserGrowthRecord> key) {
        super(child, key, B2C_USER_GROWTH);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_USER_GROWTH_PRIMARY, Indexes.B2C_USER_GROWTH_SHOP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cUserGrowthRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_USER_GROWTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cUserGrowthRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_GROWTH_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cUserGrowthRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cUserGrowthRecord>>asList(Keys.KEY_B2C_USER_GROWTH_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUserGrowth as(String alias) {
        return new B2cUserGrowth(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUserGrowth as(Name alias) {
        return new B2cUserGrowth(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUserGrowth rename(String name) {
        return new B2cUserGrowth(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUserGrowth rename(Name name) {
        return new B2cUserGrowth(name, null);
    }
}
