/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables.records;


import com.vpu.mp.db.shop.tables.UserAccount;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAccountRecord extends UpdatableRecordImpl<UserAccountRecord> implements Record11<UInteger, UInteger, String, String, BigDecimal, Timestamp, String, String, Byte, String, Byte> {

    private static final long serialVersionUID = -930352212;

    /**
     * Setter for <code>mini_shop_1.b2c_user_account.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_user_account.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_user_account.user_id</code>.
     */
    public void setUserId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_user_account.user_id</code>.
     */
    public UInteger getUserId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_user_account.admin_user</code>. 操作员
     */
    public void setAdminUser(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_user_account.admin_user</code>. 操作员
     */
    public String getAdminUser() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_user_account.order_sn</code>. 分销订单结算产生返利
     */
    public void setOrderSn(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_user_account.order_sn</code>. 分销订单结算产生返利
     */
    public String getOrderSn() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_user_account.amount</code>. 金额
     */
    public void setAmount(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_user_account.amount</code>. 金额
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_user_account.add_time</code>. 创建时间
     */
    public void setAddTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_user_account.add_time</code>. 创建时间
     */
    public Timestamp getAddTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_user_account.admin_note</code>. 操作员备注
     */
    public void setAdminNote(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_user_account.admin_note</code>. 操作员备注
     */
    public String getAdminNote() {
        return (String) get(6);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_user_account.payment</code>. 支付方式
     */
    public void setPayment(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_user_account.payment</code>. 支付方式
     */
    public String getPayment() {
        return (String) get(7);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_user_account.is_paid</code>. 支付类型，0：充值，1：消费
     */
    public void setIsPaid(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_user_account.is_paid</code>. 支付类型，0：充值，1：消费
     */
    public Byte getIsPaid() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_user_account.remark</code>. 备注
     */
    public void setRemark(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_user_account.remark</code>. 备注
     */
    public String getRemark() {
        return (String) get(9);
    }

    /**
     * Setter for <code>mini_shop_1.b2c_user_account.source</code>. 1:分销来源，0:充值
     */
    public void setSource(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>mini_shop_1.b2c_user_account.source</code>. 1:分销来源，0:充值
     */
    public Byte getSource() {
        return (Byte) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<UInteger, UInteger, String, String, BigDecimal, Timestamp, String, String, Byte, String, Byte> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<UInteger, UInteger, String, String, BigDecimal, Timestamp, String, String, Byte, String, Byte> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return UserAccount.USER_ACCOUNT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return UserAccount.USER_ACCOUNT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return UserAccount.USER_ACCOUNT.ADMIN_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return UserAccount.USER_ACCOUNT.ORDER_SN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return UserAccount.USER_ACCOUNT.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return UserAccount.USER_ACCOUNT.ADD_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return UserAccount.USER_ACCOUNT.ADMIN_NOTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return UserAccount.USER_ACCOUNT.PAYMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field9() {
        return UserAccount.USER_ACCOUNT.IS_PAID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return UserAccount.USER_ACCOUNT.REMARK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field11() {
        return UserAccount.USER_ACCOUNT.SOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getAdminUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getOrderSn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component5() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getAddTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getAdminNote();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getPayment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component9() {
        return getIsPaid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getRemark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component11() {
        return getSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAdminUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getOrderSn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getAddTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getAdminNote();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getPayment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value9() {
        return getIsPaid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getRemark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value11() {
        return getSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord value2(UInteger value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord value3(String value) {
        setAdminUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord value4(String value) {
        setOrderSn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord value5(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord value6(Timestamp value) {
        setAddTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord value7(String value) {
        setAdminNote(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord value8(String value) {
        setPayment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord value9(Byte value) {
        setIsPaid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord value10(String value) {
        setRemark(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord value11(Byte value) {
        setSource(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAccountRecord values(UInteger value1, UInteger value2, String value3, String value4, BigDecimal value5, Timestamp value6, String value7, String value8, Byte value9, String value10, Byte value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAccountRecord
     */
    public UserAccountRecord() {
        super(UserAccount.USER_ACCOUNT);
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(UInteger id, UInteger userId, String adminUser, String orderSn, BigDecimal amount, Timestamp addTime, String adminNote, String payment, Byte isPaid, String remark, Byte source) {
        super(UserAccount.USER_ACCOUNT);

        set(0, id);
        set(1, userId);
        set(2, adminUser);
        set(3, orderSn);
        set(4, amount);
        set(5, addTime);
        set(6, adminNote);
        set(7, payment);
        set(8, isPaid);
        set(9, remark);
        set(10, source);
    }
}
