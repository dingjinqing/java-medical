/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.B2cArticleRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cArticleRecord extends TableImpl<B2cArticleRecordRecord> {

    private static final long serialVersionUID = 1844304496;

    /**
     * The reference instance of <code>mini_main.b2c_article_record</code>
     */
    public static final B2cArticleRecord B2C_ARTICLE_RECORD = new B2cArticleRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cArticleRecordRecord> getRecordType() {
        return B2cArticleRecordRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_article_record.id</code>.
     */
    public final TableField<B2cArticleRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_article_record.article_id</code>. 阅读文章id
     */
    public final TableField<B2cArticleRecordRecord, UInteger> ARTICLE_ID = createField("article_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "阅读文章id");

    /**
     * The column <code>mini_main.b2c_article_record.add_time</code>.
     */
    public final TableField<B2cArticleRecordRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_main.b2c_article_record.sys_id</code>.
     */
    public final TableField<B2cArticleRecordRecord, Integer> SYS_ID = createField("sys_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>mini_main.b2c_article_record</code> table reference
     */
    public B2cArticleRecord() {
        this(DSL.name("b2c_article_record"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_article_record</code> table reference
     */
    public B2cArticleRecord(String alias) {
        this(DSL.name(alias), B2C_ARTICLE_RECORD);
    }

    /**
     * Create an aliased <code>mini_main.b2c_article_record</code> table reference
     */
    public B2cArticleRecord(Name alias) {
        this(alias, B2C_ARTICLE_RECORD);
    }

    private B2cArticleRecord(Name alias, Table<B2cArticleRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cArticleRecord(Name alias, Table<B2cArticleRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cArticleRecord(Table<O> child, ForeignKey<O, B2cArticleRecordRecord> key) {
        super(child, key, B2C_ARTICLE_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_ARTICLE_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cArticleRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_ARTICLE_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cArticleRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_ARTICLE_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cArticleRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cArticleRecordRecord>>asList(Keys.KEY_B2C_ARTICLE_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cArticleRecord as(String alias) {
        return new B2cArticleRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cArticleRecord as(Name alias) {
        return new B2cArticleRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cArticleRecord rename(String name) {
        return new B2cArticleRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cArticleRecord rename(Name name) {
        return new B2cArticleRecord(name, null);
    }
}
