/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.B2cUserLoginRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cUserLoginRecord extends TableImpl<B2cUserLoginRecordRecord> {

    private static final long serialVersionUID = -2125065700;

    /**
     * The reference instance of <code>mini_main.b2c_user_login_record</code>
     */
    public static final B2cUserLoginRecord B2C_USER_LOGIN_RECORD = new B2cUserLoginRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cUserLoginRecordRecord> getRecordType() {
        return B2cUserLoginRecordRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_user_login_record.id</code>.
     */
    public final TableField<B2cUserLoginRecordRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_user_login_record.shop_id</code>. 店铺ID
     */
    public final TableField<B2cUserLoginRecordRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_main.b2c_user_login_record.shop_name</code>. 店铺名称
     */
    public final TableField<B2cUserLoginRecordRecord, String> SHOP_NAME = createField("shop_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "店铺名称");

    /**
     * The column <code>mini_main.b2c_user_login_record.sys_id</code>. 主账户ID
     */
    public final TableField<B2cUserLoginRecordRecord, Integer> SYS_ID = createField("sys_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "主账户ID");

    /**
     * The column <code>mini_main.b2c_user_login_record.user_id</code>. 登陆用户id
     */
    public final TableField<B2cUserLoginRecordRecord, Short> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "登陆用户id");

    /**
     * The column <code>mini_main.b2c_user_login_record.user_name</code>. 登陆用户名
     */
    public final TableField<B2cUserLoginRecordRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "登陆用户名");

    /**
     * The column <code>mini_main.b2c_user_login_record.add_time</code>. 每日登陆时间
     */
    public final TableField<B2cUserLoginRecordRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "每日登陆时间");

    /**
     * The column <code>mini_main.b2c_user_login_record.user_ip</code>. 用户登录ip
     */
    public final TableField<B2cUserLoginRecordRecord, String> USER_IP = createField("user_ip", org.jooq.impl.SQLDataType.VARCHAR(64), this, "用户登录ip");

    /**
     * The column <code>mini_main.b2c_user_login_record.count</code>. 每日登陆次数
     */
    public final TableField<B2cUserLoginRecordRecord, Short> COUNT = createField("count", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "每日登陆次数");

    /**
     * Create a <code>mini_main.b2c_user_login_record</code> table reference
     */
    public B2cUserLoginRecord() {
        this(DSL.name("b2c_user_login_record"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_user_login_record</code> table reference
     */
    public B2cUserLoginRecord(String alias) {
        this(DSL.name(alias), B2C_USER_LOGIN_RECORD);
    }

    /**
     * Create an aliased <code>mini_main.b2c_user_login_record</code> table reference
     */
    public B2cUserLoginRecord(Name alias) {
        this(alias, B2C_USER_LOGIN_RECORD);
    }

    private B2cUserLoginRecord(Name alias, Table<B2cUserLoginRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cUserLoginRecord(Name alias, Table<B2cUserLoginRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cUserLoginRecord(Table<O> child, ForeignKey<O, B2cUserLoginRecordRecord> key) {
        super(child, key, B2C_USER_LOGIN_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_USER_LOGIN_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cUserLoginRecordRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_USER_LOGIN_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cUserLoginRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_LOGIN_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cUserLoginRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cUserLoginRecordRecord>>asList(Keys.KEY_B2C_USER_LOGIN_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUserLoginRecord as(String alias) {
        return new B2cUserLoginRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUserLoginRecord as(Name alias) {
        return new B2cUserLoginRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUserLoginRecord rename(String name) {
        return new B2cUserLoginRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUserLoginRecord rename(Name name) {
        return new B2cUserLoginRecord(name, null);
    }
}
