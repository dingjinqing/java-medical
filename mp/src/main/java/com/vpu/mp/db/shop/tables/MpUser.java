/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.MpUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MpUser extends TableImpl<MpUserRecord> {

    private static final long serialVersionUID = -1641122746;

    /**
     * The reference instance of <code>mini_shop_1.b2c_mp_user</code>
     */
    public static final MpUser MP_USER = new MpUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MpUserRecord> getRecordType() {
        return MpUserRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_mp_user.mp_user_id</code>.
     */
    public final TableField<MpUserRecord, UInteger> MP_USER_ID = createField("mp_user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.app_id</code>. 小程序appId
     */
    public final TableField<MpUserRecord, String> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "小程序appId");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.openid</code>. 用户的标识，对当前公众号唯一
     */
    public final TableField<MpUserRecord, String> OPENID = createField("openid", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "用户的标识，对当前公众号唯一");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.nickname</code>.
     */
    public final TableField<MpUserRecord, String> NICKNAME = createField("nickname", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.gender</code>. 用户的性别，值为1时是男性，值为2时是女性，值为0时是未知
     */
    public final TableField<MpUserRecord, Byte> GENDER = createField("gender", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "用户的性别，值为1时是男性，值为2时是女性，值为0时是未知");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.language</code>. 用户的语言，简体中文为zh_CN
     */
    public final TableField<MpUserRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.VARCHAR(20), this, "用户的语言，简体中文为zh_CN");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.city</code>. 用户所在城市
     */
    public final TableField<MpUserRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(50), this, "用户所在城市");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.province</code>. 用户所在省份
     */
    public final TableField<MpUserRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR(50), this, "用户所在省份");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.country</code>. 用户所在国家
     */
    public final TableField<MpUserRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR(50), this, "用户所在国家");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.avatarUrl</code>. 用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。
     */
    public final TableField<MpUserRecord, String> AVATARURL = createField("avatarUrl", org.jooq.impl.SQLDataType.VARCHAR(191), this, "用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.unionid</code>. 只有在用户绑定到微信开放平台帐号后，才会出现该字段
     */
    public final TableField<MpUserRecord, String> UNIONID = createField("unionid", org.jooq.impl.SQLDataType.VARCHAR(191), this, "只有在用户绑定到微信开放平台帐号后，才会出现该字段");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.user_memo</code>. 备注
     */
    public final TableField<MpUserRecord, String> USER_MEMO = createField("user_memo", org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "备注");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.latitude</code>. 地理位置纬度
     */
    public final TableField<MpUserRecord, Double> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.DOUBLE.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DOUBLE)), this, "地理位置纬度");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.longitude</code>. 地理位置经度
     */
    public final TableField<MpUserRecord, Double> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.DOUBLE.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DOUBLE)), this, "地理位置经度");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.precision</code>. 地理位置精度
     */
    public final TableField<MpUserRecord, Double> PRECISION = createField("precision", org.jooq.impl.SQLDataType.DOUBLE.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DOUBLE)), this, "地理位置精度");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.last_up_loc_time</code>. 最后记录位置时间
     */
    public final TableField<MpUserRecord, Timestamp> LAST_UP_LOC_TIME = createField("last_up_loc_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最后记录位置时间");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.create_time</code>. 创建时间
     */
    public final TableField<MpUserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>mini_shop_1.b2c_mp_user.user_id</code>. 关联用户ID
     */
    public final TableField<MpUserRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "关联用户ID");

    /**
     * Create a <code>mini_shop_1.b2c_mp_user</code> table reference
     */
    public MpUser() {
        this(DSL.name("b2c_mp_user"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_mp_user</code> table reference
     */
    public MpUser(String alias) {
        this(DSL.name(alias), MP_USER);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_mp_user</code> table reference
     */
    public MpUser(Name alias) {
        this(alias, MP_USER);
    }

    private MpUser(Name alias, Table<MpUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private MpUser(Name alias, Table<MpUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MpUser(Table<O> child, ForeignKey<O, MpUserRecord> key) {
        super(child, key, MP_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MP_USER_APP_ID, Indexes.MP_USER_PRIMARY, Indexes.MP_USER_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MpUserRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_MP_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MpUserRecord> getPrimaryKey() {
        return Keys.KEY_B2C_MP_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MpUserRecord>> getKeys() {
        return Arrays.<UniqueKey<MpUserRecord>>asList(Keys.KEY_B2C_MP_USER_PRIMARY, Keys.KEY_B2C_MP_USER_APP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpUser as(String alias) {
        return new MpUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MpUser as(Name alias) {
        return new MpUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MpUser rename(String name) {
        return new MpUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MpUser rename(Name name) {
        return new MpUser(name, null);
    }
}
