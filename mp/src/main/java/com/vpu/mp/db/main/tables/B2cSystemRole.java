/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.B2cSystemRoleRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cSystemRole extends TableImpl<B2cSystemRoleRecord> {

    private static final long serialVersionUID = -1710295395;

    /**
     * The reference instance of <code>mini_main.b2c_system_role</code>
     */
    public static final B2cSystemRole B2C_SYSTEM_ROLE = new B2cSystemRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cSystemRoleRecord> getRecordType() {
        return B2cSystemRoleRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_system_role.role_id</code>.
     */
    public final TableField<B2cSystemRoleRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_system_role.system_user_id</code>. 平台账号ID
     */
    public final TableField<B2cSystemRoleRecord, Integer> SYSTEM_USER_ID = createField("system_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "平台账号ID");

    /**
     * The column <code>mini_main.b2c_system_role.role_name</code>. 角色名称
     */
    public final TableField<B2cSystemRoleRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "角色名称");

    /**
     * The column <code>mini_main.b2c_system_role.privilege_list</code>. 权限列表，json数组存储
     */
    public final TableField<B2cSystemRoleRecord, String> PRIVILEGE_LIST = createField("privilege_list", org.jooq.impl.SQLDataType.CLOB, this, "权限列表，json数组存储");

    /**
     * The column <code>mini_main.b2c_system_role.create_time</code>.
     */
    public final TableField<B2cSystemRoleRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>mini_main.b2c_system_role</code> table reference
     */
    public B2cSystemRole() {
        this(DSL.name("b2c_system_role"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_system_role</code> table reference
     */
    public B2cSystemRole(String alias) {
        this(DSL.name(alias), B2C_SYSTEM_ROLE);
    }

    /**
     * Create an aliased <code>mini_main.b2c_system_role</code> table reference
     */
    public B2cSystemRole(Name alias) {
        this(alias, B2C_SYSTEM_ROLE);
    }

    private B2cSystemRole(Name alias, Table<B2cSystemRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cSystemRole(Name alias, Table<B2cSystemRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cSystemRole(Table<O> child, ForeignKey<O, B2cSystemRoleRecord> key) {
        super(child, key, B2C_SYSTEM_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SYSTEM_ROLE_PRIMARY, Indexes.B2C_SYSTEM_ROLE_SYSTEM_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cSystemRoleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_SYSTEM_ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cSystemRoleRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SYSTEM_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cSystemRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cSystemRoleRecord>>asList(Keys.KEY_B2C_SYSTEM_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cSystemRole as(String alias) {
        return new B2cSystemRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cSystemRole as(Name alias) {
        return new B2cSystemRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cSystemRole rename(String name) {
        return new B2cSystemRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cSystemRole rename(Name name) {
        return new B2cSystemRole(name, null);
    }
}
