/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.CartRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cart extends TableImpl<CartRecord> {

    private static final long serialVersionUID = -610993575;

    /**
     * The reference instance of <code>mini_shop_1.b2c_cart</code>
     */
    public static final Cart CART = new Cart();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CartRecord> getRecordType() {
        return CartRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_cart.rec_id</code>.
     */
    public final TableField<CartRecord, ULong> REC_ID = createField("rec_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.shop_id</code>. 店铺ID
     */
    public final TableField<CartRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_shop_1.b2c_cart.store_id</code>. 门店ID
     */
    public final TableField<CartRecord, Integer> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "门店ID");

    /**
     * The column <code>mini_shop_1.b2c_cart.user_id</code>.
     */
    public final TableField<CartRecord, UInteger> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.goods_id</code>.
     */
    public final TableField<CartRecord, UInteger> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.goods_sn</code>.
     */
    public final TableField<CartRecord, String> GOODS_SN = createField("goods_sn", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.product_id</code>. 规格产品id
     */
    public final TableField<CartRecord, UInteger> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "规格产品id");

    /**
     * The column <code>mini_shop_1.b2c_cart.prd_sn</code>.
     */
    public final TableField<CartRecord, String> PRD_SN = createField("prd_sn", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.goods_name</code>.
     */
    public final TableField<CartRecord, String> GOODS_NAME = createField("goods_name", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.market_price</code>.
     */
    public final TableField<CartRecord, BigDecimal> MARKET_PRICE = createField("market_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.goods_price</code>.
     */
    public final TableField<CartRecord, BigDecimal> GOODS_PRICE = createField("goods_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.goods_number</code>.
     */
    public final TableField<CartRecord, UShort> GOODS_NUMBER = createField("goods_number", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.goods_specs</code>. 例如,颜色:黑色
     */
    public final TableField<CartRecord, String> GOODS_SPECS = createField("goods_specs", org.jooq.impl.SQLDataType.CLOB, this, "例如,颜色:黑色");

    /**
     * The column <code>mini_shop_1.b2c_cart.parent_id</code>. 该商品的父商品id，没有该值为0 ，有的话那该商品就是该id的配件
     */
    public final TableField<CartRecord, UInteger> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "该商品的父商品id，没有该值为0 ，有的话那该商品就是该id的配件");

    /**
     * The column <code>mini_shop_1.b2c_cart.rec_type</code>. 购物车商品类型，0，普通 1，团够 2，拍卖 3，夺宝奇兵
     */
    public final TableField<CartRecord, UByte> REC_TYPE = createField("rec_type", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "购物车商品类型，0，普通 1，团够 2，拍卖 3，夺宝奇兵");

    /**
     * The column <code>mini_shop_1.b2c_cart.is_gift</code>.
     */
    public final TableField<CartRecord, UShort> IS_GIFT = createField("is_gift", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.is_buynow</code>.
     */
    public final TableField<CartRecord, Byte> IS_BUYNOW = createField("is_buynow", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.create_time</code>.
     */
    public final TableField<CartRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_cart.strategy</code>. 参与的优惠活动,json格式
     */
    public final TableField<CartRecord, String> STRATEGY = createField("strategy", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "参与的优惠活动,json格式");

    /**
     * The column <code>mini_shop_1.b2c_cart.action</code>. 商品活动类型：1：加价购主商品， 2： 满折满减
     */
    public final TableField<CartRecord, Byte> ACTION = createField("action", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "商品活动类型：1：加价购主商品， 2： 满折满减");

    /**
     * The column <code>mini_shop_1.b2c_cart.identity_id</code>. 关联ID: 如：加价购ID, 满折满减ID
     */
    public final TableField<CartRecord, Integer> IDENTITY_ID = createField("identity_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "关联ID: 如：加价购ID, 满折满减ID");

    /**
     * The column <code>mini_shop_1.b2c_cart.extend_id</code>. 扩展字段: 如：换购挡位ID
     */
    public final TableField<CartRecord, Integer> EXTEND_ID = createField("extend_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "扩展字段: 如：换购挡位ID");

    /**
     * The column <code>mini_shop_1.b2c_cart.is_checked</code>. 是否选中
     */
    public final TableField<CartRecord, Byte> IS_CHECKED = createField("is_checked", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否选中");

    /**
     * The column <code>mini_shop_1.b2c_cart.platform</code>. 平台：如 crm
     */
    public final TableField<CartRecord, String> PLATFORM = createField("platform", org.jooq.impl.SQLDataType.VARCHAR(20), this, "平台：如 crm");

    /**
     * The column <code>mini_shop_1.b2c_cart.extend_info</code>. 扩展内容：如crm的promote_info
     */
    public final TableField<CartRecord, String> EXTEND_INFO = createField("extend_info", org.jooq.impl.SQLDataType.VARCHAR(200), this, "扩展内容：如crm的promote_info");

    /**
     * Create a <code>mini_shop_1.b2c_cart</code> table reference
     */
    public Cart() {
        this(DSL.name("b2c_cart"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_cart</code> table reference
     */
    public Cart(String alias) {
        this(DSL.name(alias), CART);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_cart</code> table reference
     */
    public Cart(Name alias) {
        this(alias, CART);
    }

    private Cart(Name alias, Table<CartRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cart(Name alias, Table<CartRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Cart(Table<O> child, ForeignKey<O, CartRecord> key) {
        super(child, key, CART);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CART_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CartRecord, ULong> getIdentity() {
        return Keys.IDENTITY_CART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CartRecord> getPrimaryKey() {
        return Keys.KEY_B2C_CART_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CartRecord>> getKeys() {
        return Arrays.<UniqueKey<CartRecord>>asList(Keys.KEY_B2C_CART_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cart as(String alias) {
        return new Cart(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cart as(Name alias) {
        return new Cart(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cart rename(String name) {
        return new Cart(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Cart rename(Name name) {
        return new Cart(name, null);
    }
}
