/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cSpecRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cSpec extends TableImpl<B2cSpecRecord> {

    private static final long serialVersionUID = -298996606;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_spec</code>
     */
    public static final B2cSpec B2C_SPEC = new B2cSpec();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cSpecRecord> getRecordType() {
        return B2cSpecRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_spec.spec_id</code>.
     */
    public final TableField<B2cSpecRecord, UInteger> SPEC_ID = createField("spec_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_spec.spec_name</code>.
     */
    public final TableField<B2cSpecRecord, String> SPEC_NAME = createField("spec_name", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_spec.del_flag</code>.
     */
    public final TableField<B2cSpecRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_spec.shop_id</code>. 店铺ID
     */
    public final TableField<B2cSpecRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * Create a <code>mini_shop_471752.b2c_spec</code> table reference
     */
    public B2cSpec() {
        this(DSL.name("b2c_spec"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_spec</code> table reference
     */
    public B2cSpec(String alias) {
        this(DSL.name(alias), B2C_SPEC);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_spec</code> table reference
     */
    public B2cSpec(Name alias) {
        this(alias, B2C_SPEC);
    }

    private B2cSpec(Name alias, Table<B2cSpecRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cSpec(Name alias, Table<B2cSpecRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cSpec(Table<O> child, ForeignKey<O, B2cSpecRecord> key) {
        super(child, key, B2C_SPEC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SPEC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cSpecRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_SPEC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cSpecRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SPEC_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cSpecRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cSpecRecord>>asList(Keys.KEY_B2C_SPEC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cSpec as(String alias) {
        return new B2cSpec(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cSpec as(Name alias) {
        return new B2cSpec(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cSpec rename(String name) {
        return new B2cSpec(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cSpec rename(Name name) {
        return new B2cSpec(name, null);
    }
}
