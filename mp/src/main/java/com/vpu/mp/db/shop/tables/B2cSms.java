/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cSmsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cSms extends TableImpl<B2cSmsRecord> {

    private static final long serialVersionUID = 1412994318;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_sms</code>
     */
    public static final B2cSms B2C_SMS = new B2cSms();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cSmsRecord> getRecordType() {
        return B2cSmsRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_sms.id</code>.
     */
    public final TableField<B2cSmsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms.mobile</code>.
     */
    public final TableField<B2cSmsRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms.sms_code</code>.
     */
    public final TableField<B2cSmsRecord, String> SMS_CODE = createField("sms_code", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms.add_time</code>.
     */
    public final TableField<B2cSmsRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms.ip</code>.
     */
    public final TableField<B2cSmsRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms.status</code>. 0:发送失败 1：发送成功
     */
    public final TableField<B2cSmsRecord, UByte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "0:发送失败 1：发送成功");

    /**
     * The column <code>mini_shop_471752.b2c_sms.type</code>.
     */
    public final TableField<B2cSmsRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_sms.content</code>. 发送短信内容
     */
    public final TableField<B2cSmsRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "发送短信内容");

    /**
     * Create a <code>mini_shop_471752.b2c_sms</code> table reference
     */
    public B2cSms() {
        this(DSL.name("b2c_sms"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_sms</code> table reference
     */
    public B2cSms(String alias) {
        this(DSL.name(alias), B2C_SMS);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_sms</code> table reference
     */
    public B2cSms(Name alias) {
        this(alias, B2C_SMS);
    }

    private B2cSms(Name alias, Table<B2cSmsRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cSms(Name alias, Table<B2cSmsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cSms(Table<O> child, ForeignKey<O, B2cSmsRecord> key) {
        super(child, key, B2C_SMS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SMS_MOBILE, Indexes.B2C_SMS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cSmsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_SMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cSmsRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SMS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cSmsRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cSmsRecord>>asList(Keys.KEY_B2C_SMS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cSms as(String alias) {
        return new B2cSms(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cSms as(Name alias) {
        return new B2cSms(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cSms rename(String name) {
        return new B2cSms(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cSms rename(Name name) {
        return new B2cSms(name, null);
    }
}
