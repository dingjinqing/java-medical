/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cInvoiceRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cInvoice extends TableImpl<B2cInvoiceRecord> {

    private static final long serialVersionUID = -130391238;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_invoice</code>
     */
    public static final B2cInvoice B2C_INVOICE = new B2cInvoice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cInvoiceRecord> getRecordType() {
        return B2cInvoiceRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_invoice.id</code>.
     */
    public final TableField<B2cInvoiceRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_invoice.user_id</code>. 用户id
     */
    public final TableField<B2cInvoiceRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户id");

    /**
     * The column <code>mini_shop_471752.b2c_invoice.type</code>. 发票类型
     */
    public final TableField<B2cInvoiceRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "发票类型");

    /**
     * The column <code>mini_shop_471752.b2c_invoice.title</code>. 公司名称
     */
    public final TableField<B2cInvoiceRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false), this, "公司名称");

    /**
     * The column <code>mini_shop_471752.b2c_invoice.telephone</code>. 公司电话
     */
    public final TableField<B2cInvoiceRecord, String> TELEPHONE = createField("telephone", org.jooq.impl.SQLDataType.VARCHAR(191), this, "公司电话");

    /**
     * The column <code>mini_shop_471752.b2c_invoice.taxNumber</code>. 税号
     */
    public final TableField<B2cInvoiceRecord, String> TAXNUMBER = createField("taxNumber", org.jooq.impl.SQLDataType.VARCHAR(191), this, "税号");

    /**
     * The column <code>mini_shop_471752.b2c_invoice.companyAddress</code>. 公司地址
     */
    public final TableField<B2cInvoiceRecord, String> COMPANYADDRESS = createField("companyAddress", org.jooq.impl.SQLDataType.VARCHAR(191), this, "公司地址");

    /**
     * The column <code>mini_shop_471752.b2c_invoice.bankName</code>. 银行名称
     */
    public final TableField<B2cInvoiceRecord, String> BANKNAME = createField("bankName", org.jooq.impl.SQLDataType.VARCHAR(191), this, "银行名称");

    /**
     * The column <code>mini_shop_471752.b2c_invoice.bankAccount</code>. 银行账号
     */
    public final TableField<B2cInvoiceRecord, String> BANKACCOUNT = createField("bankAccount", org.jooq.impl.SQLDataType.VARCHAR(191), this, "银行账号");

    /**
     * The column <code>mini_shop_471752.b2c_invoice.add_time</code>.
     */
    public final TableField<B2cInvoiceRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>mini_shop_471752.b2c_invoice</code> table reference
     */
    public B2cInvoice() {
        this(DSL.name("b2c_invoice"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_invoice</code> table reference
     */
    public B2cInvoice(String alias) {
        this(DSL.name(alias), B2C_INVOICE);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_invoice</code> table reference
     */
    public B2cInvoice(Name alias) {
        this(alias, B2C_INVOICE);
    }

    private B2cInvoice(Name alias, Table<B2cInvoiceRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cInvoice(Name alias, Table<B2cInvoiceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cInvoice(Table<O> child, ForeignKey<O, B2cInvoiceRecord> key) {
        super(child, key, B2C_INVOICE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_INVOICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cInvoiceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_INVOICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cInvoiceRecord> getPrimaryKey() {
        return Keys.KEY_B2C_INVOICE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cInvoiceRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cInvoiceRecord>>asList(Keys.KEY_B2C_INVOICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cInvoice as(String alias) {
        return new B2cInvoice(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cInvoice as(Name alias) {
        return new B2cInvoice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cInvoice rename(String name) {
        return new B2cInvoice(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cInvoice rename(Name name) {
        return new B2cInvoice(name, null);
    }
}
