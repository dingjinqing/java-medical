/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.B2cDbOptionRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cDbOptionRecord extends TableImpl<B2cDbOptionRecordRecord> {

    private static final long serialVersionUID = -532356554;

    /**
     * The reference instance of <code>mini_main.b2c_db_option_record</code>
     */
    public static final B2cDbOptionRecord B2C_DB_OPTION_RECORD = new B2cDbOptionRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cDbOptionRecordRecord> getRecordType() {
        return B2cDbOptionRecordRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_db_option_record.record_id</code>.
     */
    public final TableField<B2cDbOptionRecordRecord, UInteger> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_db_option_record.version</code>. 版本号
     */
    public final TableField<B2cDbOptionRecordRecord, String> VERSION = createField("version", org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "版本号");

    /**
     * The column <code>mini_main.b2c_db_option_record.option_rst</code>. 执行结果
     */
    public final TableField<B2cDbOptionRecordRecord, String> OPTION_RST = createField("option_rst", org.jooq.impl.SQLDataType.CLOB, this, "执行结果");

    /**
     * The column <code>mini_main.b2c_db_option_record.db_type</code>. 更新类型：mian主库，shop从库
     */
    public final TableField<B2cDbOptionRecordRecord, String> DB_TYPE = createField("db_type", org.jooq.impl.SQLDataType.VARCHAR(32).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "更新类型：mian主库，shop从库");

    /**
     * The column <code>mini_main.b2c_db_option_record.shop_id</code>. 店铺ID，单个店铺更新时使用
     */
    public final TableField<B2cDbOptionRecordRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID，单个店铺更新时使用");

    /**
     * The column <code>mini_main.b2c_db_option_record.in_time</code>. 添加时间
     */
    public final TableField<B2cDbOptionRecordRecord, Timestamp> IN_TIME = createField("in_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "添加时间");

    /**
     * The column <code>mini_main.b2c_db_option_record.up_time</code>. 更新时间
     */
    public final TableField<B2cDbOptionRecordRecord, Timestamp> UP_TIME = createField("up_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>mini_main.b2c_db_option_record.option_type</code>. 操作类型：command命令行操作，SQL语句操作
     */
    public final TableField<B2cDbOptionRecordRecord, String> OPTION_TYPE = createField("option_type", org.jooq.impl.SQLDataType.VARCHAR(32).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "操作类型：command命令行操作，SQL语句操作");

    /**
     * The column <code>mini_main.b2c_db_option_record.total_num</code>. 总更新条数
     */
    public final TableField<B2cDbOptionRecordRecord, Integer> TOTAL_NUM = createField("total_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "总更新条数");

    /**
     * The column <code>mini_main.b2c_db_option_record.success_num</code>. 成功条数
     */
    public final TableField<B2cDbOptionRecordRecord, Integer> SUCCESS_NUM = createField("success_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "成功条数");

    /**
     * Create a <code>mini_main.b2c_db_option_record</code> table reference
     */
    public B2cDbOptionRecord() {
        this(DSL.name("b2c_db_option_record"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_db_option_record</code> table reference
     */
    public B2cDbOptionRecord(String alias) {
        this(DSL.name(alias), B2C_DB_OPTION_RECORD);
    }

    /**
     * Create an aliased <code>mini_main.b2c_db_option_record</code> table reference
     */
    public B2cDbOptionRecord(Name alias) {
        this(alias, B2C_DB_OPTION_RECORD);
    }

    private B2cDbOptionRecord(Name alias, Table<B2cDbOptionRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cDbOptionRecord(Name alias, Table<B2cDbOptionRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cDbOptionRecord(Table<O> child, ForeignKey<O, B2cDbOptionRecordRecord> key) {
        super(child, key, B2C_DB_OPTION_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_DB_OPTION_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cDbOptionRecordRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_DB_OPTION_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cDbOptionRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_DB_OPTION_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cDbOptionRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cDbOptionRecordRecord>>asList(Keys.KEY_B2C_DB_OPTION_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cDbOptionRecord as(String alias) {
        return new B2cDbOptionRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cDbOptionRecord as(Name alias) {
        return new B2cDbOptionRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cDbOptionRecord rename(String name) {
        return new B2cDbOptionRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cDbOptionRecord rename(Name name) {
        return new B2cDbOptionRecord(name, null);
    }
}
