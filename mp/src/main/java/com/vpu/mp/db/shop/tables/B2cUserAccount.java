/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cUserAccountRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cUserAccount extends TableImpl<B2cUserAccountRecord> {

    private static final long serialVersionUID = -1225668505;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_user_account</code>
     */
    public static final B2cUserAccount B2C_USER_ACCOUNT = new B2cUserAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cUserAccountRecord> getRecordType() {
        return B2cUserAccountRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_user_account.id</code>.
     */
    public final TableField<B2cUserAccountRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_account.user_id</code>.
     */
    public final TableField<B2cUserAccountRecord, UInteger> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_account.admin_user</code>. 操作员
     */
    public final TableField<B2cUserAccountRecord, String> ADMIN_USER = createField("admin_user", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "操作员");

    /**
     * The column <code>mini_shop_471752.b2c_user_account.order_sn</code>. 分销订单结算产生返利
     */
    public final TableField<B2cUserAccountRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "分销订单结算产生返利");

    /**
     * The column <code>mini_shop_471752.b2c_user_account.amount</code>. 金额
     */
    public final TableField<B2cUserAccountRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "金额");

    /**
     * The column <code>mini_shop_471752.b2c_user_account.add_time</code>. 创建时间
     */
    public final TableField<B2cUserAccountRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>mini_shop_471752.b2c_user_account.admin_note</code>. 操作员备注
     */
    public final TableField<B2cUserAccountRecord, String> ADMIN_NOTE = createField("admin_note", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false), this, "操作员备注");

    /**
     * The column <code>mini_shop_471752.b2c_user_account.payment</code>. 支付方式
     */
    public final TableField<B2cUserAccountRecord, String> PAYMENT = createField("payment", org.jooq.impl.SQLDataType.VARCHAR(90).nullable(false), this, "支付方式");

    /**
     * The column <code>mini_shop_471752.b2c_user_account.is_paid</code>. 支付类型，0：充值，1：消费
     */
    public final TableField<B2cUserAccountRecord, Byte> IS_PAID = createField("is_paid", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "支付类型，0：充值，1：消费");

    /**
     * The column <code>mini_shop_471752.b2c_user_account.remark</code>. 备注
     */
    public final TableField<B2cUserAccountRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "备注");

    /**
     * The column <code>mini_shop_471752.b2c_user_account.source</code>. 1:分销来源，0:充值
     */
    public final TableField<B2cUserAccountRecord, Byte> SOURCE = createField("source", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1:分销来源，0:充值");

    /**
     * Create a <code>mini_shop_471752.b2c_user_account</code> table reference
     */
    public B2cUserAccount() {
        this(DSL.name("b2c_user_account"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_account</code> table reference
     */
    public B2cUserAccount(String alias) {
        this(DSL.name(alias), B2C_USER_ACCOUNT);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_account</code> table reference
     */
    public B2cUserAccount(Name alias) {
        this(alias, B2C_USER_ACCOUNT);
    }

    private B2cUserAccount(Name alias, Table<B2cUserAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cUserAccount(Name alias, Table<B2cUserAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cUserAccount(Table<O> child, ForeignKey<O, B2cUserAccountRecord> key) {
        super(child, key, B2C_USER_ACCOUNT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_USER_ACCOUNT_PRIMARY, Indexes.B2C_USER_ACCOUNT_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cUserAccountRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B2C_USER_ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cUserAccountRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_ACCOUNT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cUserAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cUserAccountRecord>>asList(Keys.KEY_B2C_USER_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUserAccount as(String alias) {
        return new B2cUserAccount(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUserAccount as(Name alias) {
        return new B2cUserAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUserAccount rename(String name) {
        return new B2cUserAccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUserAccount rename(Name name) {
        return new B2cUserAccount(name, null);
    }
}
