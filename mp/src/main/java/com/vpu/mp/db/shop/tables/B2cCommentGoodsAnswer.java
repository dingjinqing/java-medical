/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cCommentGoodsAnswerRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cCommentGoodsAnswer extends TableImpl<B2cCommentGoodsAnswerRecord> {

    private static final long serialVersionUID = 2067675928;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_comment_goods_answer</code>
     */
    public static final B2cCommentGoodsAnswer B2C_COMMENT_GOODS_ANSWER = new B2cCommentGoodsAnswer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cCommentGoodsAnswerRecord> getRecordType() {
        return B2cCommentGoodsAnswerRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_comment_goods_answer.answer_id</code>.
     */
    public final TableField<B2cCommentGoodsAnswerRecord, Integer> ANSWER_ID = createField("answer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_comment_goods_answer.comment_id</code>. 回复的商品评论ID
     */
    public final TableField<B2cCommentGoodsAnswerRecord, Integer> COMMENT_ID = createField("comment_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "回复的商品评论ID");

    /**
     * The column <code>mini_shop_471752.b2c_comment_goods_answer.content</code>. 回复内容
     */
    public final TableField<B2cCommentGoodsAnswerRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "回复内容");

    /**
     * The column <code>mini_shop_471752.b2c_comment_goods_answer.answer_time</code>. 回复时间
     */
    public final TableField<B2cCommentGoodsAnswerRecord, Timestamp> ANSWER_TIME = createField("answer_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "回复时间");

    /**
     * The column <code>mini_shop_471752.b2c_comment_goods_answer.del_flag</code>. 1:删除
     */
    public final TableField<B2cCommentGoodsAnswerRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1:删除");

    /**
     * Create a <code>mini_shop_471752.b2c_comment_goods_answer</code> table reference
     */
    public B2cCommentGoodsAnswer() {
        this(DSL.name("b2c_comment_goods_answer"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_comment_goods_answer</code> table reference
     */
    public B2cCommentGoodsAnswer(String alias) {
        this(DSL.name(alias), B2C_COMMENT_GOODS_ANSWER);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_comment_goods_answer</code> table reference
     */
    public B2cCommentGoodsAnswer(Name alias) {
        this(alias, B2C_COMMENT_GOODS_ANSWER);
    }

    private B2cCommentGoodsAnswer(Name alias, Table<B2cCommentGoodsAnswerRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cCommentGoodsAnswer(Name alias, Table<B2cCommentGoodsAnswerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cCommentGoodsAnswer(Table<O> child, ForeignKey<O, B2cCommentGoodsAnswerRecord> key) {
        super(child, key, B2C_COMMENT_GOODS_ANSWER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_COMMENT_GOODS_ANSWER_COMMENT_ID, Indexes.B2C_COMMENT_GOODS_ANSWER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cCommentGoodsAnswerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_COMMENT_GOODS_ANSWER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cCommentGoodsAnswerRecord> getPrimaryKey() {
        return Keys.KEY_B2C_COMMENT_GOODS_ANSWER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cCommentGoodsAnswerRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cCommentGoodsAnswerRecord>>asList(Keys.KEY_B2C_COMMENT_GOODS_ANSWER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cCommentGoodsAnswer as(String alias) {
        return new B2cCommentGoodsAnswer(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cCommentGoodsAnswer as(Name alias) {
        return new B2cCommentGoodsAnswer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cCommentGoodsAnswer rename(String name) {
        return new B2cCommentGoodsAnswer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cCommentGoodsAnswer rename(Name name) {
        return new B2cCommentGoodsAnswer(name, null);
    }
}
