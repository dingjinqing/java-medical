/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cUserExplainRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cUserExplain extends TableImpl<B2cUserExplainRecord> {

    private static final long serialVersionUID = -1254466866;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_user_explain</code>
     */
    public static final B2cUserExplain B2C_USER_EXPLAIN = new B2cUserExplain();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cUserExplainRecord> getRecordType() {
        return B2cUserExplainRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_user_explain.id</code>.
     */
    public final TableField<B2cUserExplainRecord, UShort> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_explain.shop_id</code>. 店铺ID
     */
    public final TableField<B2cUserExplainRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_shop_471752.b2c_user_explain.text</code>.
     */
    public final TableField<B2cUserExplainRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_explain.type</code>. 1-余额，2-级别，3-成长值，4-积分
     */
    public final TableField<B2cUserExplainRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1-余额，2-级别，3-成长值，4-积分");

    /**
     * The column <code>mini_shop_471752.b2c_user_explain.create_time</code>.
     */
    public final TableField<B2cUserExplainRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_user_explain.up_time</code>.
     */
    public final TableField<B2cUserExplainRecord, Timestamp> UP_TIME = createField("up_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>mini_shop_471752.b2c_user_explain</code> table reference
     */
    public B2cUserExplain() {
        this(DSL.name("b2c_user_explain"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_explain</code> table reference
     */
    public B2cUserExplain(String alias) {
        this(DSL.name(alias), B2C_USER_EXPLAIN);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_user_explain</code> table reference
     */
    public B2cUserExplain(Name alias) {
        this(alias, B2C_USER_EXPLAIN);
    }

    private B2cUserExplain(Name alias, Table<B2cUserExplainRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cUserExplain(Name alias, Table<B2cUserExplainRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cUserExplain(Table<O> child, ForeignKey<O, B2cUserExplainRecord> key) {
        super(child, key, B2C_USER_EXPLAIN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_USER_EXPLAIN_PRIMARY, Indexes.B2C_USER_EXPLAIN_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cUserExplainRecord, UShort> getIdentity() {
        return Keys.IDENTITY_B2C_USER_EXPLAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cUserExplainRecord> getPrimaryKey() {
        return Keys.KEY_B2C_USER_EXPLAIN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cUserExplainRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cUserExplainRecord>>asList(Keys.KEY_B2C_USER_EXPLAIN_PRIMARY, Keys.KEY_B2C_USER_EXPLAIN_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUserExplain as(String alias) {
        return new B2cUserExplain(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cUserExplain as(Name alias) {
        return new B2cUserExplain(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUserExplain rename(String name) {
        return new B2cUserExplain(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cUserExplain rename(Name name) {
        return new B2cUserExplain(name, null);
    }
}
