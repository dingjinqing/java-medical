/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cCommentServiceRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cCommentService extends TableImpl<B2cCommentServiceRecord> {

    private static final long serialVersionUID = 966273753;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_comment_service</code>
     */
    public static final B2cCommentService B2C_COMMENT_SERVICE = new B2cCommentService();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cCommentServiceRecord> getRecordType() {
        return B2cCommentServiceRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.id</code>.
     */
    public final TableField<B2cCommentServiceRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.shop_id</code>. 店铺ID
     */
    public final TableField<B2cCommentServiceRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "店铺ID");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.store_id</code>. 门店ID
     */
    public final TableField<B2cCommentServiceRecord, Integer> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "门店ID");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.technician_id</code>. 技师id
     */
    public final TableField<B2cCommentServiceRecord, UInteger> TECHNICIAN_ID = createField("technician_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "技师id");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.user_id</code>. 用户ID
     */
    public final TableField<B2cCommentServiceRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户ID");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.commstar</code>. 评价星级
     */
    public final TableField<B2cCommentServiceRecord, Byte> COMMSTAR = createField("commstar", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "评价星级");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.user_score</code>. 评价可得积分
     */
    public final TableField<B2cCommentServiceRecord, Integer> USER_SCORE = createField("user_score", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "评价可得积分");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.anonymousflag</code>. 匿名状态 0.未匿名；1.匿名
     */
    public final TableField<B2cCommentServiceRecord, Byte> ANONYMOUSFLAG = createField("anonymousflag", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "匿名状态 0.未匿名；1.匿名");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.commtag</code>. 评价标签
     */
    public final TableField<B2cCommentServiceRecord, String> COMMTAG = createField("commtag", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "评价标签");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.service_id</code>. 服务id
     */
    public final TableField<B2cCommentServiceRecord, Integer> SERVICE_ID = createField("service_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "服务id");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.order_sn</code>. 订单编号
     */
    public final TableField<B2cCommentServiceRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "订单编号");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.comm_note</code>. 评论内容
     */
    public final TableField<B2cCommentServiceRecord, String> COMM_NOTE = createField("comm_note", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "评论内容");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.comm_img</code>. 评论图片
     */
    public final TableField<B2cCommentServiceRecord, String> COMM_IMG = createField("comm_img", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "评论图片");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.in_time</code>. 创建时间
     */
    public final TableField<B2cCommentServiceRecord, Timestamp> IN_TIME = createField("in_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.up_time</code>. 更新时间
     */
    public final TableField<B2cCommentServiceRecord, Timestamp> UP_TIME = createField("up_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.flag</code>. 0:未审批,1:审批通过,2:审批未通过
     */
    public final TableField<B2cCommentServiceRecord, Byte> FLAG = createField("flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:未审批,1:审批通过,2:审批未通过");

    /**
     * The column <code>mini_shop_471752.b2c_comment_service.del_flag</code>. 1:删除
     */
    public final TableField<B2cCommentServiceRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1:删除");

    /**
     * Create a <code>mini_shop_471752.b2c_comment_service</code> table reference
     */
    public B2cCommentService() {
        this(DSL.name("b2c_comment_service"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_comment_service</code> table reference
     */
    public B2cCommentService(String alias) {
        this(DSL.name(alias), B2C_COMMENT_SERVICE);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_comment_service</code> table reference
     */
    public B2cCommentService(Name alias) {
        this(alias, B2C_COMMENT_SERVICE);
    }

    private B2cCommentService(Name alias, Table<B2cCommentServiceRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cCommentService(Name alias, Table<B2cCommentServiceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cCommentService(Table<O> child, ForeignKey<O, B2cCommentServiceRecord> key) {
        super(child, key, B2C_COMMENT_SERVICE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_COMMENT_SERVICE_PRIMARY, Indexes.B2C_COMMENT_SERVICE_SHOP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cCommentServiceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_COMMENT_SERVICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cCommentServiceRecord> getPrimaryKey() {
        return Keys.KEY_B2C_COMMENT_SERVICE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cCommentServiceRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cCommentServiceRecord>>asList(Keys.KEY_B2C_COMMENT_SERVICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cCommentService as(String alias) {
        return new B2cCommentService(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cCommentService as(Name alias) {
        return new B2cCommentService(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cCommentService rename(String name) {
        return new B2cCommentService(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cCommentService rename(Name name) {
        return new B2cCommentService(name, null);
    }
}
