/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.B2cSystemCfgRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cSystemCfg extends TableImpl<B2cSystemCfgRecord> {

    private static final long serialVersionUID = -1267394811;

    /**
     * The reference instance of <code>mini_main.b2c_system_cfg</code>
     */
    public static final B2cSystemCfg B2C_SYSTEM_CFG = new B2cSystemCfg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cSystemCfgRecord> getRecordType() {
        return B2cSystemCfgRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_system_cfg.rec_id</code>.
     */
    public final TableField<B2cSystemCfgRecord, UShort> REC_ID = createField("rec_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_main.b2c_system_cfg.sys_id</code>.
     */
    public final TableField<B2cSystemCfgRecord, UInteger> SYS_ID = createField("sys_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>mini_main.b2c_system_cfg.k</code>.
     */
    public final TableField<B2cSystemCfgRecord, String> K = createField("k", org.jooq.impl.SQLDataType.VARCHAR(191).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_main.b2c_system_cfg.v</code>.
     */
    public final TableField<B2cSystemCfgRecord, String> V = createField("v", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>mini_main.b2c_system_cfg</code> table reference
     */
    public B2cSystemCfg() {
        this(DSL.name("b2c_system_cfg"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_system_cfg</code> table reference
     */
    public B2cSystemCfg(String alias) {
        this(DSL.name(alias), B2C_SYSTEM_CFG);
    }

    /**
     * Create an aliased <code>mini_main.b2c_system_cfg</code> table reference
     */
    public B2cSystemCfg(Name alias) {
        this(alias, B2C_SYSTEM_CFG);
    }

    private B2cSystemCfg(Name alias, Table<B2cSystemCfgRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cSystemCfg(Name alias, Table<B2cSystemCfgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cSystemCfg(Table<O> child, ForeignKey<O, B2cSystemCfgRecord> key) {
        super(child, key, B2C_SYSTEM_CFG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SYSTEM_CFG_PRIMARY, Indexes.B2C_SYSTEM_CFG_SYS_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cSystemCfgRecord, UShort> getIdentity() {
        return Keys.IDENTITY_B2C_SYSTEM_CFG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cSystemCfgRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SYSTEM_CFG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cSystemCfgRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cSystemCfgRecord>>asList(Keys.KEY_B2C_SYSTEM_CFG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cSystemCfg as(String alias) {
        return new B2cSystemCfg(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cSystemCfg as(Name alias) {
        return new B2cSystemCfg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cSystemCfg rename(String name) {
        return new B2cSystemCfg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cSystemCfg rename(Name name) {
        return new B2cSystemCfg(name, null);
    }
}
