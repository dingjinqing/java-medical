/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_1;
import com.vpu.mp.db.shop.tables.records.AttributeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Attribute extends TableImpl<AttributeRecord> {

    private static final long serialVersionUID = -159706038;

    /**
     * The reference instance of <code>mini_shop_1.b2c_attribute</code>
     */
    public static final Attribute ATTRIBUTE = new Attribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttributeRecord> getRecordType() {
        return AttributeRecord.class;
    }

    /**
     * The column <code>mini_shop_1.b2c_attribute.attr_id</code>.
     */
    public final TableField<AttributeRecord, Integer> ATTR_ID = createField("attr_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_1.b2c_attribute.name</code>.
     */
    public final TableField<AttributeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>mini_shop_1.b2c_attribute.attribute_info</code>. json存储
     */
    public final TableField<AttributeRecord, String> ATTRIBUTE_INFO = createField("attribute_info", org.jooq.impl.SQLDataType.CLOB, this, "json存储");

    /**
     * The column <code>mini_shop_1.b2c_attribute.create_time</code>.
     */
    public final TableField<AttributeRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_1.b2c_attribute.is_del</code>.
     */
    public final TableField<AttributeRecord, Byte> IS_DEL = createField("is_del", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>mini_shop_1.b2c_attribute</code> table reference
     */
    public Attribute() {
        this(DSL.name("b2c_attribute"), null);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_attribute</code> table reference
     */
    public Attribute(String alias) {
        this(DSL.name(alias), ATTRIBUTE);
    }

    /**
     * Create an aliased <code>mini_shop_1.b2c_attribute</code> table reference
     */
    public Attribute(Name alias) {
        this(alias, ATTRIBUTE);
    }

    private Attribute(Name alias, Table<AttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Attribute(Name alias, Table<AttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Attribute(Table<O> child, ForeignKey<O, AttributeRecord> key) {
        super(child, key, ATTRIBUTE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_1.MINI_SHOP_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ATTRIBUTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AttributeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ATTRIBUTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AttributeRecord> getPrimaryKey() {
        return Keys.KEY_B2C_ATTRIBUTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<AttributeRecord>>asList(Keys.KEY_B2C_ATTRIBUTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Attribute as(String alias) {
        return new Attribute(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Attribute as(Name alias) {
        return new Attribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Attribute rename(String name) {
        return new Attribute(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Attribute rename(Name name) {
        return new Attribute(name, null);
    }
}
