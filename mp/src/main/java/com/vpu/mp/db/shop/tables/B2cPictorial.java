/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cPictorialRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cPictorial extends TableImpl<B2cPictorialRecord> {

    private static final long serialVersionUID = -2119899589;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_pictorial</code>
     */
    public static final B2cPictorial B2C_PICTORIAL = new B2cPictorial();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cPictorialRecord> getRecordType() {
        return B2cPictorialRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_pictorial.id</code>.
     */
    public final TableField<B2cPictorialRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_pictorial.action</code>. 海报类型： 1：普通 2 ：拼团 3：砍价 4：表单 5:拼团分享
     */
    public final TableField<B2cPictorialRecord, Byte> ACTION = createField("action", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "海报类型： 1：普通 2 ：拼团 3：砍价 4：表单 5:拼团分享");

    /**
     * The column <code>mini_shop_471752.b2c_pictorial.path</code>. 海报路径
     */
    public final TableField<B2cPictorialRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "海报路径");

    /**
     * The column <code>mini_shop_471752.b2c_pictorial.rule</code>. 生成触发规则
     */
    public final TableField<B2cPictorialRecord, String> RULE = createField("rule", org.jooq.impl.SQLDataType.CLOB, this, "生成触发规则");

    /**
     * The column <code>mini_shop_471752.b2c_pictorial.user_id</code>.
     */
    public final TableField<B2cPictorialRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_pictorial.identity_id</code>. 关联ID： 例如：goods_id, page_id
     */
    public final TableField<B2cPictorialRecord, Integer> IDENTITY_ID = createField("identity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "关联ID： 例如：goods_id, page_id");

    /**
     * The column <code>mini_shop_471752.b2c_pictorial.add_time</code>. 生成时间
     */
    public final TableField<B2cPictorialRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "生成时间");

    /**
     * The column <code>mini_shop_471752.b2c_pictorial.update_time</code>. 更新时间
     */
    public final TableField<B2cPictorialRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>mini_shop_471752.b2c_pictorial.del_flag</code>. 删除标记： 1：删除
     */
    public final TableField<B2cPictorialRecord, Byte> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "删除标记： 1：删除");

    /**
     * The column <code>mini_shop_471752.b2c_pictorial.del_time</code>.
     */
    public final TableField<B2cPictorialRecord, Integer> DEL_TIME = createField("del_time", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>mini_shop_471752.b2c_pictorial</code> table reference
     */
    public B2cPictorial() {
        this(DSL.name("b2c_pictorial"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_pictorial</code> table reference
     */
    public B2cPictorial(String alias) {
        this(DSL.name(alias), B2C_PICTORIAL);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_pictorial</code> table reference
     */
    public B2cPictorial(Name alias) {
        this(alias, B2C_PICTORIAL);
    }

    private B2cPictorial(Name alias, Table<B2cPictorialRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cPictorial(Name alias, Table<B2cPictorialRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cPictorial(Table<O> child, ForeignKey<O, B2cPictorialRecord> key) {
        super(child, key, B2C_PICTORIAL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_PICTORIAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cPictorialRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_PICTORIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cPictorialRecord> getPrimaryKey() {
        return Keys.KEY_B2C_PICTORIAL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cPictorialRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cPictorialRecord>>asList(Keys.KEY_B2C_PICTORIAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cPictorial as(String alias) {
        return new B2cPictorial(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cPictorial as(Name alias) {
        return new B2cPictorial(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cPictorial rename(String name) {
        return new B2cPictorial(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cPictorial rename(Name name) {
        return new B2cPictorial(name, null);
    }
}
