/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cOrderMustRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cOrderMust extends TableImpl<B2cOrderMustRecord> {

    private static final long serialVersionUID = -537318545;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_order_must</code>
     */
    public static final B2cOrderMust B2C_ORDER_MUST = new B2cOrderMust();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cOrderMustRecord> getRecordType() {
        return B2cOrderMustRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_order_must.id</code>.
     */
    public final TableField<B2cOrderMustRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_order_must.order_sn</code>. 订单号
     */
    public final TableField<B2cOrderMustRecord, String> ORDER_SN = createField("order_sn", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "订单号");

    /**
     * The column <code>mini_shop_471752.b2c_order_must.must_content</code>. 必填信息
     */
    public final TableField<B2cOrderMustRecord, String> MUST_CONTENT = createField("must_content", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "必填信息");

    /**
     * The column <code>mini_shop_471752.b2c_order_must.order_real_name</code>. 下单人真实姓名
     */
    public final TableField<B2cOrderMustRecord, String> ORDER_REAL_NAME = createField("order_real_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "下单人真实姓名");

    /**
     * The column <code>mini_shop_471752.b2c_order_must.order_cid</code>. 下单人身份证号码
     */
    public final TableField<B2cOrderMustRecord, String> ORDER_CID = createField("order_cid", org.jooq.impl.SQLDataType.VARCHAR(50), this, "下单人身份证号码");

    /**
     * The column <code>mini_shop_471752.b2c_order_must.consignee_real_name</code>. 收货人真实姓名
     */
    public final TableField<B2cOrderMustRecord, String> CONSIGNEE_REAL_NAME = createField("consignee_real_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "收货人真实姓名");

    /**
     * The column <code>mini_shop_471752.b2c_order_must.consignee_cid</code>. 收货人身份证号码
     */
    public final TableField<B2cOrderMustRecord, String> CONSIGNEE_CID = createField("consignee_cid", org.jooq.impl.SQLDataType.VARCHAR(50), this, "收货人身份证号码");

    /**
     * The column <code>mini_shop_471752.b2c_order_must.custom_title</code>. 自定义信息标题
     */
    public final TableField<B2cOrderMustRecord, String> CUSTOM_TITLE = createField("custom_title", org.jooq.impl.SQLDataType.VARCHAR(50), this, "自定义信息标题");

    /**
     * The column <code>mini_shop_471752.b2c_order_must.custom</code>. 自定义信息内容
     */
    public final TableField<B2cOrderMustRecord, String> CUSTOM = createField("custom", org.jooq.impl.SQLDataType.VARCHAR(50), this, "自定义信息内容");

    /**
     * Create a <code>mini_shop_471752.b2c_order_must</code> table reference
     */
    public B2cOrderMust() {
        this(DSL.name("b2c_order_must"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_order_must</code> table reference
     */
    public B2cOrderMust(String alias) {
        this(DSL.name(alias), B2C_ORDER_MUST);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_order_must</code> table reference
     */
    public B2cOrderMust(Name alias) {
        this(alias, B2C_ORDER_MUST);
    }

    private B2cOrderMust(Name alias, Table<B2cOrderMustRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cOrderMust(Name alias, Table<B2cOrderMustRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cOrderMust(Table<O> child, ForeignKey<O, B2cOrderMustRecord> key) {
        super(child, key, B2C_ORDER_MUST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_ORDER_MUST_ORDER_SN, Indexes.B2C_ORDER_MUST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cOrderMustRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_ORDER_MUST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cOrderMustRecord> getPrimaryKey() {
        return Keys.KEY_B2C_ORDER_MUST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cOrderMustRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cOrderMustRecord>>asList(Keys.KEY_B2C_ORDER_MUST_PRIMARY, Keys.KEY_B2C_ORDER_MUST_ORDER_SN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cOrderMust as(String alias) {
        return new B2cOrderMust(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cOrderMust as(Name alias) {
        return new B2cOrderMust(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cOrderMust rename(String name) {
        return new B2cOrderMust(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cOrderMust rename(Name name) {
        return new B2cOrderMust(name, null);
    }
}
