/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cShopChildAccountRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cShopChildAccount extends TableImpl<B2cShopChildAccountRecord> {

    private static final long serialVersionUID = 883586249;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_shop_child_account</code>
     */
    public static final B2cShopChildAccount B2C_SHOP_CHILD_ACCOUNT = new B2cShopChildAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cShopChildAccountRecord> getRecordType() {
        return B2cShopChildAccountRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_shop_child_account.account_id</code>.
     */
    public final TableField<B2cShopChildAccountRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_shop_child_account.shop_id</code>. 店铺ID
     */
    public final TableField<B2cShopChildAccountRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "店铺ID");

    /**
     * The column <code>mini_shop_471752.b2c_shop_child_account.account_name</code>. 子账号用户名
     */
    public final TableField<B2cShopChildAccountRecord, String> ACCOUNT_NAME = createField("account_name", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "子账号用户名");

    /**
     * The column <code>mini_shop_471752.b2c_shop_child_account.account_pwd</code>. 子账号密码
     */
    public final TableField<B2cShopChildAccountRecord, String> ACCOUNT_PWD = createField("account_pwd", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "子账号密码");

    /**
     * The column <code>mini_shop_471752.b2c_shop_child_account.role_id</code>. 角色ID
     */
    public final TableField<B2cShopChildAccountRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "角色ID");

    /**
     * The column <code>mini_shop_471752.b2c_shop_child_account.create_time</code>.
     */
    public final TableField<B2cShopChildAccountRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_shop_child_account.mobile</code>. 手机号
     */
    public final TableField<B2cShopChildAccountRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "手机号");

    /**
     * Create a <code>mini_shop_471752.b2c_shop_child_account</code> table reference
     */
    public B2cShopChildAccount() {
        this(DSL.name("b2c_shop_child_account"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_shop_child_account</code> table reference
     */
    public B2cShopChildAccount(String alias) {
        this(DSL.name(alias), B2C_SHOP_CHILD_ACCOUNT);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_shop_child_account</code> table reference
     */
    public B2cShopChildAccount(Name alias) {
        this(alias, B2C_SHOP_CHILD_ACCOUNT);
    }

    private B2cShopChildAccount(Name alias, Table<B2cShopChildAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cShopChildAccount(Name alias, Table<B2cShopChildAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cShopChildAccount(Table<O> child, ForeignKey<O, B2cShopChildAccountRecord> key) {
        super(child, key, B2C_SHOP_CHILD_ACCOUNT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SHOP_CHILD_ACCOUNT_ACCOUNT_NAME, Indexes.B2C_SHOP_CHILD_ACCOUNT_PRIMARY, Indexes.B2C_SHOP_CHILD_ACCOUNT_SHOP_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cShopChildAccountRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_SHOP_CHILD_ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cShopChildAccountRecord> getPrimaryKey() {
        return Keys.KEY_B2C_SHOP_CHILD_ACCOUNT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cShopChildAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cShopChildAccountRecord>>asList(Keys.KEY_B2C_SHOP_CHILD_ACCOUNT_PRIMARY, Keys.KEY_B2C_SHOP_CHILD_ACCOUNT_ACCOUNT_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cShopChildAccount as(String alias) {
        return new B2cShopChildAccount(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cShopChildAccount as(Name alias) {
        return new B2cShopChildAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cShopChildAccount rename(String name) {
        return new B2cShopChildAccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cShopChildAccount rename(Name name) {
        return new B2cShopChildAccount(name, null);
    }
}
