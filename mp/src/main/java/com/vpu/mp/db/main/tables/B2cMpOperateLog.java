/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.main.tables;


import com.vpu.mp.db.main.Indexes;
import com.vpu.mp.db.main.Keys;
import com.vpu.mp.db.main.MiniMain;
import com.vpu.mp.db.main.tables.records.B2cMpOperateLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cMpOperateLog extends TableImpl<B2cMpOperateLogRecord> {

    private static final long serialVersionUID = -1097556352;

    /**
     * The reference instance of <code>mini_main.b2c_mp_operate_log</code>
     */
    public static final B2cMpOperateLog B2C_MP_OPERATE_LOG = new B2cMpOperateLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cMpOperateLogRecord> getRecordType() {
        return B2cMpOperateLogRecord.class;
    }

    /**
     * The column <code>mini_main.b2c_mp_operate_log.operate_id</code>. 自增ID
     */
    public final TableField<B2cMpOperateLogRecord, Integer> OPERATE_ID = createField("operate_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "自增ID");

    /**
     * The column <code>mini_main.b2c_mp_operate_log.app_id</code>. 小程序app_id
     */
    public final TableField<B2cMpOperateLogRecord, String> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "小程序app_id");

    /**
     * The column <code>mini_main.b2c_mp_operate_log.template_id</code>. 小程序模板Id
     */
    public final TableField<B2cMpOperateLogRecord, Integer> TEMPLATE_ID = createField("template_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "小程序模板Id");

    /**
     * The column <code>mini_main.b2c_mp_operate_log.operate_type</code>. 操作类型
     */
    public final TableField<B2cMpOperateLogRecord, Byte> OPERATE_TYPE = createField("operate_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "操作类型");

    /**
     * The column <code>mini_main.b2c_mp_operate_log.memo</code>. 操作日志
     */
    public final TableField<B2cMpOperateLogRecord, String> MEMO = createField("memo", org.jooq.impl.SQLDataType.CLOB, this, "操作日志");

    /**
     * The column <code>mini_main.b2c_mp_operate_log.create_time</code>. 记录时间
     */
    public final TableField<B2cMpOperateLogRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "记录时间");

    /**
     * Create a <code>mini_main.b2c_mp_operate_log</code> table reference
     */
    public B2cMpOperateLog() {
        this(DSL.name("b2c_mp_operate_log"), null);
    }

    /**
     * Create an aliased <code>mini_main.b2c_mp_operate_log</code> table reference
     */
    public B2cMpOperateLog(String alias) {
        this(DSL.name(alias), B2C_MP_OPERATE_LOG);
    }

    /**
     * Create an aliased <code>mini_main.b2c_mp_operate_log</code> table reference
     */
    public B2cMpOperateLog(Name alias) {
        this(alias, B2C_MP_OPERATE_LOG);
    }

    private B2cMpOperateLog(Name alias, Table<B2cMpOperateLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cMpOperateLog(Name alias, Table<B2cMpOperateLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cMpOperateLog(Table<O> child, ForeignKey<O, B2cMpOperateLogRecord> key) {
        super(child, key, B2C_MP_OPERATE_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniMain.MINI_MAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_MP_OPERATE_LOG_APP_ID, Indexes.B2C_MP_OPERATE_LOG_OPERATE_TYPE, Indexes.B2C_MP_OPERATE_LOG_PRIMARY, Indexes.B2C_MP_OPERATE_LOG_TEMPLATE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cMpOperateLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_MP_OPERATE_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cMpOperateLogRecord> getPrimaryKey() {
        return Keys.KEY_B2C_MP_OPERATE_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cMpOperateLogRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cMpOperateLogRecord>>asList(Keys.KEY_B2C_MP_OPERATE_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cMpOperateLog as(String alias) {
        return new B2cMpOperateLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cMpOperateLog as(Name alias) {
        return new B2cMpOperateLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cMpOperateLog rename(String name) {
        return new B2cMpOperateLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cMpOperateLog rename(Name name) {
        return new B2cMpOperateLog(name, null);
    }
}
