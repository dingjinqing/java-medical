/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cServiceMessageRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cServiceMessageRecord extends TableImpl<B2cServiceMessageRecordRecord> {

    private static final long serialVersionUID = 1472952015;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_service_message_record</code>
     */
    public static final B2cServiceMessageRecord B2C_SERVICE_MESSAGE_RECORD = new B2cServiceMessageRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cServiceMessageRecordRecord> getRecordType() {
        return B2cServiceMessageRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.user_id</code>. 用户ID
     */
    public final TableField<B2cServiceMessageRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "用户ID");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.mobile</code>. 用户手机号
     */
    public final TableField<B2cServiceMessageRecordRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(20), this, "用户手机号");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.request_action</code>. 请求类型：100:短信平台
     */
    public final TableField<B2cServiceMessageRecordRecord, Byte> REQUEST_ACTION = createField("request_action", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "请求类型：100:短信平台");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.identity_id</code>. 关联其他表：如：外部请求requestId
     */
    public final TableField<B2cServiceMessageRecordRecord, String> IDENTITY_ID = createField("identity_id", org.jooq.impl.SQLDataType.VARCHAR(50), this, "关联其他表：如：外部请求requestId");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.template_platform</code>. 模板平台：1： 小程序 2：公众号
     */
    public final TableField<B2cServiceMessageRecordRecord, Byte> TEMPLATE_PLATFORM = createField("template_platform", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "模板平台：1： 小程序 2：公众号");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.template_content</code>. 模板内容
     */
    public final TableField<B2cServiceMessageRecordRecord, String> TEMPLATE_CONTENT = createField("template_content", org.jooq.impl.SQLDataType.CLOB, this, "模板内容");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.response_code</code>. 响应code 0:成功 &gt;0 其他
     */
    public final TableField<B2cServiceMessageRecordRecord, String> RESPONSE_CODE = createField("response_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "响应code 0:成功 >0 其他");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.response_msg</code>. 响应结果
     */
    public final TableField<B2cServiceMessageRecordRecord, String> RESPONSE_MSG = createField("response_msg", org.jooq.impl.SQLDataType.VARCHAR(500), this, "响应结果");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.path</code>. 小程序路径
     */
    public final TableField<B2cServiceMessageRecordRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.VARCHAR(50), this, "小程序路径");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.path_query</code>. 小程序路径参数
     */
    public final TableField<B2cServiceMessageRecordRecord, String> PATH_QUERY = createField("path_query", org.jooq.impl.SQLDataType.VARCHAR(500), this, "小程序路径参数");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.send_status</code>. 1: 发送成功  0：未知
     */
    public final TableField<B2cServiceMessageRecordRecord, Byte> SEND_STATUS = createField("send_status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1: 发送成功  0：未知");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.is_visit</code>. 是否已点击访问 1：是 0： 否
     */
    public final TableField<B2cServiceMessageRecordRecord, Byte> IS_VISIT = createField("is_visit", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否已点击访问 1：是 0： 否");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.visit_time</code>. 访问时间
     */
    public final TableField<B2cServiceMessageRecordRecord, Timestamp> VISIT_TIME = createField("visit_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "访问时间");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.template_type</code>. 模板类型 7：商家自定义
     */
    public final TableField<B2cServiceMessageRecordRecord, Byte> TEMPLATE_TYPE = createField("template_type", org.jooq.impl.SQLDataType.TINYINT, this, "模板类型 7：商家自定义");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.link_identity</code>. 模板消息关联Id
     */
    public final TableField<B2cServiceMessageRecordRecord, String> LINK_IDENTITY = createField("link_identity", org.jooq.impl.SQLDataType.VARCHAR(50), this, "模板消息关联Id");

    /**
     * The column <code>mini_shop_471752.b2c_service_message_record.add_time</code>.
     */
    public final TableField<B2cServiceMessageRecordRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>mini_shop_471752.b2c_service_message_record</code> table reference
     */
    public B2cServiceMessageRecord() {
        this(DSL.name("b2c_service_message_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_service_message_record</code> table reference
     */
    public B2cServiceMessageRecord(String alias) {
        this(DSL.name(alias), B2C_SERVICE_MESSAGE_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_service_message_record</code> table reference
     */
    public B2cServiceMessageRecord(Name alias) {
        this(alias, B2C_SERVICE_MESSAGE_RECORD);
    }

    private B2cServiceMessageRecord(Name alias, Table<B2cServiceMessageRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cServiceMessageRecord(Name alias, Table<B2cServiceMessageRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cServiceMessageRecord(Table<O> child, ForeignKey<O, B2cServiceMessageRecordRecord> key) {
        super(child, key, B2C_SERVICE_MESSAGE_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_SERVICE_MESSAGE_RECORD_USER_REQUEST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cServiceMessageRecord as(String alias) {
        return new B2cServiceMessageRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cServiceMessageRecord as(Name alias) {
        return new B2cServiceMessageRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cServiceMessageRecord rename(String name) {
        return new B2cServiceMessageRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cServiceMessageRecord rename(Name name) {
        return new B2cServiceMessageRecord(name, null);
    }
}
