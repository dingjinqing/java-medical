/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cIndexFootRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cIndexFootRecord extends TableImpl<B2cIndexFootRecordRecord> {

    private static final long serialVersionUID = 1157472944;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_index_foot_record</code>
     */
    public static final B2cIndexFootRecord B2C_INDEX_FOOT_RECORD = new B2cIndexFootRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cIndexFootRecordRecord> getRecordType() {
        return B2cIndexFootRecordRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_index_foot_record.id</code>.
     */
    public final TableField<B2cIndexFootRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_index_foot_record.page_id</code>. 自定义页面ID
     */
    public final TableField<B2cIndexFootRecordRecord, Integer> PAGE_ID = createField("page_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "自定义页面ID");

    /**
     * The column <code>mini_shop_471752.b2c_index_foot_record.user_id</code>.
     */
    public final TableField<B2cIndexFootRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_index_foot_record.update_time</code>. 浏览时间
     */
    public final TableField<B2cIndexFootRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "浏览时间");

    /**
     * The column <code>mini_shop_471752.b2c_index_foot_record.count</code>. 浏览次数
     */
    public final TableField<B2cIndexFootRecordRecord, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "浏览次数");

    /**
     * The column <code>mini_shop_471752.b2c_index_foot_record.type</code>. 0 老用户 1新用户
     */
    public final TableField<B2cIndexFootRecordRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0 老用户 1新用户");

    /**
     * Create a <code>mini_shop_471752.b2c_index_foot_record</code> table reference
     */
    public B2cIndexFootRecord() {
        this(DSL.name("b2c_index_foot_record"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_index_foot_record</code> table reference
     */
    public B2cIndexFootRecord(String alias) {
        this(DSL.name(alias), B2C_INDEX_FOOT_RECORD);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_index_foot_record</code> table reference
     */
    public B2cIndexFootRecord(Name alias) {
        this(alias, B2C_INDEX_FOOT_RECORD);
    }

    private B2cIndexFootRecord(Name alias, Table<B2cIndexFootRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cIndexFootRecord(Name alias, Table<B2cIndexFootRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cIndexFootRecord(Table<O> child, ForeignKey<O, B2cIndexFootRecordRecord> key) {
        super(child, key, B2C_INDEX_FOOT_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_INDEX_FOOT_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cIndexFootRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_INDEX_FOOT_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cIndexFootRecordRecord> getPrimaryKey() {
        return Keys.KEY_B2C_INDEX_FOOT_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cIndexFootRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cIndexFootRecordRecord>>asList(Keys.KEY_B2C_INDEX_FOOT_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cIndexFootRecord as(String alias) {
        return new B2cIndexFootRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cIndexFootRecord as(Name alias) {
        return new B2cIndexFootRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cIndexFootRecord rename(String name) {
        return new B2cIndexFootRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cIndexFootRecord rename(Name name) {
        return new B2cIndexFootRecord(name, null);
    }
}
