/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cJoinDrawListRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cJoinDrawList extends TableImpl<B2cJoinDrawListRecord> {

    private static final long serialVersionUID = -716612637;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_join_draw_list</code>
     */
    public static final B2cJoinDrawList B2C_JOIN_DRAW_LIST = new B2cJoinDrawList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cJoinDrawListRecord> getRecordType() {
        return B2cJoinDrawListRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_join_draw_list.id</code>.
     */
    public final TableField<B2cJoinDrawListRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_join_draw_list.group_draw_id</code>. 拼团抽奖ID
     */
    public final TableField<B2cJoinDrawListRecord, Integer> GROUP_DRAW_ID = createField("group_draw_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "拼团抽奖ID");

    /**
     * The column <code>mini_shop_471752.b2c_join_draw_list.goods_id</code>. 商品ID
     */
    public final TableField<B2cJoinDrawListRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品ID");

    /**
     * The column <code>mini_shop_471752.b2c_join_draw_list.group_id</code>. 拼团ID
     */
    public final TableField<B2cJoinDrawListRecord, Integer> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "拼团ID");

    /**
     * The column <code>mini_shop_471752.b2c_join_draw_list.user_id</code>. 抽奖用户ID
     */
    public final TableField<B2cJoinDrawListRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "抽奖用户ID");

    /**
     * The column <code>mini_shop_471752.b2c_join_draw_list.draw_id</code>. 抽奖序列ID
     */
    public final TableField<B2cJoinDrawListRecord, Integer> DRAW_ID = createField("draw_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "抽奖序列ID");

    /**
     * The column <code>mini_shop_471752.b2c_join_draw_list.is_win_draw</code>. 是否已中奖
     */
    public final TableField<B2cJoinDrawListRecord, Byte> IS_WIN_DRAW = createField("is_win_draw", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否已中奖");

    /**
     * The column <code>mini_shop_471752.b2c_join_draw_list.add_time</code>. 添加时间
     */
    public final TableField<B2cJoinDrawListRecord, Timestamp> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "添加时间");

    /**
     * Create a <code>mini_shop_471752.b2c_join_draw_list</code> table reference
     */
    public B2cJoinDrawList() {
        this(DSL.name("b2c_join_draw_list"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_join_draw_list</code> table reference
     */
    public B2cJoinDrawList(String alias) {
        this(DSL.name(alias), B2C_JOIN_DRAW_LIST);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_join_draw_list</code> table reference
     */
    public B2cJoinDrawList(Name alias) {
        this(alias, B2C_JOIN_DRAW_LIST);
    }

    private B2cJoinDrawList(Name alias, Table<B2cJoinDrawListRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cJoinDrawList(Name alias, Table<B2cJoinDrawListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cJoinDrawList(Table<O> child, ForeignKey<O, B2cJoinDrawListRecord> key) {
        super(child, key, B2C_JOIN_DRAW_LIST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_JOIN_DRAW_LIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cJoinDrawListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_JOIN_DRAW_LIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cJoinDrawListRecord> getPrimaryKey() {
        return Keys.KEY_B2C_JOIN_DRAW_LIST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cJoinDrawListRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cJoinDrawListRecord>>asList(Keys.KEY_B2C_JOIN_DRAW_LIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cJoinDrawList as(String alias) {
        return new B2cJoinDrawList(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cJoinDrawList as(Name alias) {
        return new B2cJoinDrawList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cJoinDrawList rename(String name) {
        return new B2cJoinDrawList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cJoinDrawList rename(Name name) {
        return new B2cJoinDrawList(name, null);
    }
}
