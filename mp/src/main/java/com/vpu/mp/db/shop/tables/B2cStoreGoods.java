/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cStoreGoodsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cStoreGoods extends TableImpl<B2cStoreGoodsRecord> {

    private static final long serialVersionUID = -1694959225;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_store_goods</code>
     */
    public static final B2cStoreGoods B2C_STORE_GOODS = new B2cStoreGoods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cStoreGoodsRecord> getRecordType() {
        return B2cStoreGoodsRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.store_id</code>.
     */
    public final TableField<B2cStoreGoodsRecord, Integer> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.goods_id</code>.
     */
    public final TableField<B2cStoreGoodsRecord, Integer> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.prd_id</code>.
     */
    public final TableField<B2cStoreGoodsRecord, Integer> PRD_ID = createField("prd_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.prd_sn</code>.
     */
    public final TableField<B2cStoreGoodsRecord, String> PRD_SN = createField("prd_sn", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.product_number</code>. 库存
     */
    public final TableField<B2cStoreGoodsRecord, Integer> PRODUCT_NUMBER = createField("product_number", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "库存");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.product_price</code>. 价格
     */
    public final TableField<B2cStoreGoodsRecord, BigDecimal> PRODUCT_PRICE = createField("product_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "价格");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.is_sync</code>. 是否已同步
     */
    public final TableField<B2cStoreGoodsRecord, Byte> IS_SYNC = createField("is_sync", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否已同步");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.is_on_sale</code>. '是否在售，1在售，0下架'
     */
    public final TableField<B2cStoreGoodsRecord, Byte> IS_ON_SALE = createField("is_on_sale", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "'是否在售，1在售，0下架'");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.up_time</code>.
     */
    public final TableField<B2cStoreGoodsRecord, Timestamp> UP_TIME = createField("up_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_store_goods.flag</code>. 1:初始化数据，0:无效数据
     */
    public final TableField<B2cStoreGoodsRecord, Byte> FLAG = createField("flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1:初始化数据，0:无效数据");

    /**
     * Create a <code>mini_shop_471752.b2c_store_goods</code> table reference
     */
    public B2cStoreGoods() {
        this(DSL.name("b2c_store_goods"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_store_goods</code> table reference
     */
    public B2cStoreGoods(String alias) {
        this(DSL.name(alias), B2C_STORE_GOODS);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_store_goods</code> table reference
     */
    public B2cStoreGoods(Name alias) {
        this(alias, B2C_STORE_GOODS);
    }

    private B2cStoreGoods(Name alias, Table<B2cStoreGoodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cStoreGoods(Name alias, Table<B2cStoreGoodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cStoreGoods(Table<O> child, ForeignKey<O, B2cStoreGoodsRecord> key) {
        super(child, key, B2C_STORE_GOODS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_STORE_GOODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cStoreGoodsRecord> getPrimaryKey() {
        return Keys.KEY_B2C_STORE_GOODS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cStoreGoodsRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cStoreGoodsRecord>>asList(Keys.KEY_B2C_STORE_GOODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cStoreGoods as(String alias) {
        return new B2cStoreGoods(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cStoreGoods as(Name alias) {
        return new B2cStoreGoods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cStoreGoods rename(String name) {
        return new B2cStoreGoods(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cStoreGoods rename(Name name) {
        return new B2cStoreGoods(name, null);
    }
}
