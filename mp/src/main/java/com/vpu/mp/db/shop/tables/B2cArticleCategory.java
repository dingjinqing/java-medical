/*
 * This file is generated by jOOQ.
 */
package com.vpu.mp.db.shop.tables;


import com.vpu.mp.db.shop.Indexes;
import com.vpu.mp.db.shop.Keys;
import com.vpu.mp.db.shop.MiniShop_471752;
import com.vpu.mp.db.shop.tables.records.B2cArticleCategoryRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class B2cArticleCategory extends TableImpl<B2cArticleCategoryRecord> {

    private static final long serialVersionUID = 29096315;

    /**
     * The reference instance of <code>mini_shop_471752.b2c_article_category</code>
     */
    public static final B2cArticleCategory B2C_ARTICLE_CATEGORY = new B2cArticleCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<B2cArticleCategoryRecord> getRecordType() {
        return B2cArticleCategoryRecord.class;
    }

    /**
     * The column <code>mini_shop_471752.b2c_article_category.category_id</code>.
     */
    public final TableField<B2cArticleCategoryRecord, Integer> CATEGORY_ID = createField("category_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_article_category.category_name</code>.
     */
    public final TableField<B2cArticleCategoryRecord, String> CATEGORY_NAME = createField("category_name", org.jooq.impl.SQLDataType.VARCHAR(191).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mini_shop_471752.b2c_article_category.use_footer_nav</code>. 是否用于底部导航
     */
    public final TableField<B2cArticleCategoryRecord, Byte> USE_FOOTER_NAV = createField("use_footer_nav", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否用于底部导航");

    /**
     * Create a <code>mini_shop_471752.b2c_article_category</code> table reference
     */
    public B2cArticleCategory() {
        this(DSL.name("b2c_article_category"), null);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_article_category</code> table reference
     */
    public B2cArticleCategory(String alias) {
        this(DSL.name(alias), B2C_ARTICLE_CATEGORY);
    }

    /**
     * Create an aliased <code>mini_shop_471752.b2c_article_category</code> table reference
     */
    public B2cArticleCategory(Name alias) {
        this(alias, B2C_ARTICLE_CATEGORY);
    }

    private B2cArticleCategory(Name alias, Table<B2cArticleCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private B2cArticleCategory(Name alias, Table<B2cArticleCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> B2cArticleCategory(Table<O> child, ForeignKey<O, B2cArticleCategoryRecord> key) {
        super(child, key, B2C_ARTICLE_CATEGORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MiniShop_471752.MINI_SHOP_471752;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.B2C_ARTICLE_CATEGORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<B2cArticleCategoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_B2C_ARTICLE_CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<B2cArticleCategoryRecord> getPrimaryKey() {
        return Keys.KEY_B2C_ARTICLE_CATEGORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<B2cArticleCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<B2cArticleCategoryRecord>>asList(Keys.KEY_B2C_ARTICLE_CATEGORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cArticleCategory as(String alias) {
        return new B2cArticleCategory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public B2cArticleCategory as(Name alias) {
        return new B2cArticleCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cArticleCategory rename(String name) {
        return new B2cArticleCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public B2cArticleCategory rename(Name name) {
        return new B2cArticleCategory(name, null);
    }
}
